gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;--------------------------------------------------------
               00002 ; File Created by SDCC : free open source ANSI-C Compiler
               00003 ; Version 2.9.4 #5595 (Nov 14 2017) (UNIX)
               00004 ; This file was generated Mon Nov 20 23:13:55 2017
               00005 ;--------------------------------------------------------
               00006 ; PIC16 port for the Microchip 16-bit core micros
               00007 ;--------------------------------------------------------
               00008         list    p=18f97j60
               00009 
               00010         radix dec
               00011 
               00012 ;--------------------------------------------------------
               00013 ; public variables in this module
               00014 ;--------------------------------------------------------
               00015         global _clock_seconds
               00016         global _clock_minutes
               00017         global _clock_hours
               00018         global _DisplayWORD
               00019         global _DisplayString
               00020         global _strlcpy
               00021         global _in_setting
               00022         global _awake_hours
               00023         global _awake_minutes
               00024         global _setting_hours
               00025         global _setting_minutes
               00026         global _time_setting_procedure
               00027         global _awake_setting_procedure
               00028         global _set
               00029         global _time_value
               00030         global _update_setting_hours
               00031         global _update_setting_minutes
               00032         global _update_awake_hours
               00033         global _update_awake_minutes
               00034         global _update_time
               00035         global _handle_button1_pressure
               00036         global _handle_button2_pressure
               00037         global _high_isr
               00038         global _main
               00039 
               00040 ;--------------------------------------------------------
               00041 ; extern variables in this module
               00042 ;--------------------------------------------------------
               00043         extern __gptrput1
               00044         extern __gptrget1
               00045         extern _EBSTCONbits
               00046         extern _MISTATbits
               00047         extern _EFLOCONbits
               00048         extern _MACON1bits
               00049         extern _MACON2bits
               00050         extern _MACON3bits
               00051         extern _MACON4bits
               00052         extern _MACLCON1bits
               00053         extern _MACLCON2bits
               00054         extern _MICONbits
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00055         extern _MICMDbits
               00056         extern _EWOLIEbits
               00057         extern _EWOLIRbits
               00058         extern _ERXFCONbits
               00059         extern _EIEbits
               00060         extern _ESTATbits
               00061         extern _ECON2bits
               00062         extern _EIRbits
               00063         extern _EDATAbits
               00064         extern _SSP2CON2bits
               00065         extern _SSP2CON1bits
               00066         extern _SSP2STATbits
               00067         extern _ECCP2DELbits
               00068         extern _ECCP2ASbits
               00069         extern _ECCP3DELbits
               00070         extern _ECCP3ASbits
               00071         extern _RCSTA2bits
               00072         extern _TXSTA2bits
               00073         extern _CCP5CONbits
               00074         extern _CCP4CONbits
               00075         extern _T4CONbits
               00076         extern _ECCP1DELbits
               00077         extern _BAUDCON2bits
               00078         extern _BAUDCTL2bits
               00079         extern _BAUDCONbits
               00080         extern _BAUDCON1bits
               00081         extern _BAUDCTLbits
               00082         extern _BAUDCTL1bits
               00083         extern _PORTAbits
               00084         extern _PORTBbits
               00085         extern _PORTCbits
               00086         extern _PORTDbits
               00087         extern _PORTEbits
               00088         extern _PORTFbits
               00089         extern _PORTGbits
               00090         extern _PORTHbits
               00091         extern _PORTJbits
               00092         extern _LATAbits
               00093         extern _LATBbits
               00094         extern _LATCbits
               00095         extern _LATDbits
               00096         extern _LATEbits
               00097         extern _LATFbits
               00098         extern _LATGbits
               00099         extern _LATHbits
               00100         extern _LATJbits
               00101         extern _DDRAbits
               00102         extern _TRISAbits
               00103         extern _DDRBbits
               00104         extern _TRISBbits
               00105         extern _DDRCbits
               00106         extern _TRISCbits
               00107         extern _DDRDbits
               00108         extern _TRISDbits
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00109         extern _DDREbits
               00110         extern _TRISEbits
               00111         extern _DDRFbits
               00112         extern _TRISFbits
               00113         extern _DDRGbits
               00114         extern _TRISGbits
               00115         extern _DDRHbits
               00116         extern _TRISHbits
               00117         extern _DDRJbits
               00118         extern _TRISJbits
               00119         extern _OSCTUNEbits
               00120         extern _MEMCONbits
               00121         extern _PIE1bits
               00122         extern _PIR1bits
               00123         extern _IPR1bits
               00124         extern _PIE2bits
               00125         extern _PIR2bits
               00126         extern _IPR2bits
               00127         extern _PIE3bits
               00128         extern _PIR3bits
               00129         extern _IPR3bits
               00130         extern _EECON1bits
               00131         extern _RCSTAbits
               00132         extern _RCSTA1bits
               00133         extern _TXSTAbits
               00134         extern _TXSTA1bits
               00135         extern _PSPCONbits
               00136         extern _T3CONbits
               00137         extern _CMCONbits
               00138         extern _CVRCONbits
               00139         extern _ECCP1ASbits
               00140         extern _CCP3CONbits
               00141         extern _ECCP3CONbits
               00142         extern _CCP2CONbits
               00143         extern _ECCP2CONbits
               00144         extern _CCP1CONbits
               00145         extern _ECCP1CONbits
               00146         extern _ADCON2bits
               00147         extern _ADCON1bits
               00148         extern _ADCON0bits
               00149         extern _SSP1CON2bits
               00150         extern _SSPCON2bits
               00151         extern _SSP1CON1bits
               00152         extern _SSPCON1bits
               00153         extern _SSP1STATbits
               00154         extern _SSPSTATbits
               00155         extern _T2CONbits
               00156         extern _T1CONbits
               00157         extern _RCONbits
               00158         extern _WDTCONbits
               00159         extern _ECON1bits
               00160         extern _OSCCONbits
               00161         extern _T0CONbits
               00162         extern _STATUSbits
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00163         extern _INTCON3bits
               00164         extern _INTCON2bits
               00165         extern _INTCONbits
               00166         extern _STKPTRbits
               00167         extern _stdin
               00168         extern _stdout
               00169         extern _LCDText
               00170         extern _MAADR5
               00171         extern _MAADR6
               00172         extern _MAADR3
               00173         extern _MAADR4
               00174         extern _MAADR1
               00175         extern _MAADR2
               00176         extern _EBSTSD
               00177         extern _EBSTCON
               00178         extern _EBSTCS
               00179         extern _EBSTCSL
               00180         extern _EBSTCSH
               00181         extern _MISTAT
               00182         extern _EFLOCON
               00183         extern _EPAUS
               00184         extern _EPAUSL
               00185         extern _EPAUSH
               00186         extern _MACON1
               00187         extern _MACON2
               00188         extern _MACON3
               00189         extern _MACON4
               00190         extern _MABBIPG
               00191         extern _MAIPG
               00192         extern _MAIPGL
               00193         extern _MAIPGH
               00194         extern _MACLCON1
               00195         extern _MACLCON2
               00196         extern _MAMXFL
               00197         extern _MAMXFLL
               00198         extern _MAMXFLH
               00199         extern _MICON
               00200         extern _MICMD
               00201         extern _MIREGADR
               00202         extern _MIWR
               00203         extern _MIWRL
               00204         extern _MIWRH
               00205         extern _MIRD
               00206         extern _MIRDL
               00207         extern _MIRDH
               00208         extern _EHT0
               00209         extern _EHT1
               00210         extern _EHT2
               00211         extern _EHT3
               00212         extern _EHT4
               00213         extern _EHT5
               00214         extern _EHT6
               00215         extern _EHT7
               00216         extern _EPMM0
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00217         extern _EPMM1
               00218         extern _EPMM2
               00219         extern _EPMM3
               00220         extern _EPMM4
               00221         extern _EPMM5
               00222         extern _EPMM6
               00223         extern _EPMM7
               00224         extern _EPMCS
               00225         extern _EPMCSL
               00226         extern _EPMCSH
               00227         extern _EPMO
               00228         extern _EPMOL
               00229         extern _EPMOH
               00230         extern _EWOLIE
               00231         extern _EWOLIR
               00232         extern _ERXFCON
               00233         extern _EPKTCNT
               00234         extern _EWRPT
               00235         extern _EWRPTL
               00236         extern _EWRPTH
               00237         extern _ETXST
               00238         extern _ETXSTL
               00239         extern _ETXSTH
               00240         extern _ETXND
               00241         extern _ETXNDL
               00242         extern _ETXNDH
               00243         extern _ERXST
               00244         extern _ERXSTL
               00245         extern _ERXSTH
               00246         extern _ERXND
               00247         extern _ERXNDL
               00248         extern _ERXNDH
               00249         extern _ERXRDPT
               00250         extern _ERXRDPTL
               00251         extern _ERXRDPTH
               00252         extern _ERXWRPT
               00253         extern _ERXWRPTL
               00254         extern _ERXWRPTH
               00255         extern _EDMAST
               00256         extern _EDMASTL
               00257         extern _EDMASTH
               00258         extern _EDMAND
               00259         extern _EDMANDL
               00260         extern _EDMANDH
               00261         extern _EDMADST
               00262         extern _EDMADSTL
               00263         extern _EDMADSTH
               00264         extern _EDMACS
               00265         extern _EDMACSL
               00266         extern _EDMACSH
               00267         extern _EIE
               00268         extern _ESTAT
               00269         extern _ECON2
               00270         extern _EIR
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00271         extern _EDATA
               00272         extern _SSP2CON2
               00273         extern _SSP2CON1
               00274         extern _SSP2STAT
               00275         extern _SSP2ADD
               00276         extern _SSP2BUF
               00277         extern _ECCP2DEL
               00278         extern _ECCP2AS
               00279         extern _ECCP3DEL
               00280         extern _ECCP3AS
               00281         extern _RCSTA2
               00282         extern _TXSTA2
               00283         extern _TXREG2
               00284         extern _RCREG2
               00285         extern _SPBRG2
               00286         extern _CCP5CON
               00287         extern _CCPR5
               00288         extern _CCPR5L
               00289         extern _CCPR5H
               00290         extern _CCP4CON
               00291         extern _CCPR4
               00292         extern _CCPR4L
               00293         extern _CCPR4H
               00294         extern _T4CON
               00295         extern _PR4
               00296         extern _TMR4
               00297         extern _ECCP1DEL
               00298         extern _ERDPT
               00299         extern _ERDPTL
               00300         extern _ERDPTH
               00301         extern _BAUDCON2
               00302         extern _BAUDCTL2
               00303         extern _SPBRGH2
               00304         extern _BAUDCON
               00305         extern _BAUDCON1
               00306         extern _BAUDCTL
               00307         extern _BAUDCTL1
               00308         extern _SPBRGH
               00309         extern _SPBRGH1
               00310         extern _PORTA
               00311         extern _PORTB
               00312         extern _PORTC
               00313         extern _PORTD
               00314         extern _PORTE
               00315         extern _PORTF
               00316         extern _PORTG
               00317         extern _PORTH
               00318         extern _PORTJ
               00319         extern _LATA
               00320         extern _LATB
               00321         extern _LATC
               00322         extern _LATD
               00323         extern _LATE
               00324         extern _LATF
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00325         extern _LATG
               00326         extern _LATH
               00327         extern _LATJ
               00328         extern _DDRA
               00329         extern _TRISA
               00330         extern _DDRB
               00331         extern _TRISB
               00332         extern _DDRC
               00333         extern _TRISC
               00334         extern _DDRD
               00335         extern _TRISD
               00336         extern _DDRE
               00337         extern _TRISE
               00338         extern _DDRF
               00339         extern _TRISF
               00340         extern _DDRG
               00341         extern _TRISG
               00342         extern _DDRH
               00343         extern _TRISH
               00344         extern _DDRJ
               00345         extern _TRISJ
               00346         extern _OSCTUNE
               00347         extern _MEMCON
               00348         extern _PIE1
               00349         extern _PIR1
               00350         extern _IPR1
               00351         extern _PIE2
               00352         extern _PIR2
               00353         extern _IPR2
               00354         extern _PIE3
               00355         extern _PIR3
               00356         extern _IPR3
               00357         extern _EECON1
               00358         extern _EECON2
               00359         extern _RCSTA
               00360         extern _RCSTA1
               00361         extern _TXSTA
               00362         extern _TXSTA1
               00363         extern _TXREG
               00364         extern _TXREG1
               00365         extern _RCREG
               00366         extern _RCREG1
               00367         extern _SPBRG
               00368         extern _SPBRG1
               00369         extern _PSPCON
               00370         extern _T3CON
               00371         extern _TMR3L
               00372         extern _TMR3H
               00373         extern _CMCON
               00374         extern _CVRCON
               00375         extern _ECCP1AS
               00376         extern _CCP3CON
               00377         extern _ECCP3CON
               00378         extern _CCPR3
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00379         extern _CCPR3L
               00380         extern _CCPR3H
               00381         extern _CCP2CON
               00382         extern _ECCP2CON
               00383         extern _CCPR2
               00384         extern _CCPR2L
               00385         extern _CCPR2H
               00386         extern _CCP1CON
               00387         extern _ECCP1CON
               00388         extern _CCPR1
               00389         extern _CCPR1L
               00390         extern _CCPR1H
               00391         extern _ADCON2
               00392         extern _ADCON1
               00393         extern _ADCON0
               00394         extern _ADRES
               00395         extern _ADRESL
               00396         extern _ADRESH
               00397         extern _SSP1CON2
               00398         extern _SSPCON2
               00399         extern _SSP1CON1
               00400         extern _SSPCON1
               00401         extern _SSP1STAT
               00402         extern _SSPSTAT
               00403         extern _SSP1ADD
               00404         extern _SSPADD
               00405         extern _SSP1BUF
               00406         extern _SSPBUF
               00407         extern _T2CON
               00408         extern _PR2
               00409         extern _TMR2
               00410         extern _T1CON
               00411         extern _TMR1L
               00412         extern _TMR1H
               00413         extern _RCON
               00414         extern _WDTCON
               00415         extern _ECON1
               00416         extern _OSCCON
               00417         extern _T0CON
               00418         extern _TMR0L
               00419         extern _TMR0H
               00420         extern _STATUS
               00421         extern _FSR2L
               00422         extern _FSR2H
               00423         extern _PLUSW2
               00424         extern _PREINC2
               00425         extern _POSTDEC2
               00426         extern _POSTINC2
               00427         extern _INDF2
               00428         extern _BSR
               00429         extern _FSR1L
               00430         extern _FSR1H
               00431         extern _PLUSW1
               00432         extern _PREINC1
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00433         extern _POSTDEC1
               00434         extern _POSTINC1
               00435         extern _INDF1
               00436         extern _WREG
               00437         extern _FSR0L
               00438         extern _FSR0H
               00439         extern _PLUSW0
               00440         extern _PREINC0
               00441         extern _POSTDEC0
               00442         extern _POSTINC0
               00443         extern _INDF0
               00444         extern _INTCON3
               00445         extern _INTCON2
               00446         extern _INTCON
               00447         extern _PROD
               00448         extern _PRODL
               00449         extern _PRODH
               00450         extern _TABLAT
               00451         extern _TBLPTR
               00452         extern _TBLPTRL
               00453         extern _TBLPTRH
               00454         extern _TBLPTRU
               00455         extern _PC
               00456         extern _PCL
               00457         extern _PCLATH
               00458         extern _PCLATU
               00459         extern _STKPTR
               00460         extern _TOS
               00461         extern _TOSL
               00462         extern _TOSH
               00463         extern _TOSU
               00464         extern _sprintf
               00465         extern _ultoa
               00466         extern _strlen
               00467         extern _LCDInit
               00468         extern _LCDUpdate
               00469 ;--------------------------------------------------------
               00470 ;       Equates to used internal registers
               00471 ;--------------------------------------------------------
  00000FD8     00472 STATUS  equ     0xfd8
  00000FFA     00473 PCLATH  equ     0xffa
  00000FFB     00474 PCLATU  equ     0xffb
  00000FE8     00475 WREG    equ     0xfe8
  00000FE0     00476 BSR     equ     0xfe0
  00000FE9     00477 FSR0L   equ     0xfe9
  00000FEA     00478 FSR0H   equ     0xfea
  00000FE1     00479 FSR1L   equ     0xfe1
  00000FD9     00480 FSR2L   equ     0xfd9
  00000FEF     00481 INDF0   equ     0xfef
  00000FE5     00482 POSTDEC1        equ     0xfe5
  00000FE4     00483 PREINC1 equ     0xfe4
  00000FDB     00484 PLUSW2  equ     0xfdb
  00000FF3     00485 PRODL   equ     0xff3
  00000FF4     00486 PRODH   equ     0xff4
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00487 
               00488 
               00489         idata
               00490 _clock_hours    db      0x00, 0x00
               00491 _clock_minutes  db      0x00, 0x00
               00492 _clock_seconds  db      0x00, 0x00
               00493 _awake_hours    db      0x00, 0x00
               00494 _awake_minutes  db      0x00, 0x00
               00495 _setting_hours  db      0x00, 0x00
               00496 _setting_minutes        db      0x00, 0x00
               00497 _time_setting_procedure db      0x01, 0x00
               00498 _awake_setting_procedure        db      0x00, 0x00
               00499 _set    db      0x00, 0x00
               00500 
               00501 
               00502 ; Internal registers
               00503 .registers      udata_ovr       0x0000
               00504 r0x00   res     1
               00505 r0x01   res     1
               00506 r0x02   res     1
               00507 r0x03   res     1
               00508 r0x04   res     1
               00509 r0x05   res     1
               00510 r0x06   res     1
               00511 r0x07   res     1
               00512 r0x08   res     1
               00513 r0x09   res     1
               00514 r0x0a   res     1
               00515 r0x0b   res     1
               00516 r0x0c   res     1
               00517 r0x0d   res     1
               00518 r0x0e   res     1
               00519 r0x0f   res     1
               00520 r0x10   res     1
               00521 r0x11   res     1
               00522 r0x12   res     1
               00523 r0x13   res     1
               00524 r0x14   res     1
               00525 r0x15   res     1
               00526 
               00527 udata_timer_0   udata
               00528 _time_value     res     6
               00529 
               00530 udata_timer_1   udata
               00531 _in_setting     res     1
               00532 
               00533 udata_timer_2   udata
               00534 _DisplayWORD_WDigit_1_1 res     6
               00535 
               00536 ;--------------------------------------------------------
               00537 ; interrupt vector 
               00538 ;--------------------------------------------------------
               00539 
               00540 ;--------------------------------------------------------
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00541 ; global & static initialisations
               00542 ;--------------------------------------------------------
               00543 ; ; Starting pCode block for absolute section
               00544 ; ;-----------------------------------------
               00545 S_timer_ivec_0x1_high_isr       code    0X000008
0008 00546 ivec_0x1_high_isr:
0008 EF00 F000 00547         GOTO    _high_isr
               00548 
               00549 ; I code from now on!
               00550 ; ; Starting pCode block
               00551 S_timer__main   code
0000 00552 _main:
               00553 ;       .line   134; timer.c    time_value[0] = time_value[1] = time_value[3] = time_value[4] = '0';
0000 0E30      00554         MOVLW   0x30
0002 0000      00555         BANKSEL (_time_value + 4)
0004 6F00      00556         MOVWF   (_time_value + 4), B
0006 0E30      00557         MOVLW   0x30
0008 0000      00558         BANKSEL (_time_value + 3)
000A 6F00      00559         MOVWF   (_time_value + 3), B
000C 0E30      00560         MOVLW   0x30
000E 0000      00561         BANKSEL (_time_value + 1)
0010 6F00      00562         MOVWF   (_time_value + 1), B
0012 0E30      00563         MOVLW   0x30
0014 0000      00564         BANKSEL _time_value
0016 6F00      00565         MOVWF   _time_value, B
               00566 ;       .line   135; timer.c    time_value[2] = ':';
0018 0E3A      00567         MOVLW   0x3a
001A 0000      00568         BANKSEL (_time_value + 2)
001C 6F00      00569         MOVWF   (_time_value + 2), B
001E 0000      00570         BANKSEL (_time_value + 5)
               00571 ;       .line   136; timer.c    time_value[5] = '\0';
0020 6B00      00572         CLRF    (_time_value + 5), B
               00573 ;       .line   138; timer.c    LCDInit();
0022 EC00 F000 00574         CALL    _LCDInit
               00575 ;       .line   139; timer.c    DelayMs(100);
0026 0E10      00576         MOVLW   0x10
0028 6E00      00577         MOVWF   r0x00
002A 0E98      00578         MOVLW   0x98
002C 6E00      00579         MOVWF   r0x01
002E 0E02      00580         MOVLW   0x02
0030 6E00      00581         MOVWF   r0x02
0032 6A00      00582         CLRF    r0x03
0034 00583 _00206_DS_:
0034 C000 F000 00584         MOVFF   r0x00, r0x04
0038 C000 F000 00585         MOVFF   r0x01, r0x05
003C C000 F000 00586         MOVFF   r0x02, r0x06
0040 C000 F000 00587         MOVFF   r0x03, r0x07
0044 0EFF      00588         MOVLW   0xff
0046 2600      00589         ADDWF   r0x00, F
0048 0EFF      00590         MOVLW   0xff
004A 2200      00591         ADDWFC  r0x01, F
004C 0EFF      00592         MOVLW   0xff
004E 2200      00593         ADDWFC  r0x02, F
0050 0EFF      00594         MOVLW   0xff
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0052 2200      00595         ADDWFC  r0x03, F
0054 5000      00596         MOVF    r0x04, W
0056 1000      00597         IORWF   r0x05, W
0058 1000      00598         IORWF   r0x06, W
005A 1000      00599         IORWF   r0x07, W
005C E100      00600         BNZ     _00206_DS_
               00601 ;       .line   141; timer.c    RCONbits.IPEN      = 1;   //enable interrupts priority levels
005E 8E00      00602         BSF     _RCONbits, 7
               00603 ;       .line   142; timer.c    INTCON3bits.INT1P  = 1;   //connect INT1 interrupt (button 2) to high prio
0060 8C00      00604         BSF     _INTCON3bits, 6
               00605 ;       .line   143; timer.c    INTCON2bits.INT3IP = 1;
0062 8200      00606         BSF     _INTCON2bits, 1
               00607 ;       .line   144; timer.c    INTCON2bits.INTEDG1= 0;   //INT1 interrupts on falling edge
0064 9A00      00608         BCF     _INTCON2bits, 5
               00609 ;       .line   145; timer.c    INTCON2bits.INTEDG3= 0;   //connect INT1 interrupt (button 2) to high prio
0066 9600      00610         BCF     _INTCON2bits, 3
               00611 ;       .line   146; timer.c    INTCONbits.GIE     = 1;   //enable high priority interrupts
0068 8E00      00612         BSF     _INTCONbits, 7
               00613 ;       .line   147; timer.c    INTCON3bits.INT1F  = 0;   //clear INT1 flag
006A 9000      00614         BCF     _INTCON3bits, 0
               00615 ;       .line   148; timer.c    INTCON3bits.INT3F  = 0;
006C 9400      00616         BCF     _INTCON3bits, 2
               00617 ;       .line   149; timer.c    INTCON3bits.INT1E  = 1;   //enable INT1 interrupt (button 2)
006E 8600      00618         BSF     _INTCON3bits, 3
               00619 ;       .line   150; timer.c    INTCON3bits.INT3E  = 1;   
0070 8A00      00620         BSF     _INTCON3bits, 5
               00621 ;       .line   152; timer.c    DisplayString(0,"Enter the time:");
0072 0E00      00622         MOVLW   UPPER(__str_1)
0074 6EE5      00623         MOVWF   POSTDEC1
0076 0E00      00624         MOVLW   HIGH(__str_1)
0078 6EE5      00625         MOVWF   POSTDEC1
007A 0E00      00626         MOVLW   LOW(__str_1)
007C 6EE5      00627         MOVWF   POSTDEC1
007E 0E00      00628         MOVLW   0x00
0080 6EE5      00629         MOVWF   POSTDEC1
0082 EC00 F000 00630         CALL    _DisplayString
0086 0E04      00631         MOVLW   0x04
0088 26E1      00632         ADDWF   FSR1L, F
               00633 ;       .line   153; timer.c    DisplayString(16, "00:00");
008A 0E00      00634         MOVLW   UPPER(__str_2)
008C 6EE5      00635         MOVWF   POSTDEC1
008E 0E00      00636         MOVLW   HIGH(__str_2)
0090 6EE5      00637         MOVWF   POSTDEC1
0092 0E00      00638         MOVLW   LOW(__str_2)
0094 6EE5      00639         MOVWF   POSTDEC1
0096 0E10      00640         MOVLW   0x10
0098 6EE5      00641         MOVWF   POSTDEC1
009A EC00 F000 00642         CALL    _DisplayString
009E 0E04      00643         MOVLW   0x04
00A0 26E1      00644         ADDWF   FSR1L, F
               00645 ;       .line   154; timer.c    LCDUpdate();
00A2 EC00 F000 00646         CALL    _LCDUpdate
00A6 0000      00647         BANKSEL _in_setting
               00648 ;       .line   156; timer.c    in_setting = HOURS;
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00A8 6B00      00649         CLRF    _in_setting, B
00AA 00650 _00220_DS_:
00AA 0000      00651         BANKSEL _awake_setting_procedure
               00652 ;       .line   159; timer.c    if (awake_setting_procedure && awake_hours == 0 && awake_minutes == 0) {
00AC 5100      00653         MOVF    _awake_setting_procedure, W, B
00AE 0000      00654         BANKSEL (_awake_setting_procedure + 1)
00B0 1100      00655         IORWF   (_awake_setting_procedure + 1), W, B
00B2 E000      00656         BZ      _00215_DS_
00B4 0000      00657         BANKSEL _awake_hours
00B6 5100      00658         MOVF    _awake_hours, W, B
00B8 0000      00659         BANKSEL (_awake_hours + 1)
00BA 1100      00660         IORWF   (_awake_hours + 1), W, B
00BC E100      00661         BNZ     _00215_DS_
00BE 0000      00662         BANKSEL _awake_minutes
00C0 5100      00663         MOVF    _awake_minutes, W, B
00C2 0000      00664         BANKSEL (_awake_minutes + 1)
00C4 1100      00665         IORWF   (_awake_minutes + 1), W, B
00C6 E100      00666         BNZ     _00215_DS_
               00667 ;       .line   160; timer.c    DisplayString(0, "Enter the wake:");
00C8 0E00      00668         MOVLW   UPPER(__str_3)
00CA 6EE5      00669         MOVWF   POSTDEC1
00CC 0E00      00670         MOVLW   HIGH(__str_3)
00CE 6EE5      00671         MOVWF   POSTDEC1
00D0 0E00      00672         MOVLW   LOW(__str_3)
00D2 6EE5      00673         MOVWF   POSTDEC1
00D4 0E00      00674         MOVLW   0x00
00D6 6EE5      00675         MOVWF   POSTDEC1
00D8 EC00 F000 00676         CALL    _DisplayString
00DC 0E04      00677         MOVLW   0x04
00DE 26E1      00678         ADDWF   FSR1L, F
00E0 D000      00679         BRA     _00216_DS_
00E2 00680 _00215_DS_:
00E2 0000      00681         BANKSEL _set
               00682 ;       .line   161; timer.c    } else if (set) {
00E4 5100      00683         MOVF    _set, W, B
00E6 0000      00684         BANKSEL (_set + 1)
00E8 1100      00685         IORWF   (_set + 1), W, B
00EA E000      00686         BZ      _00216_DS_
               00687 ;       .line   162; timer.c    DisplayString(0, "               ");
00EC 0E00      00688         MOVLW   UPPER(__str_4)
00EE 6EE5      00689         MOVWF   POSTDEC1
00F0 0E00      00690         MOVLW   HIGH(__str_4)
00F2 6EE5      00691         MOVWF   POSTDEC1
00F4 0E00      00692         MOVLW   LOW(__str_4)
00F6 6EE5      00693         MOVWF   POSTDEC1
00F8 0E00      00694         MOVLW   0x00
00FA 6EE5      00695         MOVWF   POSTDEC1
00FC EC00 F000 00696         CALL    _DisplayString
0100 0E04      00697         MOVLW   0x04
0102 26E1      00698         ADDWF   FSR1L, F
0104 00699 _00216_DS_:
               00700 ;       .line   164; timer.c    DisplayString(16, &time_value[0]);
0104 0E00      00701         MOVLW   HIGH(_time_value)
0106 6E00      00702         MOVWF   r0x01
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0108 0E00      00703         MOVLW   LOW(_time_value)
010A 6E00      00704         MOVWF   r0x00
010C 0E80      00705         MOVLW   0x80
010E 6E00      00706         MOVWF   r0x02
0110 5000      00707         MOVF    r0x02, W
0112 6EE5      00708         MOVWF   POSTDEC1
0114 5000      00709         MOVF    r0x01, W
0116 6EE5      00710         MOVWF   POSTDEC1
0118 5000      00711         MOVF    r0x00, W
011A 6EE5      00712         MOVWF   POSTDEC1
011C 0E10      00713         MOVLW   0x10
011E 6EE5      00714         MOVWF   POSTDEC1
0120 EC00 F000 00715         CALL    _DisplayString
0124 0E04      00716         MOVLW   0x04
0126 26E1      00717         ADDWF   FSR1L, F
0128 D000      00718         BRA     _00220_DS_
012A 0012      00719         RETURN  
               00720 
               00721 ; ; Starting pCode block
               00722 S_timer__strlcpy        code
0000 00723 _strlcpy:
               00724 ;       .line   269; timer.c    strlcpy(char *dst, const char *src, size_t siz)
0000 CFD9 FFE5 00725         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00726         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00727         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00728         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00729         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00730         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00731         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00732         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 00733         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 00734         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 00735         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 00736         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 00737         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 00738         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 00739         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 00740         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 00741         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 00742         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 00743         MOVFF   r0x10, POSTDEC1
004C C000 FFE5 00744         MOVFF   r0x11, POSTDEC1
0050 C000 FFE5 00745         MOVFF   r0x12, POSTDEC1
0054 C000 FFE5 00746         MOVFF   r0x13, POSTDEC1
0058 C000 FFE5 00747         MOVFF   r0x14, POSTDEC1
005C C000 FFE5 00748         MOVFF   r0x15, POSTDEC1
0060 0E02      00749         MOVLW   0x02
0062 CFDB F000 00750         MOVFF   PLUSW2, r0x00
0066 0E03      00751         MOVLW   0x03
0068 CFDB F000 00752         MOVFF   PLUSW2, r0x01
006C 0E04      00753         MOVLW   0x04
006E CFDB F000 00754         MOVFF   PLUSW2, r0x02
0072 0E05      00755         MOVLW   0x05
0074 CFDB F000 00756         MOVFF   PLUSW2, r0x03
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0078 0E06      00757         MOVLW   0x06
007A CFDB F000 00758         MOVFF   PLUSW2, r0x04
007E 0E07      00759         MOVLW   0x07
0080 CFDB F000 00760         MOVFF   PLUSW2, r0x05
0084 0E08      00761         MOVLW   0x08
0086 CFDB F000 00762         MOVFF   PLUSW2, r0x06
008A 0E09      00763         MOVLW   0x09
008C CFDB F000 00764         MOVFF   PLUSW2, r0x07
               00765 ;       .line   271; timer.c    char       *d = dst;
0090 C000 F000 00766         MOVFF   r0x00, r0x08
0094 C000 F000 00767         MOVFF   r0x01, r0x09
0098 C000 F000 00768         MOVFF   r0x02, r0x0a
               00769 ;       .line   272; timer.c    const char *s = src;
009C C000 F000 00770         MOVFF   r0x03, r0x0b
00A0 C000 F000 00771         MOVFF   r0x04, r0x0c
00A4 C000 F000 00772         MOVFF   r0x05, r0x0d
               00773 ;       .line   273; timer.c    size_t      n = siz;
00A8 C000 F000 00774         MOVFF   r0x06, r0x0e
00AC C000 F000 00775         MOVFF   r0x07, r0x0f
               00776 ;       .line   276; timer.c    if (n != 0)
00B0 5000      00777         MOVF    r0x06, W
00B2 1000      00778         IORWF   r0x07, W
00B4 B4D8      00779         BTFSC   STATUS, 2
00B6 D000      00780         BRA     _00269_DS_
               00781 ;       .line   278; timer.c    while (--n != 0)
00B8 C000 F000 00782         MOVFF   r0x03, r0x10
00BC C000 F000 00783         MOVFF   r0x04, r0x11
00C0 C000 F000 00784         MOVFF   r0x05, r0x12
00C4 C000 F000 00785         MOVFF   r0x06, r0x13
00C8 C000 F000 00786         MOVFF   r0x07, r0x14
00CC 00787 _00265_DS_:
00CC 0EFF      00788         MOVLW   0xff
00CE 2600      00789         ADDWF   r0x13, F
00D0 A0D8      00790         BTFSS   STATUS, 0
00D2 0600      00791         DECF    r0x14, F
00D4 5000      00792         MOVF    r0x13, W
00D6 1000      00793         IORWF   r0x14, W
00D8 E000      00794         BZ      _00284_DS_
               00795 ;       .line   280; timer.c    if ((*d++ = *s++) == '\0')
00DA C000 FFE9 00796         MOVFF   r0x10, FSR0L
00DE C000 FFF3 00797         MOVFF   r0x11, PRODL
00E2 5000      00798         MOVF    r0x12, W
00E4 EC00 F000 00799         CALL    __gptrget1
00E8 6E00      00800         MOVWF   r0x15
00EA 2A00      00801         INCF    r0x10, F
00EC B0D8      00802         BTFSC   STATUS, 0
00EE 2A00      00803         INCF    r0x11, F
00F0 B0D8      00804         BTFSC   STATUS, 0
00F2 2A00      00805         INCF    r0x12, F
00F4 C000 FFE5 00806         MOVFF   r0x15, POSTDEC1
00F8 C000 FFE9 00807         MOVFF   r0x00, FSR0L
00FC C000 FFF3 00808         MOVFF   r0x01, PRODL
0100 5000      00809         MOVF    r0x02, W
0102 EC00 F000 00810         CALL    __gptrput1
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0106 2A00      00811         INCF    r0x00, F
0108 B0D8      00812         BTFSC   STATUS, 0
010A 2A00      00813         INCF    r0x01, F
010C B0D8      00814         BTFSC   STATUS, 0
010E 2A00      00815         INCF    r0x02, F
0110 5000      00816         MOVF    r0x15, W
0112 E100      00817         BNZ     _00265_DS_
0114 00818 _00284_DS_:
               00819 ;       .line   281; timer.c    break;
0114 C000 F000 00820         MOVFF   r0x10, r0x0b
0118 C000 F000 00821         MOVFF   r0x11, r0x0c
011C C000 F000 00822         MOVFF   r0x12, r0x0d
0120 C000 F000 00823         MOVFF   r0x00, r0x08
0124 C000 F000 00824         MOVFF   r0x01, r0x09
0128 C000 F000 00825         MOVFF   r0x02, r0x0a
012C C000 F000 00826         MOVFF   r0x13, r0x0e
0130 C000 F000 00827         MOVFF   r0x14, r0x0f
0134 00828 _00269_DS_:
               00829 ;       .line   286; timer.c    if (n == 0)
0134 5000      00830         MOVF    r0x0e, W
0136 1000      00831         IORWF   r0x0f, W
0138 E100      00832         BNZ     _00276_DS_
               00833 ;       .line   288; timer.c    if (siz != 0)
013A 5000      00834         MOVF    r0x06, W
013C 1000      00835         IORWF   r0x07, W
013E E000      00836         BZ      _00283_DS_
               00837 ;       .line   289; timer.c    *d = '\0';          /* NUL-terminate dst */
0140 0E00      00838         MOVLW   0x00
0142 6EE5      00839         MOVWF   POSTDEC1
0144 C000 FFE9 00840         MOVFF   r0x08, FSR0L
0148 C000 FFF3 00841         MOVFF   r0x09, PRODL
014C 5000      00842         MOVF    r0x0a, W
014E EC00 F000 00843         CALL    __gptrput1
0152 00844 _00283_DS_:
               00845 ;       .line   290; timer.c    while (*s++)
0152 C000 F000 00846         MOVFF   r0x0b, r0x00
0156 C000 F000 00847         MOVFF   r0x0c, r0x01
015A C000 F000 00848         MOVFF   r0x0d, r0x02
015E 00849 _00272_DS_:
015E C000 FFE9 00850         MOVFF   r0x00, FSR0L
0162 C000 FFF3 00851         MOVFF   r0x01, PRODL
0166 5000      00852         MOVF    r0x02, W
0168 EC00 F000 00853         CALL    __gptrget1
016C 6E00      00854         MOVWF   r0x06
016E 2A00      00855         INCF    r0x00, F
0170 B0D8      00856         BTFSC   STATUS, 0
0172 2A00      00857         INCF    r0x01, F
0174 B0D8      00858         BTFSC   STATUS, 0
0176 2A00      00859         INCF    r0x02, F
0178 5000      00860         MOVF    r0x06, W
017A E100      00861         BNZ     _00272_DS_
017C C000 F000 00862         MOVFF   r0x00, r0x0b
0180 C000 F000 00863         MOVFF   r0x01, r0x0c
0184 C000 F000 00864         MOVFF   r0x02, r0x0d
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0188 00865 _00276_DS_:
               00866 ;       .line   294; timer.c    return (s - src - 1);       /* count does not include NUL */
0188 5000      00867         MOVF    r0x03, W
018A 5C00      00868         SUBWF   r0x0b, W
018C 6E00      00869         MOVWF   r0x03
018E 5000      00870         MOVF    r0x04, W
0190 5800      00871         SUBWFB  r0x0c, W
0192 6E00      00872         MOVWF   r0x04
0194 0EFF      00873         MOVLW   0xff
0196 2600      00874         ADDWF   r0x03, F
0198 A0D8      00875         BTFSS   STATUS, 0
019A 0600      00876         DECF    r0x04, F
019C C000 FFF3 00877         MOVFF   r0x04, PRODL
01A0 5000      00878         MOVF    r0x03, W
01A2 CFE4 F000 00879         MOVFF   PREINC1, r0x15
01A6 CFE4 F000 00880         MOVFF   PREINC1, r0x14
01AA CFE4 F000 00881         MOVFF   PREINC1, r0x13
01AE CFE4 F000 00882         MOVFF   PREINC1, r0x12
01B2 CFE4 F000 00883         MOVFF   PREINC1, r0x11
01B6 CFE4 F000 00884         MOVFF   PREINC1, r0x10
01BA CFE4 F000 00885         MOVFF   PREINC1, r0x0f
01BE CFE4 F000 00886         MOVFF   PREINC1, r0x0e
01C2 CFE4 F000 00887         MOVFF   PREINC1, r0x0d
01C6 CFE4 F000 00888         MOVFF   PREINC1, r0x0c
01CA CFE4 F000 00889         MOVFF   PREINC1, r0x0b
01CE CFE4 F000 00890         MOVFF   PREINC1, r0x0a
01D2 CFE4 F000 00891         MOVFF   PREINC1, r0x09
01D6 CFE4 F000 00892         MOVFF   PREINC1, r0x08
01DA CFE4 F000 00893         MOVFF   PREINC1, r0x07
01DE CFE4 F000 00894         MOVFF   PREINC1, r0x06
01E2 CFE4 F000 00895         MOVFF   PREINC1, r0x05
01E6 CFE4 F000 00896         MOVFF   PREINC1, r0x04
01EA CFE4 F000 00897         MOVFF   PREINC1, r0x03
01EE CFE4 F000 00898         MOVFF   PREINC1, r0x02
01F2 CFE4 F000 00899         MOVFF   PREINC1, r0x01
01F6 CFE4 F000 00900         MOVFF   PREINC1, r0x00
01FA CFE4 FFD9 00901         MOVFF   PREINC1, FSR2L
01FE 0012      00902         RETURN  
               00903 
               00904 ; ; Starting pCode block
               00905 S_timer__DisplayString  code
0000 00906 _DisplayString:
               00907 ;       .line   217; timer.c    void DisplayString(BYTE pos, char* text)
0000 CFD9 FFE5 00908         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00909         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00910         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00911         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00912         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00913         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00914         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00915         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 00916         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 00917         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 00918         MOVFF   r0x08, POSTDEC1
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
002C C000 FFE5 00919         MOVFF   r0x09, POSTDEC1
0030 0E02      00920         MOVLW   0x02
0032 CFDB F000 00921         MOVFF   PLUSW2, r0x00
0036 0E03      00922         MOVLW   0x03
0038 CFDB F000 00923         MOVFF   PLUSW2, r0x01
003C 0E04      00924         MOVLW   0x04
003E CFDB F000 00925         MOVFF   PLUSW2, r0x02
0042 0E05      00926         MOVLW   0x05
0044 CFDB F000 00927         MOVFF   PLUSW2, r0x03
               00928 ;       .line   219; timer.c    BYTE        l = strlen(text);/*number of actual chars in the string*/
0048 5000      00929         MOVF    r0x03, W
004A 6EE5      00930         MOVWF   POSTDEC1
004C 5000      00931         MOVF    r0x02, W
004E 6EE5      00932         MOVWF   POSTDEC1
0050 5000      00933         MOVF    r0x01, W
0052 6EE5      00934         MOVWF   POSTDEC1
0054 EC00 F000 00935         CALL    _strlen
0058 6E00      00936         MOVWF   r0x04
005A CFF3 F000 00937         MOVFF   PRODL, r0x05
005E 0E03      00938         MOVLW   0x03
0060 26E1      00939         ADDWF   FSR1L, F
               00940 ;       .line   220; timer.c    BYTE      max = 32-pos;    /*available space on the lcd*/
0062 5000      00941         MOVF    r0x00, W
0064 0820      00942         SUBLW   0x20
0066 6E00      00943         MOVWF   r0x05
               00944 ;       .line   221; timer.c    char       *d = (char*)&LCDText[pos];
0068 6A00      00945         CLRF    r0x06
006A 0E00      00946         MOVLW   LOW(_LCDText)
006C 2600      00947         ADDWF   r0x00, F
006E 0E00      00948         MOVLW   HIGH(_LCDText)
0070 2200      00949         ADDWFC  r0x06, F
0072 5000      00950         MOVF    r0x06, W
0074 6E00      00951         MOVWF   r0x06
0076 5000      00952         MOVF    r0x00, W
0078 6E00      00953         MOVWF   r0x00
007A 0E80      00954         MOVLW   0x80
007C 6E00      00955         MOVWF   r0x07
               00956 ;       .line   223; timer.c    size_t      n = (l<max)?l:max;
007E 5000      00957         MOVF    r0x05, W
0080 5C00      00958         SUBWF   r0x04, W
0082 E300      00959         BNC     _00253_DS_
0084 C000 F000 00960         MOVFF   r0x05, r0x04
0088 00961 _00253_DS_:
0088 6A00      00962         CLRF    r0x05
               00963 ;       .line   225; timer.c    if (n != 0)
008A 5000      00964         MOVF    r0x04, W
008C 1000      00965         IORWF   r0x05, W
008E E000      00966         BZ      _00249_DS_
0090 00967 _00245_DS_:
               00968 ;       .line   226; timer.c    while (n-- != 0)*d++ = *s++;
0090 C000 F000 00969         MOVFF   r0x04, r0x08
0094 C000 F000 00970         MOVFF   r0x05, r0x09
0098 0EFF      00971         MOVLW   0xff
009A 2600      00972         ADDWF   r0x04, F
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
009C A0D8      00973         BTFSS   STATUS, 0
009E 0600      00974         DECF    r0x05, F
00A0 5000      00975         MOVF    r0x08, W
00A2 1000      00976         IORWF   r0x09, W
00A4 E000      00977         BZ      _00249_DS_
00A6 C000 FFE9 00978         MOVFF   r0x01, FSR0L
00AA C000 FFF3 00979         MOVFF   r0x02, PRODL
00AE 5000      00980         MOVF    r0x03, W
00B0 EC00 F000 00981         CALL    __gptrget1
00B4 6E00      00982         MOVWF   r0x08
00B6 2A00      00983         INCF    r0x01, F
00B8 B0D8      00984         BTFSC   STATUS, 0
00BA 2A00      00985         INCF    r0x02, F
00BC B0D8      00986         BTFSC   STATUS, 0
00BE 2A00      00987         INCF    r0x03, F
00C0 C000 FFE5 00988         MOVFF   r0x08, POSTDEC1
00C4 C000 FFE9 00989         MOVFF   r0x00, FSR0L
00C8 C000 FFF3 00990         MOVFF   r0x06, PRODL
00CC 5000      00991         MOVF    r0x07, W
00CE EC00 F000 00992         CALL    __gptrput1
00D2 2A00      00993         INCF    r0x00, F
00D4 B0D8      00994         BTFSC   STATUS, 0
00D6 2A00      00995         INCF    r0x06, F
00D8 B0D8      00996         BTFSC   STATUS, 0
00DA 2A00      00997         INCF    r0x07, F
00DC D000      00998         BRA     _00245_DS_
00DE 00999 _00249_DS_:
               01000 ;       .line   227; timer.c    LCDUpdate();
00DE EC00 F000 01001         CALL    _LCDUpdate
00E2 CFE4 F000 01002         MOVFF   PREINC1, r0x09
00E6 CFE4 F000 01003         MOVFF   PREINC1, r0x08
00EA CFE4 F000 01004         MOVFF   PREINC1, r0x07
00EE CFE4 F000 01005         MOVFF   PREINC1, r0x06
00F2 CFE4 F000 01006         MOVFF   PREINC1, r0x05
00F6 CFE4 F000 01007         MOVFF   PREINC1, r0x04
00FA CFE4 F000 01008         MOVFF   PREINC1, r0x03
00FE CFE4 F000 01009         MOVFF   PREINC1, r0x02
0102 CFE4 F000 01010         MOVFF   PREINC1, r0x01
0106 CFE4 F000 01011         MOVFF   PREINC1, r0x00
010A CFE4 FFD9 01012         MOVFF   PREINC1, FSR2L
010E 0012      01013         RETURN  
               01014 
               01015 ; ; Starting pCode block
               01016 S_timer__DisplayWORD    code
0000 01017 _DisplayWORD:
               01018 ;       .line   178; timer.c    void DisplayWORD(BYTE pos, WORD w) //WORD is a 16 bits unsigned
0000 CFD9 FFE5 01019         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01020         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01021         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01022         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01023         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01024         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01025         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01026         MOVFF   r0x05, POSTDEC1
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0020 0E02      01027         MOVLW   0x02
0022 CFDB F000 01028         MOVFF   PLUSW2, r0x00
0026 0E03      01029         MOVLW   0x03
0028 CFDB F000 01030         MOVFF   PLUSW2, r0x01
002C 0E04      01031         MOVLW   0x04
002E CFDB F000 01032         MOVFF   PLUSW2, r0x02
               01033 ;       .line   186; timer.c    ultoa(w, WDigit, radix);      
0032 6A00      01034         CLRF    r0x03
0034 6A00      01035         CLRF    r0x04
0036 0E0A      01036         MOVLW   0x0a
0038 6EE5      01037         MOVWF   POSTDEC1
003A 0E00      01038         MOVLW   HIGH(_DisplayWORD_WDigit_1_1)
003C 6EE5      01039         MOVWF   POSTDEC1
003E 0E00      01040         MOVLW   LOW(_DisplayWORD_WDigit_1_1)
0040 6EE5      01041         MOVWF   POSTDEC1
0042 5000      01042         MOVF    r0x04, W
0044 6EE5      01043         MOVWF   POSTDEC1
0046 5000      01044         MOVF    r0x03, W
0048 6EE5      01045         MOVWF   POSTDEC1
004A 5000      01046         MOVF    r0x02, W
004C 6EE5      01047         MOVWF   POSTDEC1
004E 5000      01048         MOVF    r0x01, W
0050 6EE5      01049         MOVWF   POSTDEC1
0052 EC00 F000 01050         CALL    _ultoa
0056 0E07      01051         MOVLW   0x07
0058 26E1      01052         ADDWF   FSR1L, F
               01053 ;       .line   187; timer.c    for(j = 0; j < strlen((char*)WDigit); j++)
005A 6A00      01054         CLRF    r0x01
005C 01055 _00229_DS_:
005C 0E00      01056         MOVLW   HIGH(_DisplayWORD_WDigit_1_1)
005E 6E00      01057         MOVWF   r0x03
0060 0E00      01058         MOVLW   LOW(_DisplayWORD_WDigit_1_1)
0062 6E00      01059         MOVWF   r0x02
0064 0E80      01060         MOVLW   0x80
0066 6E00      01061         MOVWF   r0x04
0068 5000      01062         MOVF    r0x04, W
006A 6EE5      01063         MOVWF   POSTDEC1
006C 5000      01064         MOVF    r0x03, W
006E 6EE5      01065         MOVWF   POSTDEC1
0070 5000      01066         MOVF    r0x02, W
0072 6EE5      01067         MOVWF   POSTDEC1
0074 EC00 F000 01068         CALL    _strlen
0078 6E00      01069         MOVWF   r0x02
007A CFF3 F000 01070         MOVFF   PRODL, r0x03
007E 0E03      01071         MOVLW   0x03
0080 26E1      01072         ADDWF   FSR1L, F
0082 C000 F000 01073         MOVFF   r0x01, r0x04
0086 6A00      01074         CLRF    r0x05
0088 5000      01075         MOVF    r0x05, W
008A 0F80      01076         ADDLW   0x80
008C 6EF3      01077         MOVWF   PRODL
008E 5000      01078         MOVF    r0x03, W
0090 0F80      01079         ADDLW   0x80
0092 5CF3      01080         SUBWF   PRODL, W
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0094 E100      01081         BNZ     _00239_DS_
0096 5000      01082         MOVF    r0x02, W
0098 5C00      01083         SUBWF   r0x04, W
009A 01084 _00239_DS_:
009A E200      01085         BC      _00232_DS_
               01086 ;       .line   189; timer.c    LCDText[LCDPos++] = WDigit[j];
009C C000 F000 01087         MOVFF   r0x00, r0x02
00A0 2A00      01088         INCF    r0x00, F
00A2 6A00      01089         CLRF    r0x03
00A4 0E00      01090         MOVLW   LOW(_LCDText)
00A6 2600      01091         ADDWF   r0x02, F
00A8 0E00      01092         MOVLW   HIGH(_LCDText)
00AA 2200      01093         ADDWFC  r0x03, F
00AC 0E00      01094         MOVLW   LOW(_DisplayWORD_WDigit_1_1)
00AE 2400      01095         ADDWF   r0x01, W
00B0 6E00      01096         MOVWF   r0x04
00B2 6A00      01097         CLRF    r0x05
00B4 0E00      01098         MOVLW   HIGH(_DisplayWORD_WDigit_1_1)
00B6 2200      01099         ADDWFC  r0x05, F
00B8 C000 FFE9 01100         MOVFF   r0x04, FSR0L
00BC C000 FFEA 01101         MOVFF   r0x05, FSR0H
00C0 CFEF F000 01102         MOVFF   INDF0, r0x04
00C4 C000 FFE9 01103         MOVFF   r0x02, FSR0L
00C8 C000 FFEA 01104         MOVFF   r0x03, FSR0H
00CC C000 FFEF 01105         MOVFF   r0x04, INDF0
               01106 ;       .line   187; timer.c    for(j = 0; j < strlen((char*)WDigit); j++)
00D0 2A00      01107         INCF    r0x01, F
00D2 D000      01108         BRA     _00229_DS_
00D4 01109 _00232_DS_:
               01110 ;       .line   191; timer.c    if(LCDPos < 32u)
00D4 C000 F000 01111         MOVFF   r0x00, r0x01
00D8 6A00      01112         CLRF    r0x02
00DA 0E00      01113         MOVLW   0x00
00DC 5C00      01114         SUBWF   r0x02, W
00DE E100      01115         BNZ     _00240_DS_
00E0 0E20      01116         MOVLW   0x20
00E2 5C00      01117         SUBWF   r0x01, W
00E4 01118 _00240_DS_:
00E4 E200      01119         BC      _00228_DS_
               01120 ;       .line   192; timer.c    LCDText[LCDPos] = 0;
00E6 6A00      01121         CLRF    r0x01
00E8 0E00      01122         MOVLW   LOW(_LCDText)
00EA 2600      01123         ADDWF   r0x00, F
00EC 0E00      01124         MOVLW   HIGH(_LCDText)
00EE 2200      01125         ADDWFC  r0x01, F
00F0 C000 FFE9 01126         MOVFF   r0x00, FSR0L
00F4 C000 FFEA 01127         MOVFF   r0x01, FSR0H
00F8 0E00      01128         MOVLW   0x00
00FA 6EEF      01129         MOVWF   INDF0
00FC 01130 _00228_DS_:
               01131 ;       .line   193; timer.c    LCDUpdate();
00FC EC00 F000 01132         CALL    _LCDUpdate
0100 CFE4 F000 01133         MOVFF   PREINC1, r0x05
0104 CFE4 F000 01134         MOVFF   PREINC1, r0x04
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0108 CFE4 F000 01135         MOVFF   PREINC1, r0x03
010C CFE4 F000 01136         MOVFF   PREINC1, r0x02
0110 CFE4 F000 01137         MOVFF   PREINC1, r0x01
0114 CFE4 F000 01138         MOVFF   PREINC1, r0x00
0118 CFE4 FFD9 01139         MOVFF   PREINC1, FSR2L
011C 0012      01140         RETURN  
               01141 
               01142 ; ; Starting pCode block
               01143 S_timer__high_isr       code
0000 01144 _high_isr:
               01145 ;       .line   122; timer.c    void high_isr(void) __interrupt (1) {
0000 CFE8 FFE5 01146         MOVFF   WREG, POSTDEC1
0004 CFD8 FFE5 01147         MOVFF   STATUS, POSTDEC1
0008 CFE0 FFE5 01148         MOVFF   BSR, POSTDEC1
000C CFF3 FFE5 01149         MOVFF   PRODL, POSTDEC1
0010 CFF4 FFE5 01150         MOVFF   PRODH, POSTDEC1
0014 CFE9 FFE5 01151         MOVFF   FSR0L, POSTDEC1
0018 CFEA FFE5 01152         MOVFF   FSR0H, POSTDEC1
001C CFFA FFE5 01153         MOVFF   PCLATH, POSTDEC1
0020 CFFB FFE5 01154         MOVFF   PCLATU, POSTDEC1
0024 CFD9 FFE5 01155         MOVFF   FSR2L, POSTDEC1
0028 CFE1 FFD9 01156         MOVFF   FSR1L, FSR2L
002C C000 FFE5 01157         MOVFF   r0x00, POSTDEC1
               01158 ;       .line   123; timer.c    if(INTCON3bits.INT1F == 1) { // Button 2
0030 6A00      01159         CLRF    r0x00
0032 B000      01160         BTFSC   _INTCON3bits, 0
0034 2A00      01161         INCF    r0x00, F
0036 5000      01162         MOVF    r0x00, W
0038 0A01      01163         XORLW   0x01
003A E100      01164         BNZ     _00191_DS_
               01165 ;       .line   124; timer.c    handle_button2_pressure();
003C EC00 F000 01166         CALL    _handle_button2_pressure
               01167 ;       .line   125; timer.c    INTCON3bits.INT1F = 0;
0040 9000      01168         BCF     _INTCON3bits, 0
0042 01169 _00191_DS_:
               01170 ;       .line   127; timer.c    if (INTCON3bits.INT3F == 1) { // Button 1
0042 6A00      01171         CLRF    r0x00
0044 B400      01172         BTFSC   _INTCON3bits, 2
0046 2A00      01173         INCF    r0x00, F
0048 5000      01174         MOVF    r0x00, W
004A 0A01      01175         XORLW   0x01
004C E100      01176         BNZ     _00194_DS_
               01177 ;       .line   128; timer.c    handle_button1_pressure();
004E EC00 F000 01178         CALL    _handle_button1_pressure
               01179 ;       .line   129; timer.c    INTCON3bits.INT3F = 0;
0052 9400      01180         BCF     _INTCON3bits, 2
0054 01181 _00194_DS_:
0054 CFE4 F000 01182         MOVFF   PREINC1, r0x00
0058 CFE4 FFD9 01183         MOVFF   PREINC1, FSR2L
005C CFE4 FFFB 01184         MOVFF   PREINC1, PCLATU
0060 CFE4 FFFA 01185         MOVFF   PREINC1, PCLATH
0064 CFE4 FFEA 01186         MOVFF   PREINC1, FSR0H
0068 CFE4 FFE9 01187         MOVFF   PREINC1, FSR0L
006C CFE4 FFF4 01188         MOVFF   PREINC1, PRODH
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0070 CFE4 FFF3 01189         MOVFF   PREINC1, PRODL
0074 CFE4 FFE0 01190         MOVFF   PREINC1, BSR
0078 CFE4 FFD8 01191         MOVFF   PREINC1, STATUS
007C CFE4 FFE8 01192         MOVFF   PREINC1, WREG
0080 0010      01193         RETFIE  
               01194 
               01195 ; ; Starting pCode block
               01196 S_timer__handle_button2_pressure        code
0000 01197 _handle_button2_pressure:
               01198 ;       .line   106; timer.c    void handle_button2_pressure() {
0000 CFD9 FFE5 01199         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01200         MOVFF   FSR1L, FSR2L
0008 0000      01201         BANKSEL _time_setting_procedure
               01202 ;       .line   107; timer.c    if (time_setting_procedure) {
000A 5100      01203         MOVF    _time_setting_procedure, W, B
000C 0000      01204         BANKSEL (_time_setting_procedure + 1)
000E 1100      01205         IORWF   (_time_setting_procedure + 1), W, B
0010 E000      01206         BZ      _00183_DS_
0012 0000      01207         BANKSEL _in_setting
               01208 ;       .line   108; timer.c    if (in_setting == HOURS) {
0014 5100      01209         MOVF    _in_setting, W, B
0016 E100      01210         BNZ     _00175_DS_
               01211 ;       .line   109; timer.c    update_setting_hours();
0018 EC00 F000 01212         CALL    _update_setting_hours
001C D000      01213         BRA     _00185_DS_
001E 01214 _00175_DS_:
               01215 ;       .line   111; timer.c    update_setting_minutes();
001E EC00 F000 01216         CALL    _update_setting_minutes
0022 D000      01217         BRA     _00185_DS_
0024 01218 _00183_DS_:
0024 0000      01219         BANKSEL _awake_setting_procedure
               01220 ;       .line   113; timer.c    } else if (awake_setting_procedure) {
0026 5100      01221         MOVF    _awake_setting_procedure, W, B
0028 0000      01222         BANKSEL (_awake_setting_procedure + 1)
002A 1100      01223         IORWF   (_awake_setting_procedure + 1), W, B
002C E000      01224         BZ      _00185_DS_
002E 0000      01225         BANKSEL _in_setting
               01226 ;       .line   114; timer.c    if (in_setting == HOURS) {
0030 5100      01227         MOVF    _in_setting, W, B
0032 E100      01228         BNZ     _00178_DS_
               01229 ;       .line   115; timer.c    update_awake_hours();
0034 EC00 F000 01230         CALL    _update_awake_hours
0038 D000      01231         BRA     _00185_DS_
003A 01232 _00178_DS_:
               01233 ;       .line   117; timer.c    update_awake_minutes();
003A EC00 F000 01234         CALL    _update_awake_minutes
003E 01235 _00185_DS_:
003E CFE4 FFD9 01236         MOVFF   PREINC1, FSR2L
0042 0012      01237         RETURN  
               01238 
               01239 ; ; Starting pCode block
               01240 S_timer__handle_button1_pressure        code
0000 01241 _handle_button1_pressure:
               01242 ;       .line   81; timer.c     void handle_button1_pressure() {
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0000 CFD9 FFE5 01243         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01244         MOVFF   FSR1L, FSR2L
0008 0000      01245         BANKSEL _time_setting_procedure
               01246 ;       .line   82; timer.c     if (time_setting_procedure) {
000A 5100      01247         MOVF    _time_setting_procedure, W, B
000C 0000      01248         BANKSEL (_time_setting_procedure + 1)
000E 1100      01249         IORWF   (_time_setting_procedure + 1), W, B
0010 E000      01250         BZ      _00167_DS_
0012 0000      01251         BANKSEL _in_setting
               01252 ;       .line   83; timer.c     if (in_setting == HOURS) {
0014 5100      01253         MOVF    _in_setting, W, B
0016 E100      01254         BNZ     _00159_DS_
               01255 ;       .line   84; timer.c     in_setting = MINUTES;
0018 0E01      01256         MOVLW   0x01
001A 0000      01257         BANKSEL _in_setting
001C 6F00      01258         MOVWF   _in_setting, B
001E D000      01259         BRA     _00169_DS_
0020 01260 _00159_DS_:
               01261 ;       .line   87; timer.c     clock_hours = setting_hours;
0020 C000 F000 01262         MOVFF   _setting_hours, _clock_hours
0024 C000 F000 01263         MOVFF   (_setting_hours + 1), (_clock_hours + 1)
               01264 ;       .line   88; timer.c     clock_minutes = setting_minutes;
0028 C000 F000 01265         MOVFF   _setting_minutes, _clock_minutes
002C C000 F000 01266         MOVFF   (_setting_minutes + 1), (_clock_minutes + 1)
0030 0000      01267         BANKSEL _clock_seconds
               01268 ;       .line   89; timer.c     clock_seconds = 0;
0032 6B00      01269         CLRF    _clock_seconds, B
0034 0000      01270         BANKSEL (_clock_seconds + 1)
0036 6B00      01271         CLRF    (_clock_seconds + 1), B
0038 0000      01272         BANKSEL _time_setting_procedure
               01273 ;       .line   90; timer.c     time_setting_procedure = 0; // end the time setting
003A 6B00      01274         CLRF    _time_setting_procedure, B
003C 0000      01275         BANKSEL (_time_setting_procedure + 1)
003E 6B00      01276         CLRF    (_time_setting_procedure + 1), B
               01277 ;       .line   91; timer.c     awake_setting_procedure = 1; // start the awake time setting
0040 0E01      01278         MOVLW   0x01
0042 0000      01279         BANKSEL _awake_setting_procedure
0044 6F00      01280         MOVWF   _awake_setting_procedure, B
0046 0000      01281         BANKSEL (_awake_setting_procedure + 1)
0048 6B00      01282         CLRF    (_awake_setting_procedure + 1), B
               01283 ;       .line   92; timer.c     time_value[0] = time_value[1] = time_value[3] = time_value[4] = '0';
004A 0E30      01284         MOVLW   0x30
004C 0000      01285         BANKSEL (_time_value + 4)
004E 6F00      01286         MOVWF   (_time_value + 4), B
0050 0E30      01287         MOVLW   0x30
0052 0000      01288         BANKSEL (_time_value + 3)
0054 6F00      01289         MOVWF   (_time_value + 3), B
0056 0E30      01290         MOVLW   0x30
0058 0000      01291         BANKSEL (_time_value + 1)
005A 6F00      01292         MOVWF   (_time_value + 1), B
005C 0E30      01293         MOVLW   0x30
005E 0000      01294         BANKSEL _time_value
0060 6F00      01295         MOVWF   _time_value, B
0062 0000      01296         BANKSEL _in_setting
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01297 ;       .line   93; timer.c     in_setting = HOURS;
0064 6B00      01298         CLRF    _in_setting, B
0066 D000      01299         BRA     _00169_DS_
0068 01300 _00167_DS_:
0068 0000      01301         BANKSEL _awake_setting_procedure
               01302 ;       .line   95; timer.c     } else if (awake_setting_procedure) {
006A 5100      01303         MOVF    _awake_setting_procedure, W, B
006C 0000      01304         BANKSEL (_awake_setting_procedure + 1)
006E 1100      01305         IORWF   (_awake_setting_procedure + 1), W, B
0070 E000      01306         BZ      _00169_DS_
0072 0000      01307         BANKSEL _in_setting
               01308 ;       .line   96; timer.c     if (in_setting == HOURS) {
0074 5100      01309         MOVF    _in_setting, W, B
0076 E100      01310         BNZ     _00162_DS_
               01311 ;       .line   97; timer.c     in_setting = MINUTES;
0078 0E01      01312         MOVLW   0x01
007A 0000      01313         BANKSEL _in_setting
007C 6F00      01314         MOVWF   _in_setting, B
007E D000      01315         BRA     _00169_DS_
0080 01316 _00162_DS_:
0080 0000      01317         BANKSEL _awake_setting_procedure
               01318 ;       .line   99; timer.c     awake_setting_procedure = 0;
0082 6B00      01319         CLRF    _awake_setting_procedure, B
0084 0000      01320         BANKSEL (_awake_setting_procedure + 1)
0086 6B00      01321         CLRF    (_awake_setting_procedure + 1), B
               01322 ;       .line   100; timer.c    set = 1;
0088 0E01      01323         MOVLW   0x01
008A 0000      01324         BANKSEL _set
008C 6F00      01325         MOVWF   _set, B
008E 0000      01326         BANKSEL (_set + 1)
0090 6B00      01327         CLRF    (_set + 1), B
0092 01328 _00169_DS_:
0092 CFE4 FFD9 01329         MOVFF   PREINC1, FSR2L
0096 0012      01330         RETURN  
               01331 
               01332 ; ; Starting pCode block
               01333 S_timer__update_time    code
0000 01334 _update_time:
               01335 ;       .line   73; timer.c     void update_time(char* timeValue, int hour, int min) {
0000 CFD9 FFE5 01336         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01337         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01338         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01339         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01340         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01341         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01342         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01343         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01344         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01345         MOVFF   r0x07, POSTDEC1
0028 0E02      01346         MOVLW   0x02
002A CFDB F000 01347         MOVFF   PLUSW2, r0x00
002E 0E03      01348         MOVLW   0x03
0030 CFDB F000 01349         MOVFF   PLUSW2, r0x01
0034 0E04      01350         MOVLW   0x04
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0036 CFDB F000 01351         MOVFF   PLUSW2, r0x02
003A 0E05      01352         MOVLW   0x05
003C CFDB F000 01353         MOVFF   PLUSW2, r0x03
0040 0E06      01354         MOVLW   0x06
0042 CFDB F000 01355         MOVFF   PLUSW2, r0x04
0046 0E07      01356         MOVLW   0x07
0048 CFDB F000 01357         MOVFF   PLUSW2, r0x05
004C 0E08      01358         MOVLW   0x08
004E CFDB F000 01359         MOVFF   PLUSW2, r0x06
               01360 ;       .line   74; timer.c     sprintf(&timeValue[0], "%02d", hour);
0052 5000      01361         MOVF    r0x04, W
0054 6EE5      01362         MOVWF   POSTDEC1
0056 5000      01363         MOVF    r0x03, W
0058 6EE5      01364         MOVWF   POSTDEC1
005A 0E00      01365         MOVLW   UPPER(__str_0)
005C 6EE5      01366         MOVWF   POSTDEC1
005E 0E00      01367         MOVLW   HIGH(__str_0)
0060 6EE5      01368         MOVWF   POSTDEC1
0062 0E00      01369         MOVLW   LOW(__str_0)
0064 6EE5      01370         MOVWF   POSTDEC1
0066 5000      01371         MOVF    r0x02, W
0068 6EE5      01372         MOVWF   POSTDEC1
006A 5000      01373         MOVF    r0x01, W
006C 6EE5      01374         MOVWF   POSTDEC1
006E 5000      01375         MOVF    r0x00, W
0070 6EE5      01376         MOVWF   POSTDEC1
0072 EC00 F000 01377         CALL    _sprintf
0076 0E08      01378         MOVLW   0x08
0078 26E1      01379         ADDWF   FSR1L, F
               01380 ;       .line   75; timer.c     timeValue[2] = ':';
007A 5000      01381         MOVF    r0x00, W
007C 0F02      01382         ADDLW   0x02
007E 6E00      01383         MOVWF   r0x03
0080 0E00      01384         MOVLW   0x00
0082 2000      01385         ADDWFC  r0x01, W
0084 6E00      01386         MOVWF   r0x04
0086 0E00      01387         MOVLW   0x00
0088 2000      01388         ADDWFC  r0x02, W
008A 6E00      01389         MOVWF   r0x07
008C 0E3A      01390         MOVLW   0x3a
008E 6EE5      01391         MOVWF   POSTDEC1
0090 C000 FFE9 01392         MOVFF   r0x03, FSR0L
0094 C000 FFF3 01393         MOVFF   r0x04, PRODL
0098 5000      01394         MOVF    r0x07, W
009A EC00 F000 01395         CALL    __gptrput1
               01396 ;       .line   76; timer.c     sprintf(&timeValue[3], "%02d", min);
009E 5000      01397         MOVF    r0x00, W
00A0 0F03      01398         ADDLW   0x03
00A2 6E00      01399         MOVWF   r0x03
00A4 0E00      01400         MOVLW   0x00
00A6 2000      01401         ADDWFC  r0x01, W
00A8 6E00      01402         MOVWF   r0x04
00AA 0E00      01403         MOVLW   0x00
00AC 2000      01404         ADDWFC  r0x02, W
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00AE 6E00      01405         MOVWF   r0x07
00B0 5000      01406         MOVF    r0x06, W
00B2 6EE5      01407         MOVWF   POSTDEC1
00B4 5000      01408         MOVF    r0x05, W
00B6 6EE5      01409         MOVWF   POSTDEC1
00B8 0E00      01410         MOVLW   UPPER(__str_0)
00BA 6EE5      01411         MOVWF   POSTDEC1
00BC 0E00      01412         MOVLW   HIGH(__str_0)
00BE 6EE5      01413         MOVWF   POSTDEC1
00C0 0E00      01414         MOVLW   LOW(__str_0)
00C2 6EE5      01415         MOVWF   POSTDEC1
00C4 5000      01416         MOVF    r0x07, W
00C6 6EE5      01417         MOVWF   POSTDEC1
00C8 5000      01418         MOVF    r0x04, W
00CA 6EE5      01419         MOVWF   POSTDEC1
00CC 5000      01420         MOVF    r0x03, W
00CE 6EE5      01421         MOVWF   POSTDEC1
00D0 EC00 F000 01422         CALL    _sprintf
00D4 0E08      01423         MOVLW   0x08
00D6 26E1      01424         ADDWF   FSR1L, F
               01425 ;       .line   77; timer.c     DisplayString(16, timeValue);
00D8 5000      01426         MOVF    r0x02, W
00DA 6EE5      01427         MOVWF   POSTDEC1
00DC 5000      01428         MOVF    r0x01, W
00DE 6EE5      01429         MOVWF   POSTDEC1
00E0 5000      01430         MOVF    r0x00, W
00E2 6EE5      01431         MOVWF   POSTDEC1
00E4 0E10      01432         MOVLW   0x10
00E6 6EE5      01433         MOVWF   POSTDEC1
00E8 EC00 F000 01434         CALL    _DisplayString
00EC 0E04      01435         MOVLW   0x04
00EE 26E1      01436         ADDWF   FSR1L, F
               01437 ;       .line   78; timer.c     LCDUpdate();
00F0 EC00 F000 01438         CALL    _LCDUpdate
00F4 CFE4 F000 01439         MOVFF   PREINC1, r0x07
00F8 CFE4 F000 01440         MOVFF   PREINC1, r0x06
00FC CFE4 F000 01441         MOVFF   PREINC1, r0x05
0100 CFE4 F000 01442         MOVFF   PREINC1, r0x04
0104 CFE4 F000 01443         MOVFF   PREINC1, r0x03
0108 CFE4 F000 01444         MOVFF   PREINC1, r0x02
010C CFE4 F000 01445         MOVFF   PREINC1, r0x01
0110 CFE4 F000 01446         MOVFF   PREINC1, r0x00
0114 CFE4 FFD9 01447         MOVFF   PREINC1, FSR2L
0118 0012      01448         RETURN  
               01449 
               01450 ; ; Starting pCode block
               01451 S_timer__update_awake_minutes   code
0000 01452 _update_awake_minutes:
               01453 ;       .line   63; timer.c     void update_awake_minutes() {
0000 CFD9 FFE5 01454         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01455         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01456         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01457         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01458         MOVFF   r0x02, POSTDEC1
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0014 0000      01459         BANKSEL _awake_minutes
               01460 ;       .line   64; timer.c     if (awake_minutes == 59) {
0016 5100      01461         MOVF    _awake_minutes, W, B
0018 0A3B      01462         XORLW   0x3b
001A E100      01463         BNZ     _00147_DS_
001C 0000      01464         BANKSEL (_awake_minutes + 1)
001E 5100      01465         MOVF    (_awake_minutes + 1), W, B
0020 E000      01466         BZ      _00148_DS_
0022 01467 _00147_DS_:
0022 D000      01468         BRA     _00142_DS_
0024 01469 _00148_DS_:
0024 0000      01470         BANKSEL _awake_minutes
               01471 ;       .line   65; timer.c     awake_minutes = 0;
0026 6B00      01472         CLRF    _awake_minutes, B
0028 0000      01473         BANKSEL (_awake_minutes + 1)
002A 6B00      01474         CLRF    (_awake_minutes + 1), B
002C D000      01475         BRA     _00143_DS_
002E 01476 _00142_DS_:
002E 0000      01477         BANKSEL _awake_minutes
               01478 ;       .line   67; timer.c     awake_minutes++;
0030 2B00      01479         INCF    _awake_minutes, F, B
0032 E300      01480         BNC     _10263_DS_
0034 0000      01481         BANKSEL (_awake_minutes + 1)
0036 2B00      01482         INCF    (_awake_minutes + 1), F, B
0038 01483 _10263_DS_:
0038 01484 _00143_DS_:
               01485 ;       .line   69; timer.c     sprintf(&time_value[3], "%02d", awake_minutes);
0038 0E00      01486         MOVLW   HIGH(_time_value + 3)
003A 6E00      01487         MOVWF   r0x01
003C 0E00      01488         MOVLW   LOW(_time_value + 3)
003E 6E00      01489         MOVWF   r0x00
0040 0E80      01490         MOVLW   0x80
0042 6E00      01491         MOVWF   r0x02
0044 0000      01492         BANKSEL (_awake_minutes + 1)
0046 5100      01493         MOVF    (_awake_minutes + 1), W, B
0048 6EE5      01494         MOVWF   POSTDEC1
004A 0000      01495         BANKSEL _awake_minutes
004C 5100      01496         MOVF    _awake_minutes, W, B
004E 6EE5      01497         MOVWF   POSTDEC1
0050 0E00      01498         MOVLW   UPPER(__str_0)
0052 6EE5      01499         MOVWF   POSTDEC1
0054 0E00      01500         MOVLW   HIGH(__str_0)
0056 6EE5      01501         MOVWF   POSTDEC1
0058 0E00      01502         MOVLW   LOW(__str_0)
005A 6EE5      01503         MOVWF   POSTDEC1
005C 5000      01504         MOVF    r0x02, W
005E 6EE5      01505         MOVWF   POSTDEC1
0060 5000      01506         MOVF    r0x01, W
0062 6EE5      01507         MOVWF   POSTDEC1
0064 5000      01508         MOVF    r0x00, W
0066 6EE5      01509         MOVWF   POSTDEC1
0068 EC00 F000 01510         CALL    _sprintf
006C 0E08      01511         MOVLW   0x08
006E 26E1      01512         ADDWF   FSR1L, F
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0070 CFE4 F000 01513         MOVFF   PREINC1, r0x02
0074 CFE4 F000 01514         MOVFF   PREINC1, r0x01
0078 CFE4 F000 01515         MOVFF   PREINC1, r0x00
007C CFE4 FFD9 01516         MOVFF   PREINC1, FSR2L
0080 0012      01517         RETURN  
               01518 
               01519 ; ; Starting pCode block
               01520 S_timer__update_awake_hours     code
0000 01521 _update_awake_hours:
               01522 ;       .line   52; timer.c     void update_awake_hours() {
0000 CFD9 FFE5 01523         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01524         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01525         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01526         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01527         MOVFF   r0x02, POSTDEC1
0014 0000      01528         BANKSEL _awake_hours
               01529 ;       .line   53; timer.c     if (awake_hours == 23) {
0016 5100      01530         MOVF    _awake_hours, W, B
0018 0A17      01531         XORLW   0x17
001A E100      01532         BNZ     _00135_DS_
001C 0000      01533         BANKSEL (_awake_hours + 1)
001E 5100      01534         MOVF    (_awake_hours + 1), W, B
0020 E000      01535         BZ      _00136_DS_
0022 01536 _00135_DS_:
0022 D000      01537         BRA     _00130_DS_
0024 01538 _00136_DS_:
0024 0000      01539         BANKSEL _awake_hours
               01540 ;       .line   54; timer.c     awake_hours = 0;
0026 6B00      01541         CLRF    _awake_hours, B
0028 0000      01542         BANKSEL (_awake_hours + 1)
002A 6B00      01543         CLRF    (_awake_hours + 1), B
002C D000      01544         BRA     _00131_DS_
002E 01545 _00130_DS_:
002E 0000      01546         BANKSEL _awake_hours
               01547 ;       .line   56; timer.c     awake_hours++;
0030 2B00      01548         INCF    _awake_hours, F, B
0032 E300      01549         BNC     _20264_DS_
0034 0000      01550         BANKSEL (_awake_hours + 1)
0036 2B00      01551         INCF    (_awake_hours + 1), F, B
0038 01552 _20264_DS_:
0038 01553 _00131_DS_:
               01554 ;       .line   58; timer.c     sprintf(&time_value[0], "%02d", awake_hours);
0038 0E00      01555         MOVLW   HIGH(_time_value)
003A 6E00      01556         MOVWF   r0x01
003C 0E00      01557         MOVLW   LOW(_time_value)
003E 6E00      01558         MOVWF   r0x00
0040 0E80      01559         MOVLW   0x80
0042 6E00      01560         MOVWF   r0x02
0044 0000      01561         BANKSEL (_awake_hours + 1)
0046 5100      01562         MOVF    (_awake_hours + 1), W, B
0048 6EE5      01563         MOVWF   POSTDEC1
004A 0000      01564         BANKSEL _awake_hours
004C 5100      01565         MOVF    _awake_hours, W, B
004E 6EE5      01566         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0050 0E00      01567         MOVLW   UPPER(__str_0)
0052 6EE5      01568         MOVWF   POSTDEC1
0054 0E00      01569         MOVLW   HIGH(__str_0)
0056 6EE5      01570         MOVWF   POSTDEC1
0058 0E00      01571         MOVLW   LOW(__str_0)
005A 6EE5      01572         MOVWF   POSTDEC1
005C 5000      01573         MOVF    r0x02, W
005E 6EE5      01574         MOVWF   POSTDEC1
0060 5000      01575         MOVF    r0x01, W
0062 6EE5      01576         MOVWF   POSTDEC1
0064 5000      01577         MOVF    r0x00, W
0066 6EE5      01578         MOVWF   POSTDEC1
0068 EC00 F000 01579         CALL    _sprintf
006C 0E08      01580         MOVLW   0x08
006E 26E1      01581         ADDWF   FSR1L, F
               01582 ;       .line   59; timer.c     time_value[2] = ':';
0070 0E3A      01583         MOVLW   0x3a
0072 0000      01584         BANKSEL (_time_value + 2)
0074 6F00      01585         MOVWF   (_time_value + 2), B
0076 CFE4 F000 01586         MOVFF   PREINC1, r0x02
007A CFE4 F000 01587         MOVFF   PREINC1, r0x01
007E CFE4 F000 01588         MOVFF   PREINC1, r0x00
0082 CFE4 FFD9 01589         MOVFF   PREINC1, FSR2L
0086 0012      01590         RETURN  
               01591 
               01592 ; ; Starting pCode block
               01593 S_timer__update_setting_minutes code
0000 01594 _update_setting_minutes:
               01595 ;       .line   42; timer.c     void update_setting_minutes() {
0000 CFD9 FFE5 01596         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01597         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01598         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01599         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01600         MOVFF   r0x02, POSTDEC1
0014 0000      01601         BANKSEL _setting_minutes
               01602 ;       .line   43; timer.c     if (setting_minutes == 59) {
0016 5100      01603         MOVF    _setting_minutes, W, B
0018 0A3B      01604         XORLW   0x3b
001A E100      01605         BNZ     _00123_DS_
001C 0000      01606         BANKSEL (_setting_minutes + 1)
001E 5100      01607         MOVF    (_setting_minutes + 1), W, B
0020 E000      01608         BZ      _00124_DS_
0022 01609 _00123_DS_:
0022 D000      01610         BRA     _00118_DS_
0024 01611 _00124_DS_:
0024 0000      01612         BANKSEL _setting_minutes
               01613 ;       .line   44; timer.c     setting_minutes = 0;
0026 6B00      01614         CLRF    _setting_minutes, B
0028 0000      01615         BANKSEL (_setting_minutes + 1)
002A 6B00      01616         CLRF    (_setting_minutes + 1), B
002C D000      01617         BRA     _00119_DS_
002E 01618 _00118_DS_:
002E 0000      01619         BANKSEL _setting_minutes
               01620 ;       .line   46; timer.c     setting_minutes++;
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0030 2B00      01621         INCF    _setting_minutes, F, B
0032 E300      01622         BNC     _30265_DS_
0034 0000      01623         BANKSEL (_setting_minutes + 1)
0036 2B00      01624         INCF    (_setting_minutes + 1), F, B
0038 01625 _30265_DS_:
0038 01626 _00119_DS_:
               01627 ;       .line   48; timer.c     sprintf(time_value + 3, "%02d", setting_minutes);
0038 0E00      01628         MOVLW   HIGH(_time_value + 3)
003A 6E00      01629         MOVWF   r0x01
003C 0E00      01630         MOVLW   LOW(_time_value + 3)
003E 6E00      01631         MOVWF   r0x00
0040 0E80      01632         MOVLW   0x80
0042 6E00      01633         MOVWF   r0x02
0044 0000      01634         BANKSEL (_setting_minutes + 1)
0046 5100      01635         MOVF    (_setting_minutes + 1), W, B
0048 6EE5      01636         MOVWF   POSTDEC1
004A 0000      01637         BANKSEL _setting_minutes
004C 5100      01638         MOVF    _setting_minutes, W, B
004E 6EE5      01639         MOVWF   POSTDEC1
0050 0E00      01640         MOVLW   UPPER(__str_0)
0052 6EE5      01641         MOVWF   POSTDEC1
0054 0E00      01642         MOVLW   HIGH(__str_0)
0056 6EE5      01643         MOVWF   POSTDEC1
0058 0E00      01644         MOVLW   LOW(__str_0)
005A 6EE5      01645         MOVWF   POSTDEC1
005C 5000      01646         MOVF    r0x02, W
005E 6EE5      01647         MOVWF   POSTDEC1
0060 5000      01648         MOVF    r0x01, W
0062 6EE5      01649         MOVWF   POSTDEC1
0064 5000      01650         MOVF    r0x00, W
0066 6EE5      01651         MOVWF   POSTDEC1
0068 EC00 F000 01652         CALL    _sprintf
006C 0E08      01653         MOVLW   0x08
006E 26E1      01654         ADDWF   FSR1L, F
0070 CFE4 F000 01655         MOVFF   PREINC1, r0x02
0074 CFE4 F000 01656         MOVFF   PREINC1, r0x01
0078 CFE4 F000 01657         MOVFF   PREINC1, r0x00
007C CFE4 FFD9 01658         MOVFF   PREINC1, FSR2L
0080 0012      01659         RETURN  
               01660 
               01661 ; ; Starting pCode block
               01662 S_timer__update_setting_hours   code
0000 01663 _update_setting_hours:
               01664 ;       .line   31; timer.c     void update_setting_hours() {
0000 CFD9 FFE5 01665         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01666         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01667         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01668         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01669         MOVFF   r0x02, POSTDEC1
0014 0000      01670         BANKSEL _setting_hours
               01671 ;       .line   32; timer.c     if (setting_hours == 23) {
0016 5100      01672         MOVF    _setting_hours, W, B
0018 0A17      01673         XORLW   0x17
001A E100      01674         BNZ     _00111_DS_
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
001C 0000      01675         BANKSEL (_setting_hours + 1)
001E 5100      01676         MOVF    (_setting_hours + 1), W, B
0020 E000      01677         BZ      _00112_DS_
0022 01678 _00111_DS_:
0022 D000      01679         BRA     _00106_DS_
0024 01680 _00112_DS_:
0024 0000      01681         BANKSEL _setting_hours
               01682 ;       .line   33; timer.c     setting_hours = 0;
0026 6B00      01683         CLRF    _setting_hours, B
0028 0000      01684         BANKSEL (_setting_hours + 1)
002A 6B00      01685         CLRF    (_setting_hours + 1), B
002C D000      01686         BRA     _00107_DS_
002E 01687 _00106_DS_:
002E 0000      01688         BANKSEL _setting_hours
               01689 ;       .line   35; timer.c     setting_hours++;
0030 2B00      01690         INCF    _setting_hours, F, B
0032 E300      01691         BNC     _40266_DS_
0034 0000      01692         BANKSEL (_setting_hours + 1)
0036 2B00      01693         INCF    (_setting_hours + 1), F, B
0038 01694 _40266_DS_:
0038 01695 _00107_DS_:
               01696 ;       .line   37; timer.c     sprintf(&time_value[0], "%02d", setting_hours);
0038 0E00      01697         MOVLW   HIGH(_time_value)
003A 6E00      01698         MOVWF   r0x01
003C 0E00      01699         MOVLW   LOW(_time_value)
003E 6E00      01700         MOVWF   r0x00
0040 0E80      01701         MOVLW   0x80
0042 6E00      01702         MOVWF   r0x02
0044 0000      01703         BANKSEL (_setting_hours + 1)
0046 5100      01704         MOVF    (_setting_hours + 1), W, B
0048 6EE5      01705         MOVWF   POSTDEC1
004A 0000      01706         BANKSEL _setting_hours
004C 5100      01707         MOVF    _setting_hours, W, B
004E 6EE5      01708         MOVWF   POSTDEC1
0050 0E00      01709         MOVLW   UPPER(__str_0)
0052 6EE5      01710         MOVWF   POSTDEC1
0054 0E00      01711         MOVLW   HIGH(__str_0)
0056 6EE5      01712         MOVWF   POSTDEC1
0058 0E00      01713         MOVLW   LOW(__str_0)
005A 6EE5      01714         MOVWF   POSTDEC1
005C 5000      01715         MOVF    r0x02, W
005E 6EE5      01716         MOVWF   POSTDEC1
0060 5000      01717         MOVF    r0x01, W
0062 6EE5      01718         MOVWF   POSTDEC1
0064 5000      01719         MOVF    r0x00, W
0066 6EE5      01720         MOVWF   POSTDEC1
0068 EC00 F000 01721         CALL    _sprintf
006C 0E08      01722         MOVLW   0x08
006E 26E1      01723         ADDWF   FSR1L, F
               01724 ;       .line   38; timer.c     time_value[2] = ':';
0070 0E3A      01725         MOVLW   0x3a
0072 0000      01726         BANKSEL (_time_value + 2)
0074 6F00      01727         MOVWF   (_time_value + 2), B
0076 CFE4 F000 01728         MOVFF   PREINC1, r0x02
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
007A CFE4 F000 01729         MOVFF   PREINC1, r0x01
007E CFE4 F000 01730         MOVFF   PREINC1, r0x00
0082 CFE4 FFD9 01731         MOVFF   PREINC1, FSR2L
0086 0012      01732         RETURN  
               01733 
               01734 ; ; Starting pCode block
0088 01735 __str_0:
0088 3025 6432 01736         DB      0x25, 0x30, 0x32, 0x64, 0x00
     0000      
               01737 ; ; Starting pCode block
008E 01738 __str_1:
008E 6E45 6574 01739         DB      0x45, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x69
     2072 6874 
     2065 6974 
009A 656D 003A 01740         DB      0x6d, 0x65, 0x3a, 0x00
               01741 ; ; Starting pCode block
009E 01742 __str_2:
009E 3030 303A 01743         DB      0x30, 0x30, 0x3a, 0x30, 0x30, 0x00
     0030      
               01744 ; ; Starting pCode block
00A4 01745 __str_3:
00A4 6E45 6574 01746         DB      0x45, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x61
     2072 6874 
     2065 6177 
00B0 656B 003A 01747         DB      0x6b, 0x65, 0x3a, 0x00
               01748 ; ; Starting pCode block
00B4 01749 __str_4:
00B4 2020 2020 01750         DB      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20
     2020 2020 
     2020 2020 
00C0 2020 0020 01751         DB      0x20, 0x20, 0x20, 0x00
               01752 
               01753 
               01754 ; Statistics:
               01755 ; code size:     2552 (0x09f8) bytes ( 1.95%)
               01756 ;                1276 (0x04fc) words
               01757 ; udata size:      13 (0x000d) bytes ( 0.34%)
               01758 ; access size:     22 (0x0016) bytes
               01759 
               01760 
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

BSR                               00000FE0
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
INDF0                             00000FEF
PCLATH                            00000FFA
PCLATU                            00000FFB
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00106_DS_                        0000002E
_00107_DS_                        00000038
_00111_DS_                        00000022
_00112_DS_                        00000024
_00118_DS_                        0000002E
_00119_DS_                        00000038
_00123_DS_                        00000022
_00124_DS_                        00000024
_00130_DS_                        0000002E
_00131_DS_                        00000038
_00135_DS_                        00000022
_00136_DS_                        00000024
_00142_DS_                        0000002E
_00143_DS_                        00000038
_00147_DS_                        00000022
_00148_DS_                        00000024
_00159_DS_                        00000020
_00162_DS_                        00000080
_00167_DS_                        00000068
_00169_DS_                        00000092
_00175_DS_                        0000001E
_00178_DS_                        0000003A
_00183_DS_                        00000024
_00185_DS_                        0000003E
_00191_DS_                        00000042
_00194_DS_                        00000054
_00206_DS_                        00000034
_00215_DS_                        000000E2
_00216_DS_                        00000104
_00220_DS_                        000000AA
_00228_DS_                        000000FC
_00229_DS_                        0000005C
_00232_DS_                        000000D4
_00239_DS_                        0000009A
_00240_DS_                        000000E4
_00245_DS_                        00000090
_00249_DS_                        000000DE
_00253_DS_                        00000088
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00265_DS_                        000000CC
_00269_DS_                        00000134
_00272_DS_                        0000015E
_00276_DS_                        00000188
_00283_DS_                        00000152
_00284_DS_                        00000114
_10263_DS_                        00000038
_20264_DS_                        00000038
_30265_DS_                        00000038
_40266_DS_                        00000038
_ADCON0                           00000000
_ADCON0bits                       00000000
_ADCON1                           00000000
_ADCON1bits                       00000000
_ADCON2                           00000000
_ADCON2bits                       00000000
_ADRES                            00000000
_ADRESH                           00000000
_ADRESL                           00000000
_BAUDCON                          00000000
_BAUDCON1                         00000000
_BAUDCON1bits                     00000000
_BAUDCON2                         00000000
_BAUDCON2bits                     00000000
_BAUDCONbits                      00000000
_BAUDCTL                          00000000
_BAUDCTL1                         00000000
_BAUDCTL1bits                     00000000
_BAUDCTL2                         00000000
_BAUDCTL2bits                     00000000
_BAUDCTLbits                      00000000
_BSR                              00000000
_CCP1CON                          00000000
_CCP1CONbits                      00000000
_CCP2CON                          00000000
_CCP2CONbits                      00000000
_CCP3CON                          00000000
_CCP3CONbits                      00000000
_CCP4CON                          00000000
_CCP4CONbits                      00000000
_CCP5CON                          00000000
_CCP5CONbits                      00000000
_CCPR1                            00000000
_CCPR1H                           00000000
_CCPR1L                           00000000
_CCPR2                            00000000
_CCPR2H                           00000000
_CCPR2L                           00000000
_CCPR3                            00000000
_CCPR3H                           00000000
_CCPR3L                           00000000
_CCPR4                            00000000
_CCPR4H                           00000000
_CCPR4L                           00000000
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_CCPR5                            00000000
_CCPR5H                           00000000
_CCPR5L                           00000000
_CMCON                            00000000
_CMCONbits                        00000000
_CVRCON                           00000000
_CVRCONbits                       00000000
_DDRA                             00000000
_DDRAbits                         00000000
_DDRB                             00000000
_DDRBbits                         00000000
_DDRC                             00000000
_DDRCbits                         00000000
_DDRD                             00000000
_DDRDbits                         00000000
_DDRE                             00000000
_DDREbits                         00000000
_DDRF                             00000000
_DDRFbits                         00000000
_DDRG                             00000000
_DDRGbits                         00000000
_DDRH                             00000000
_DDRHbits                         00000000
_DDRJ                             00000000
_DDRJbits                         00000000
_DisplayString                    00000000
_DisplayWORD                      00000000
_DisplayWORD_WDigit_1_1           00000000
_EBSTCON                          00000000
_EBSTCONbits                      00000000
_EBSTCS                           00000000
_EBSTCSH                          00000000
_EBSTCSL                          00000000
_EBSTSD                           00000000
_ECCP1AS                          00000000
_ECCP1ASbits                      00000000
_ECCP1CON                         00000000
_ECCP1CONbits                     00000000
_ECCP1DEL                         00000000
_ECCP1DELbits                     00000000
_ECCP2AS                          00000000
_ECCP2ASbits                      00000000
_ECCP2CON                         00000000
_ECCP2CONbits                     00000000
_ECCP2DEL                         00000000
_ECCP2DELbits                     00000000
_ECCP3AS                          00000000
_ECCP3ASbits                      00000000
_ECCP3CON                         00000000
_ECCP3CONbits                     00000000
_ECCP3DEL                         00000000
_ECCP3DELbits                     00000000
_ECON1                            00000000
_ECON1bits                        00000000
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_ECON2                            00000000
_ECON2bits                        00000000
_EDATA                            00000000
_EDATAbits                        00000000
_EDMACS                           00000000
_EDMACSH                          00000000
_EDMACSL                          00000000
_EDMADST                          00000000
_EDMADSTH                         00000000
_EDMADSTL                         00000000
_EDMAND                           00000000
_EDMANDH                          00000000
_EDMANDL                          00000000
_EDMAST                           00000000
_EDMASTH                          00000000
_EDMASTL                          00000000
_EECON1                           00000000
_EECON1bits                       00000000
_EECON2                           00000000
_EFLOCON                          00000000
_EFLOCONbits                      00000000
_EHT0                             00000000
_EHT1                             00000000
_EHT2                             00000000
_EHT3                             00000000
_EHT4                             00000000
_EHT5                             00000000
_EHT6                             00000000
_EHT7                             00000000
_EIE                              00000000
_EIEbits                          00000000
_EIR                              00000000
_EIRbits                          00000000
_EPAUS                            00000000
_EPAUSH                           00000000
_EPAUSL                           00000000
_EPKTCNT                          00000000
_EPMCS                            00000000
_EPMCSH                           00000000
_EPMCSL                           00000000
_EPMM0                            00000000
_EPMM1                            00000000
_EPMM2                            00000000
_EPMM3                            00000000
_EPMM4                            00000000
_EPMM5                            00000000
_EPMM6                            00000000
_EPMM7                            00000000
_EPMO                             00000000
_EPMOH                            00000000
_EPMOL                            00000000
_ERDPT                            00000000
_ERDPTH                           00000000
_ERDPTL                           00000000
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_ERXFCON                          00000000
_ERXFCONbits                      00000000
_ERXND                            00000000
_ERXNDH                           00000000
_ERXNDL                           00000000
_ERXRDPT                          00000000
_ERXRDPTH                         00000000
_ERXRDPTL                         00000000
_ERXST                            00000000
_ERXSTH                           00000000
_ERXSTL                           00000000
_ERXWRPT                          00000000
_ERXWRPTH                         00000000
_ERXWRPTL                         00000000
_ESTAT                            00000000
_ESTATbits                        00000000
_ETXND                            00000000
_ETXNDH                           00000000
_ETXNDL                           00000000
_ETXST                            00000000
_ETXSTH                           00000000
_ETXSTL                           00000000
_EWOLIE                           00000000
_EWOLIEbits                       00000000
_EWOLIR                           00000000
_EWOLIRbits                       00000000
_EWRPT                            00000000
_EWRPTH                           00000000
_EWRPTL                           00000000
_FSR0H                            00000000
_FSR0L                            00000000
_FSR1H                            00000000
_FSR1L                            00000000
_FSR2H                            00000000
_FSR2L                            00000000
_INDF0                            00000000
_INDF1                            00000000
_INDF2                            00000000
_INTCON                           00000000
_INTCON2                          00000000
_INTCON2bits                      00000000
_INTCON3                          00000000
_INTCON3bits                      00000000
_INTCONbits                       00000000
_IPR1                             00000000
_IPR1bits                         00000000
_IPR2                             00000000
_IPR2bits                         00000000
_IPR3                             00000000
_IPR3bits                         00000000
_LATA                             00000000
_LATAbits                         00000000
_LATB                             00000000
_LATBbits                         00000000
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_LATC                             00000000
_LATCbits                         00000000
_LATD                             00000000
_LATDbits                         00000000
_LATE                             00000000
_LATEbits                         00000000
_LATF                             00000000
_LATFbits                         00000000
_LATG                             00000000
_LATGbits                         00000000
_LATH                             00000000
_LATHbits                         00000000
_LATJ                             00000000
_LATJbits                         00000000
_LCDInit                          00000000
_LCDText                          00000000
_LCDUpdate                        00000000
_MAADR1                           00000000
_MAADR2                           00000000
_MAADR3                           00000000
_MAADR4                           00000000
_MAADR5                           00000000
_MAADR6                           00000000
_MABBIPG                          00000000
_MACLCON1                         00000000
_MACLCON1bits                     00000000
_MACLCON2                         00000000
_MACLCON2bits                     00000000
_MACON1                           00000000
_MACON1bits                       00000000
_MACON2                           00000000
_MACON2bits                       00000000
_MACON3                           00000000
_MACON3bits                       00000000
_MACON4                           00000000
_MACON4bits                       00000000
_MAIPG                            00000000
_MAIPGH                           00000000
_MAIPGL                           00000000
_MAMXFL                           00000000
_MAMXFLH                          00000000
_MAMXFLL                          00000000
_MEMCON                           00000000
_MEMCONbits                       00000000
_MICMD                            00000000
_MICMDbits                        00000000
_MICON                            00000000
_MICONbits                        00000000
_MIRD                             00000000
_MIRDH                            00000000
_MIRDL                            00000000
_MIREGADR                         00000000
_MISTAT                           00000000
_MISTATbits                       00000000
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_MIWR                             00000000
_MIWRH                            00000000
_MIWRL                            00000000
_OSCCON                           00000000
_OSCCONbits                       00000000
_OSCTUNE                          00000000
_OSCTUNEbits                      00000000
_PC                               00000000
_PCL                              00000000
_PCLATH                           00000000
_PCLATU                           00000000
_PIE1                             00000000
_PIE1bits                         00000000
_PIE2                             00000000
_PIE2bits                         00000000
_PIE3                             00000000
_PIE3bits                         00000000
_PIR1                             00000000
_PIR1bits                         00000000
_PIR2                             00000000
_PIR2bits                         00000000
_PIR3                             00000000
_PIR3bits                         00000000
_PLUSW0                           00000000
_PLUSW1                           00000000
_PLUSW2                           00000000
_PORTA                            00000000
_PORTAbits                        00000000
_PORTB                            00000000
_PORTBbits                        00000000
_PORTC                            00000000
_PORTCbits                        00000000
_PORTD                            00000000
_PORTDbits                        00000000
_PORTE                            00000000
_PORTEbits                        00000000
_PORTF                            00000000
_PORTFbits                        00000000
_PORTG                            00000000
_PORTGbits                        00000000
_PORTH                            00000000
_PORTHbits                        00000000
_PORTJ                            00000000
_PORTJbits                        00000000
_POSTDEC0                         00000000
_POSTDEC1                         00000000
_POSTDEC2                         00000000
_POSTINC0                         00000000
_POSTINC1                         00000000
_POSTINC2                         00000000
_PR2                              00000000
_PR4                              00000000
_PREINC0                          00000000
_PREINC1                          00000000
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_PREINC2                          00000000
_PROD                             00000000
_PRODH                            00000000
_PRODL                            00000000
_PSPCON                           00000000
_PSPCONbits                       00000000
_RCON                             00000000
_RCONbits                         00000000
_RCREG                            00000000
_RCREG1                           00000000
_RCREG2                           00000000
_RCSTA                            00000000
_RCSTA1                           00000000
_RCSTA1bits                       00000000
_RCSTA2                           00000000
_RCSTA2bits                       00000000
_RCSTAbits                        00000000
_SPBRG                            00000000
_SPBRG1                           00000000
_SPBRG2                           00000000
_SPBRGH                           00000000
_SPBRGH1                          00000000
_SPBRGH2                          00000000
_SSP1ADD                          00000000
_SSP1BUF                          00000000
_SSP1CON1                         00000000
_SSP1CON1bits                     00000000
_SSP1CON2                         00000000
_SSP1CON2bits                     00000000
_SSP1STAT                         00000000
_SSP1STATbits                     00000000
_SSP2ADD                          00000000
_SSP2BUF                          00000000
_SSP2CON1                         00000000
_SSP2CON1bits                     00000000
_SSP2CON2                         00000000
_SSP2CON2bits                     00000000
_SSP2STAT                         00000000
_SSP2STATbits                     00000000
_SSPADD                           00000000
_SSPBUF                           00000000
_SSPCON1                          00000000
_SSPCON1bits                      00000000
_SSPCON2                          00000000
_SSPCON2bits                      00000000
_SSPSTAT                          00000000
_SSPSTATbits                      00000000
_STATUS                           00000000
_STATUSbits                       00000000
_STKPTR                           00000000
_STKPTRbits                       00000000
_T0CON                            00000000
_T0CONbits                        00000000
_T1CON                            00000000
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_T1CONbits                        00000000
_T2CON                            00000000
_T2CONbits                        00000000
_T3CON                            00000000
_T3CONbits                        00000000
_T4CON                            00000000
_T4CONbits                        00000000
_TABLAT                           00000000
_TBLPTR                           00000000
_TBLPTRH                          00000000
_TBLPTRL                          00000000
_TBLPTRU                          00000000
_TMR0H                            00000000
_TMR0L                            00000000
_TMR1H                            00000000
_TMR1L                            00000000
_TMR2                             00000000
_TMR3H                            00000000
_TMR3L                            00000000
_TMR4                             00000000
_TOS                              00000000
_TOSH                             00000000
_TOSL                             00000000
_TOSU                             00000000
_TRISA                            00000000
_TRISAbits                        00000000
_TRISB                            00000000
_TRISBbits                        00000000
_TRISC                            00000000
_TRISCbits                        00000000
_TRISD                            00000000
_TRISDbits                        00000000
_TRISE                            00000000
_TRISEbits                        00000000
_TRISF                            00000000
_TRISFbits                        00000000
_TRISG                            00000000
_TRISGbits                        00000000
_TRISH                            00000000
_TRISHbits                        00000000
_TRISJ                            00000000
_TRISJbits                        00000000
_TXREG                            00000000
_TXREG1                           00000000
_TXREG2                           00000000
_TXSTA                            00000000
_TXSTA1                           00000000
_TXSTA1bits                       00000000
_TXSTA2                           00000000
_TXSTA2bits                       00000000
_TXSTAbits                        00000000
_WDTCON                           00000000
_WDTCONbits                       00000000
_WREG                             00000000
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
__18F97J60                        00000001
__gptrget1                        00000000
__gptrput1                        00000000
__str_0                           00000088
__str_1                           0000008E
__str_2                           0000009E
__str_3                           000000A4
__str_4                           000000B4
_awake_hours                      00000006
_awake_minutes                    00000008
_awake_setting_procedure          00000010
_clock_hours                      00000000
_clock_minutes                    00000002
_clock_seconds                    00000004
_handle_button1_pressure          00000000
_handle_button2_pressure          00000000
_high_isr                         00000000
_in_setting                       00000000
_main                             00000000
_set                              00000012
_setting_hours                    0000000A
_setting_minutes                  0000000C
_sprintf                          00000000
_stdin                            00000000
_stdout                           00000000
_strlcpy                          00000000
_strlen                           00000000
_time_setting_procedure           0000000E
_time_value                       00000000
_ultoa                            00000000
_update_awake_hours               00000000
_update_awake_minutes             00000000
_update_setting_hours             00000000
_update_setting_minutes           00000000
_update_time                      00000000
ivec_0x1_high_isr                 00000008
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B
r0x0c                             0000000C
r0x0d                             0000000D
r0x0e                             0000000E
r0x0f                             0000000F
r0x10                             00000010
r0x11                             00000011
gpasm-0.13.7 beta               Objects/timer.asm11-20-2017  23:13:55         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
r0x12                             00000012
r0x13                             00000013
r0x14                             00000014
r0x15                             00000015


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

