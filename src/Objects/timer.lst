gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;--------------------------------------------------------
               00002 ; File Created by SDCC : free open source ANSI-C Compiler
               00003 ; Version 2.9.4 #5595 (Nov 14 2017) (UNIX)
               00004 ; This file was generated Tue Nov 21 09:21:54 2017
               00005 ;--------------------------------------------------------
               00006 ; PIC16 port for the Microchip 16-bit core micros
               00007 ;--------------------------------------------------------
               00008         list    p=18f97j60
               00009 
               00010         radix dec
               00011 
               00012 ;--------------------------------------------------------
               00013 ; public variables in this module
               00014 ;--------------------------------------------------------
               00015         global _update_time_value
               00016         global _complete_hours_setting
               00017         global _handle_button1_pressure
               00018         global _update_proper_time_value
               00019         global _handle_button2_pressure
               00020         global _assign_default_values
               00021         global _update_clock
               00022         global _DisplayWORD
               00023         global _DisplayString
               00024         global _strlcpy
               00025         global _in_setting
               00026         global _flags
               00027         global _clock
               00028         global _timer
               00029         global _setting
               00030         global _time_value
               00031         global _high_isr
               00032         global _delay_1ms
               00033         global _delay_ms
               00034         global _main
               00035 
               00036 ;--------------------------------------------------------
               00037 ; extern variables in this module
               00038 ;--------------------------------------------------------
               00039         extern __gptrget2
               00040         extern __gptrput2
               00041         extern __gptrget1
               00042         extern __gptrput1
               00043         extern _EBSTCONbits
               00044         extern _MISTATbits
               00045         extern _EFLOCONbits
               00046         extern _MACON1bits
               00047         extern _MACON2bits
               00048         extern _MACON3bits
               00049         extern _MACON4bits
               00050         extern _MACLCON1bits
               00051         extern _MACLCON2bits
               00052         extern _MICONbits
               00053         extern _MICMDbits
               00054         extern _EWOLIEbits
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00055         extern _EWOLIRbits
               00056         extern _ERXFCONbits
               00057         extern _EIEbits
               00058         extern _ESTATbits
               00059         extern _ECON2bits
               00060         extern _EIRbits
               00061         extern _EDATAbits
               00062         extern _SSP2CON2bits
               00063         extern _SSP2CON1bits
               00064         extern _SSP2STATbits
               00065         extern _ECCP2DELbits
               00066         extern _ECCP2ASbits
               00067         extern _ECCP3DELbits
               00068         extern _ECCP3ASbits
               00069         extern _RCSTA2bits
               00070         extern _TXSTA2bits
               00071         extern _CCP5CONbits
               00072         extern _CCP4CONbits
               00073         extern _T4CONbits
               00074         extern _ECCP1DELbits
               00075         extern _BAUDCON2bits
               00076         extern _BAUDCTL2bits
               00077         extern _BAUDCONbits
               00078         extern _BAUDCON1bits
               00079         extern _BAUDCTLbits
               00080         extern _BAUDCTL1bits
               00081         extern _PORTAbits
               00082         extern _PORTBbits
               00083         extern _PORTCbits
               00084         extern _PORTDbits
               00085         extern _PORTEbits
               00086         extern _PORTFbits
               00087         extern _PORTGbits
               00088         extern _PORTHbits
               00089         extern _PORTJbits
               00090         extern _LATAbits
               00091         extern _LATBbits
               00092         extern _LATCbits
               00093         extern _LATDbits
               00094         extern _LATEbits
               00095         extern _LATFbits
               00096         extern _LATGbits
               00097         extern _LATHbits
               00098         extern _LATJbits
               00099         extern _DDRAbits
               00100         extern _TRISAbits
               00101         extern _DDRBbits
               00102         extern _TRISBbits
               00103         extern _DDRCbits
               00104         extern _TRISCbits
               00105         extern _DDRDbits
               00106         extern _TRISDbits
               00107         extern _DDREbits
               00108         extern _TRISEbits
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00109         extern _DDRFbits
               00110         extern _TRISFbits
               00111         extern _DDRGbits
               00112         extern _TRISGbits
               00113         extern _DDRHbits
               00114         extern _TRISHbits
               00115         extern _DDRJbits
               00116         extern _TRISJbits
               00117         extern _OSCTUNEbits
               00118         extern _MEMCONbits
               00119         extern _PIE1bits
               00120         extern _PIR1bits
               00121         extern _IPR1bits
               00122         extern _PIE2bits
               00123         extern _PIR2bits
               00124         extern _IPR2bits
               00125         extern _PIE3bits
               00126         extern _PIR3bits
               00127         extern _IPR3bits
               00128         extern _EECON1bits
               00129         extern _RCSTAbits
               00130         extern _RCSTA1bits
               00131         extern _TXSTAbits
               00132         extern _TXSTA1bits
               00133         extern _PSPCONbits
               00134         extern _T3CONbits
               00135         extern _CMCONbits
               00136         extern _CVRCONbits
               00137         extern _ECCP1ASbits
               00138         extern _CCP3CONbits
               00139         extern _ECCP3CONbits
               00140         extern _CCP2CONbits
               00141         extern _ECCP2CONbits
               00142         extern _CCP1CONbits
               00143         extern _ECCP1CONbits
               00144         extern _ADCON2bits
               00145         extern _ADCON1bits
               00146         extern _ADCON0bits
               00147         extern _SSP1CON2bits
               00148         extern _SSPCON2bits
               00149         extern _SSP1CON1bits
               00150         extern _SSPCON1bits
               00151         extern _SSP1STATbits
               00152         extern _SSPSTATbits
               00153         extern _T2CONbits
               00154         extern _T1CONbits
               00155         extern _RCONbits
               00156         extern _WDTCONbits
               00157         extern _ECON1bits
               00158         extern _OSCCONbits
               00159         extern _T0CONbits
               00160         extern _STATUSbits
               00161         extern _INTCON3bits
               00162         extern _INTCON2bits
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00163         extern _INTCONbits
               00164         extern _STKPTRbits
               00165         extern _stdin
               00166         extern _stdout
               00167         extern _LCDText
               00168         extern _MAADR5
               00169         extern _MAADR6
               00170         extern _MAADR3
               00171         extern _MAADR4
               00172         extern _MAADR1
               00173         extern _MAADR2
               00174         extern _EBSTSD
               00175         extern _EBSTCON
               00176         extern _EBSTCS
               00177         extern _EBSTCSL
               00178         extern _EBSTCSH
               00179         extern _MISTAT
               00180         extern _EFLOCON
               00181         extern _EPAUS
               00182         extern _EPAUSL
               00183         extern _EPAUSH
               00184         extern _MACON1
               00185         extern _MACON2
               00186         extern _MACON3
               00187         extern _MACON4
               00188         extern _MABBIPG
               00189         extern _MAIPG
               00190         extern _MAIPGL
               00191         extern _MAIPGH
               00192         extern _MACLCON1
               00193         extern _MACLCON2
               00194         extern _MAMXFL
               00195         extern _MAMXFLL
               00196         extern _MAMXFLH
               00197         extern _MICON
               00198         extern _MICMD
               00199         extern _MIREGADR
               00200         extern _MIWR
               00201         extern _MIWRL
               00202         extern _MIWRH
               00203         extern _MIRD
               00204         extern _MIRDL
               00205         extern _MIRDH
               00206         extern _EHT0
               00207         extern _EHT1
               00208         extern _EHT2
               00209         extern _EHT3
               00210         extern _EHT4
               00211         extern _EHT5
               00212         extern _EHT6
               00213         extern _EHT7
               00214         extern _EPMM0
               00215         extern _EPMM1
               00216         extern _EPMM2
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00217         extern _EPMM3
               00218         extern _EPMM4
               00219         extern _EPMM5
               00220         extern _EPMM6
               00221         extern _EPMM7
               00222         extern _EPMCS
               00223         extern _EPMCSL
               00224         extern _EPMCSH
               00225         extern _EPMO
               00226         extern _EPMOL
               00227         extern _EPMOH
               00228         extern _EWOLIE
               00229         extern _EWOLIR
               00230         extern _ERXFCON
               00231         extern _EPKTCNT
               00232         extern _EWRPT
               00233         extern _EWRPTL
               00234         extern _EWRPTH
               00235         extern _ETXST
               00236         extern _ETXSTL
               00237         extern _ETXSTH
               00238         extern _ETXND
               00239         extern _ETXNDL
               00240         extern _ETXNDH
               00241         extern _ERXST
               00242         extern _ERXSTL
               00243         extern _ERXSTH
               00244         extern _ERXND
               00245         extern _ERXNDL
               00246         extern _ERXNDH
               00247         extern _ERXRDPT
               00248         extern _ERXRDPTL
               00249         extern _ERXRDPTH
               00250         extern _ERXWRPT
               00251         extern _ERXWRPTL
               00252         extern _ERXWRPTH
               00253         extern _EDMAST
               00254         extern _EDMASTL
               00255         extern _EDMASTH
               00256         extern _EDMAND
               00257         extern _EDMANDL
               00258         extern _EDMANDH
               00259         extern _EDMADST
               00260         extern _EDMADSTL
               00261         extern _EDMADSTH
               00262         extern _EDMACS
               00263         extern _EDMACSL
               00264         extern _EDMACSH
               00265         extern _EIE
               00266         extern _ESTAT
               00267         extern _ECON2
               00268         extern _EIR
               00269         extern _EDATA
               00270         extern _SSP2CON2
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00271         extern _SSP2CON1
               00272         extern _SSP2STAT
               00273         extern _SSP2ADD
               00274         extern _SSP2BUF
               00275         extern _ECCP2DEL
               00276         extern _ECCP2AS
               00277         extern _ECCP3DEL
               00278         extern _ECCP3AS
               00279         extern _RCSTA2
               00280         extern _TXSTA2
               00281         extern _TXREG2
               00282         extern _RCREG2
               00283         extern _SPBRG2
               00284         extern _CCP5CON
               00285         extern _CCPR5
               00286         extern _CCPR5L
               00287         extern _CCPR5H
               00288         extern _CCP4CON
               00289         extern _CCPR4
               00290         extern _CCPR4L
               00291         extern _CCPR4H
               00292         extern _T4CON
               00293         extern _PR4
               00294         extern _TMR4
               00295         extern _ECCP1DEL
               00296         extern _ERDPT
               00297         extern _ERDPTL
               00298         extern _ERDPTH
               00299         extern _BAUDCON2
               00300         extern _BAUDCTL2
               00301         extern _SPBRGH2
               00302         extern _BAUDCON
               00303         extern _BAUDCON1
               00304         extern _BAUDCTL
               00305         extern _BAUDCTL1
               00306         extern _SPBRGH
               00307         extern _SPBRGH1
               00308         extern _PORTA
               00309         extern _PORTB
               00310         extern _PORTC
               00311         extern _PORTD
               00312         extern _PORTE
               00313         extern _PORTF
               00314         extern _PORTG
               00315         extern _PORTH
               00316         extern _PORTJ
               00317         extern _LATA
               00318         extern _LATB
               00319         extern _LATC
               00320         extern _LATD
               00321         extern _LATE
               00322         extern _LATF
               00323         extern _LATG
               00324         extern _LATH
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00325         extern _LATJ
               00326         extern _DDRA
               00327         extern _TRISA
               00328         extern _DDRB
               00329         extern _TRISB
               00330         extern _DDRC
               00331         extern _TRISC
               00332         extern _DDRD
               00333         extern _TRISD
               00334         extern _DDRE
               00335         extern _TRISE
               00336         extern _DDRF
               00337         extern _TRISF
               00338         extern _DDRG
               00339         extern _TRISG
               00340         extern _DDRH
               00341         extern _TRISH
               00342         extern _DDRJ
               00343         extern _TRISJ
               00344         extern _OSCTUNE
               00345         extern _MEMCON
               00346         extern _PIE1
               00347         extern _PIR1
               00348         extern _IPR1
               00349         extern _PIE2
               00350         extern _PIR2
               00351         extern _IPR2
               00352         extern _PIE3
               00353         extern _PIR3
               00354         extern _IPR3
               00355         extern _EECON1
               00356         extern _EECON2
               00357         extern _RCSTA
               00358         extern _RCSTA1
               00359         extern _TXSTA
               00360         extern _TXSTA1
               00361         extern _TXREG
               00362         extern _TXREG1
               00363         extern _RCREG
               00364         extern _RCREG1
               00365         extern _SPBRG
               00366         extern _SPBRG1
               00367         extern _PSPCON
               00368         extern _T3CON
               00369         extern _TMR3L
               00370         extern _TMR3H
               00371         extern _CMCON
               00372         extern _CVRCON
               00373         extern _ECCP1AS
               00374         extern _CCP3CON
               00375         extern _ECCP3CON
               00376         extern _CCPR3
               00377         extern _CCPR3L
               00378         extern _CCPR3H
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00379         extern _CCP2CON
               00380         extern _ECCP2CON
               00381         extern _CCPR2
               00382         extern _CCPR2L
               00383         extern _CCPR2H
               00384         extern _CCP1CON
               00385         extern _ECCP1CON
               00386         extern _CCPR1
               00387         extern _CCPR1L
               00388         extern _CCPR1H
               00389         extern _ADCON2
               00390         extern _ADCON1
               00391         extern _ADCON0
               00392         extern _ADRES
               00393         extern _ADRESL
               00394         extern _ADRESH
               00395         extern _SSP1CON2
               00396         extern _SSPCON2
               00397         extern _SSP1CON1
               00398         extern _SSPCON1
               00399         extern _SSP1STAT
               00400         extern _SSPSTAT
               00401         extern _SSP1ADD
               00402         extern _SSPADD
               00403         extern _SSP1BUF
               00404         extern _SSPBUF
               00405         extern _T2CON
               00406         extern _PR2
               00407         extern _TMR2
               00408         extern _T1CON
               00409         extern _TMR1L
               00410         extern _TMR1H
               00411         extern _RCON
               00412         extern _WDTCON
               00413         extern _ECON1
               00414         extern _OSCCON
               00415         extern _T0CON
               00416         extern _TMR0L
               00417         extern _TMR0H
               00418         extern _STATUS
               00419         extern _FSR2L
               00420         extern _FSR2H
               00421         extern _PLUSW2
               00422         extern _PREINC2
               00423         extern _POSTDEC2
               00424         extern _POSTINC2
               00425         extern _INDF2
               00426         extern _BSR
               00427         extern _FSR1L
               00428         extern _FSR1H
               00429         extern _PLUSW1
               00430         extern _PREINC1
               00431         extern _POSTDEC1
               00432         extern _POSTINC1
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00433         extern _INDF1
               00434         extern _WREG
               00435         extern _FSR0L
               00436         extern _FSR0H
               00437         extern _PLUSW0
               00438         extern _PREINC0
               00439         extern _POSTDEC0
               00440         extern _POSTINC0
               00441         extern _INDF0
               00442         extern _INTCON3
               00443         extern _INTCON2
               00444         extern _INTCON
               00445         extern _PROD
               00446         extern _PRODL
               00447         extern _PRODH
               00448         extern _TABLAT
               00449         extern _TBLPTR
               00450         extern _TBLPTRL
               00451         extern _TBLPTRH
               00452         extern _TBLPTRU
               00453         extern _PC
               00454         extern _PCL
               00455         extern _PCLATH
               00456         extern _PCLATU
               00457         extern _STKPTR
               00458         extern _TOS
               00459         extern _TOSL
               00460         extern _TOSH
               00461         extern _TOSU
               00462         extern _sprintf
               00463         extern _ultoa
               00464         extern _strlen
               00465         extern _LCDInit
               00466         extern _LCDUpdate
               00467 ;--------------------------------------------------------
               00468 ;       Equates to used internal registers
               00469 ;--------------------------------------------------------
  00000FD8     00470 STATUS  equ     0xfd8
  00000FFA     00471 PCLATH  equ     0xffa
  00000FFB     00472 PCLATU  equ     0xffb
  00000FE8     00473 WREG    equ     0xfe8
  00000FE0     00474 BSR     equ     0xfe0
  00000FE9     00475 FSR0L   equ     0xfe9
  00000FEA     00476 FSR0H   equ     0xfea
  00000FE1     00477 FSR1L   equ     0xfe1
  00000FD9     00478 FSR2L   equ     0xfd9
  00000FEF     00479 INDF0   equ     0xfef
  00000FE5     00480 POSTDEC1        equ     0xfe5
  00000FE4     00481 PREINC1 equ     0xfe4
  00000FDB     00482 PLUSW2  equ     0xfdb
  00000FF3     00483 PRODL   equ     0xff3
  00000FF4     00484 PRODH   equ     0xff4
               00485 
               00486 
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00487 ; Internal registers
               00488 .registers      udata_ovr       0x0000
               00489 r0x00   res     1
               00490 r0x01   res     1
               00491 r0x02   res     1
               00492 r0x03   res     1
               00493 r0x04   res     1
               00494 r0x05   res     1
               00495 r0x06   res     1
               00496 r0x07   res     1
               00497 r0x08   res     1
               00498 r0x09   res     1
               00499 r0x0a   res     1
               00500 r0x0b   res     1
               00501 r0x0c   res     1
               00502 r0x0d   res     1
               00503 r0x0e   res     1
               00504 r0x0f   res     1
               00505 r0x10   res     1
               00506 r0x11   res     1
               00507 r0x12   res     1
               00508 r0x13   res     1
               00509 r0x14   res     1
               00510 r0x15   res     1
               00511 
               00512 udata_timer_0   udata
               00513 _time_value     res     9
               00514 
               00515 udata_timer_1   udata
               00516 _in_setting     res     1
               00517 
               00518 udata_timer_2   udata
               00519 _flags  res     8
               00520 
               00521 udata_timer_3   udata
               00522 _clock  res     6
               00523 
               00524 udata_timer_4   udata
               00525 _setting        res     4
               00526 
               00527 udata_timer_5   udata
               00528 _timer  res     4
               00529 
               00530 udata_timer_6   udata
               00531 _DisplayWORD_WDigit_1_1 res     6
               00532 
               00533 ;--------------------------------------------------------
               00534 ; interrupt vector 
               00535 ;--------------------------------------------------------
               00536 
               00537 ;--------------------------------------------------------
               00538 ; global & static initialisations
               00539 ;--------------------------------------------------------
               00540 ; ; Starting pCode block for absolute section
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00541 ; ;-----------------------------------------
               00542 S_timer_ivec_0x1_high_isr       code    0X000008
0008 00543 ivec_0x1_high_isr:
0008 EF00 F000 00544         GOTO    _high_isr
               00545 
               00546 ; I code from now on!
               00547 ; ; Starting pCode block
               00548 S_timer__main   code
0000 00549 _main:
               00550 ;       .line   189; timer.c    LCDInit();
0000 EC00 F000 00551         CALL    _LCDInit
               00552 ;       .line   190; timer.c    DelayMs(100);
0004 0E10      00553         MOVLW   0x10
0006 6E00      00554         MOVWF   r0x00
0008 0E98      00555         MOVLW   0x98
000A 6E00      00556         MOVWF   r0x01
000C 0E02      00557         MOVLW   0x02
000E 6E00      00558         MOVWF   r0x02
0010 6A00      00559         CLRF    r0x03
0012 00560 _00210_DS_:
0012 C000 F000 00561         MOVFF   r0x00, r0x04
0016 C000 F000 00562         MOVFF   r0x01, r0x05
001A C000 F000 00563         MOVFF   r0x02, r0x06
001E C000 F000 00564         MOVFF   r0x03, r0x07
0022 0EFF      00565         MOVLW   0xff
0024 2600      00566         ADDWF   r0x00, F
0026 0EFF      00567         MOVLW   0xff
0028 2200      00568         ADDWFC  r0x01, F
002A 0EFF      00569         MOVLW   0xff
002C 2200      00570         ADDWFC  r0x02, F
002E 0EFF      00571         MOVLW   0xff
0030 2200      00572         ADDWFC  r0x03, F
0032 5000      00573         MOVF    r0x04, W
0034 1000      00574         IORWF   r0x05, W
0036 1000      00575         IORWF   r0x06, W
0038 1000      00576         IORWF   r0x07, W
003A E100      00577         BNZ     _00210_DS_
               00578 ;       .line   192; timer.c    RCONbits.IPEN      = 1;   //enable interrupts priority levels
003C 8E00      00579         BSF     _RCONbits, 7
               00580 ;       .line   193; timer.c    INTCON3bits.INT1P  = 1;   //connect INT1 interrupt (button 2) to high prio
003E 8C00      00581         BSF     _INTCON3bits, 6
               00582 ;       .line   194; timer.c    INTCON2bits.INT3IP = 1;
0040 8200      00583         BSF     _INTCON2bits, 1
               00584 ;       .line   195; timer.c    INTCON2bits.INTEDG1= 0;   //INT1 interrupts on falling edge
0042 9A00      00585         BCF     _INTCON2bits, 5
               00586 ;       .line   196; timer.c    INTCON2bits.INTEDG3= 0;   //connect INT1 interrupt (button 2) to high prio
0044 9600      00587         BCF     _INTCON2bits, 3
               00588 ;       .line   197; timer.c    INTCONbits.GIE     = 1;   //enable high priority interrupts
0046 8E00      00589         BSF     _INTCONbits, 7
               00590 ;       .line   198; timer.c    INTCON3bits.INT1F  = 0;   //clear INT1 flag
0048 9000      00591         BCF     _INTCON3bits, 0
               00592 ;       .line   199; timer.c    INTCON3bits.INT3F  = 0;
004A 9400      00593         BCF     _INTCON3bits, 2
               00594 ;       .line   200; timer.c    INTCON3bits.INT1E  = 1;   //enable INT1 interrupt (button 2)
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
004C 8600      00595         BSF     _INTCON3bits, 3
               00596 ;       .line   201; timer.c    INTCON3bits.INT3E  = 1;   
004E 8A00      00597         BSF     _INTCON3bits, 5
               00598 ;       .line   203; timer.c    DisplayString(0,"Enter the time:");
0050 0E00      00599         MOVLW   UPPER(__str_1)
0052 6EE5      00600         MOVWF   POSTDEC1
0054 0E00      00601         MOVLW   HIGH(__str_1)
0056 6EE5      00602         MOVWF   POSTDEC1
0058 0E00      00603         MOVLW   LOW(__str_1)
005A 6EE5      00604         MOVWF   POSTDEC1
005C 0E00      00605         MOVLW   0x00
005E 6EE5      00606         MOVWF   POSTDEC1
0060 EC00 F000 00607         CALL    _DisplayString
0064 0E04      00608         MOVLW   0x04
0066 26E1      00609         ADDWF   FSR1L, F
               00610 ;       .line   204; timer.c    DisplayString(16, "00:00");
0068 0E00      00611         MOVLW   UPPER(__str_2)
006A 6EE5      00612         MOVWF   POSTDEC1
006C 0E00      00613         MOVLW   HIGH(__str_2)
006E 6EE5      00614         MOVWF   POSTDEC1
0070 0E00      00615         MOVLW   LOW(__str_2)
0072 6EE5      00616         MOVWF   POSTDEC1
0074 0E10      00617         MOVLW   0x10
0076 6EE5      00618         MOVWF   POSTDEC1
0078 EC00 F000 00619         CALL    _DisplayString
007C 0E04      00620         MOVLW   0x04
007E 26E1      00621         ADDWF   FSR1L, F
               00622 ;       .line   206; timer.c    assign_default_values();
0080 EC00 F000 00623         CALL    _assign_default_values
0084 00624 _00226_DS_:
0084 0000      00625         BANKSEL (_flags + 2)
               00626 ;       .line   209; timer.c    DisplayString(16 + 6 * flags.awake_setting_procedure, &time_value[0]);
0086 5100      00627         MOVF    (_flags + 2), W, B
0088 6E00      00628         MOVWF   r0x00
               00629 ; ;multiply lit val:0x06 by variable r0x00 and store in r0x00
               00630 ; ;Unrolled 8 X 8 multiplication
               00631 ; ;FIXME: the function does not support result==WREG
008A 5000      00632         MOVF    r0x00, W
008C 0D06      00633         MULLW   0x06
008E CFF3 F000 00634         MOVFF   PRODL, r0x00
0092 0E10      00635         MOVLW   0x10
0094 2600      00636         ADDWF   r0x00, F
0096 0E00      00637         MOVLW   HIGH(_time_value)
0098 6E00      00638         MOVWF   r0x02
009A 0E00      00639         MOVLW   LOW(_time_value)
009C 6E00      00640         MOVWF   r0x01
009E 0E80      00641         MOVLW   0x80
00A0 6E00      00642         MOVWF   r0x03
00A2 5000      00643         MOVF    r0x03, W
00A4 6EE5      00644         MOVWF   POSTDEC1
00A6 5000      00645         MOVF    r0x02, W
00A8 6EE5      00646         MOVWF   POSTDEC1
00AA 5000      00647         MOVF    r0x01, W
00AC 6EE5      00648         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00AE 5000      00649         MOVF    r0x00, W
00B0 6EE5      00650         MOVWF   POSTDEC1
00B2 EC00 F000 00651         CALL    _DisplayString
00B6 0E04      00652         MOVLW   0x04
00B8 26E1      00653         ADDWF   FSR1L, F
00BA 0000      00654         BANKSEL (_flags + 2)
               00655 ;       .line   210; timer.c    if (flags.awake_setting_procedure && timer.hours == 0 && timer.minutes == 0) {
00BC 5100      00656         MOVF    (_flags + 2), W, B
00BE 0000      00657         BANKSEL (_flags + 3)
00C0 1100      00658         IORWF   (_flags + 3), W, B
00C2 E000      00659         BZ      _00221_DS_
00C4 0000      00660         BANKSEL _timer
00C6 5100      00661         MOVF    _timer, W, B
00C8 0000      00662         BANKSEL (_timer + 1)
00CA 1100      00663         IORWF   (_timer + 1), W, B
00CC E100      00664         BNZ     _00221_DS_
00CE 0000      00665         BANKSEL (_timer + 2)
00D0 5100      00666         MOVF    (_timer + 2), W, B
00D2 0000      00667         BANKSEL (_timer + 3)
00D4 1100      00668         IORWF   (_timer + 3), W, B
00D6 E100      00669         BNZ     _00221_DS_
               00670 ;       .line   211; timer.c    DisplayString(0, "Enter the wake ");
00D8 0E00      00671         MOVLW   UPPER(__str_3)
00DA 6EE5      00672         MOVWF   POSTDEC1
00DC 0E00      00673         MOVLW   HIGH(__str_3)
00DE 6EE5      00674         MOVWF   POSTDEC1
00E0 0E00      00675         MOVLW   LOW(__str_3)
00E2 6EE5      00676         MOVWF   POSTDEC1
00E4 0E00      00677         MOVLW   0x00
00E6 6EE5      00678         MOVWF   POSTDEC1
00E8 EC00 F000 00679         CALL    _DisplayString
00EC 0E04      00680         MOVLW   0x04
00EE 26E1      00681         ADDWF   FSR1L, F
               00682 ;       .line   212; timer.c    DisplayString(16, "time: ");
00F0 0E00      00683         MOVLW   UPPER(__str_4)
00F2 6EE5      00684         MOVWF   POSTDEC1
00F4 0E00      00685         MOVLW   HIGH(__str_4)
00F6 6EE5      00686         MOVWF   POSTDEC1
00F8 0E00      00687         MOVLW   LOW(__str_4)
00FA 6EE5      00688         MOVWF   POSTDEC1
00FC 0E10      00689         MOVLW   0x10
00FE 6EE5      00690         MOVWF   POSTDEC1
0100 EC00 F000 00691         CALL    _DisplayString
0104 0E04      00692         MOVLW   0x04
0106 26E1      00693         ADDWF   FSR1L, F
0108 D000      00694         BRA     _00226_DS_
010A 00695 _00221_DS_:
010A 0000      00696         BANKSEL (_flags + 4)
               00697 ;       .line   213; timer.c    } else if (flags.set) {
010C 5100      00698         MOVF    (_flags + 4), W, B
010E 0000      00699         BANKSEL (_flags + 5)
0110 1100      00700         IORWF   (_flags + 5), W, B
0112 B4D8      00701         BTFSC   STATUS, 2
0114 D000      00702         BRA     _00226_DS_
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0116 0000      00703         BANKSEL (_flags + 6)
               00704 ;       .line   214; timer.c    if (!flags.lcd_updated) {
0118 5100      00705         MOVF    (_flags + 6), W, B
011A 0000      00706         BANKSEL (_flags + 7)
011C 1100      00707         IORWF   (_flags + 7), W, B
011E E100      00708         BNZ     _00217_DS_
               00709 ;       .line   215; timer.c    DisplayString(0, "               ");
0120 0E00      00710         MOVLW   UPPER(__str_5)
0122 6EE5      00711         MOVWF   POSTDEC1
0124 0E00      00712         MOVLW   HIGH(__str_5)
0126 6EE5      00713         MOVWF   POSTDEC1
0128 0E00      00714         MOVLW   LOW(__str_5)
012A 6EE5      00715         MOVWF   POSTDEC1
012C 0E00      00716         MOVLW   0x00
012E 6EE5      00717         MOVWF   POSTDEC1
0130 EC00 F000 00718         CALL    _DisplayString
0134 0E04      00719         MOVLW   0x04
0136 26E1      00720         ADDWF   FSR1L, F
               00721 ;       .line   216; timer.c    DisplayString(16 + 6, "         ");
0138 0E00      00722         MOVLW   UPPER(__str_6)
013A 6EE5      00723         MOVWF   POSTDEC1
013C 0E00      00724         MOVLW   HIGH(__str_6)
013E 6EE5      00725         MOVWF   POSTDEC1
0140 0E00      00726         MOVLW   LOW(__str_6)
0142 6EE5      00727         MOVWF   POSTDEC1
0144 0E16      00728         MOVLW   0x16
0146 6EE5      00729         MOVWF   POSTDEC1
0148 EC00 F000 00730         CALL    _DisplayString
014C 0E04      00731         MOVLW   0x04
014E 26E1      00732         ADDWF   FSR1L, F
               00733 ;       .line   217; timer.c    DisplayString(16, &time_value[0]);
0150 0E00      00734         MOVLW   HIGH(_time_value)
0152 6E00      00735         MOVWF   r0x01
0154 0E00      00736         MOVLW   LOW(_time_value)
0156 6E00      00737         MOVWF   r0x00
0158 0E80      00738         MOVLW   0x80
015A 6E00      00739         MOVWF   r0x02
015C 5000      00740         MOVF    r0x02, W
015E 6EE5      00741         MOVWF   POSTDEC1
0160 5000      00742         MOVF    r0x01, W
0162 6EE5      00743         MOVWF   POSTDEC1
0164 5000      00744         MOVF    r0x00, W
0166 6EE5      00745         MOVWF   POSTDEC1
0168 0E10      00746         MOVLW   0x10
016A 6EE5      00747         MOVWF   POSTDEC1
016C EC00 F000 00748         CALL    _DisplayString
0170 0E04      00749         MOVLW   0x04
0172 26E1      00750         ADDWF   FSR1L, F
               00751 ;       .line   218; timer.c    flags.lcd_updated = 1;
0174 0E01      00752         MOVLW   0x01
0176 0000      00753         BANKSEL (_flags + 6)
0178 6F00      00754         MOVWF   (_flags + 6), B
017A 0000      00755         BANKSEL (_flags + 7)
017C 6B00      00756         CLRF    (_flags + 7), B
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
017E 00757 _00217_DS_:
               00758 ;       .line   220; timer.c    delay_ms(1000);
017E 0E03      00759         MOVLW   0x03
0180 6EE5      00760         MOVWF   POSTDEC1
0182 0EE8      00761         MOVLW   0xe8
0184 6EE5      00762         MOVWF   POSTDEC1
0186 EC00 F000 00763         CALL    _delay_ms
018A 0E02      00764         MOVLW   0x02
018C 26E1      00765         ADDWF   FSR1L, F
               00766 ;       .line   221; timer.c    update_clock();
018E EC00 F000 00767         CALL    _update_clock
0192 D000      00768         BRA     _00226_DS_
0194 0012      00769         RETURN  
               00770 
               00771 ; ; Starting pCode block
               00772 S_timer__strlcpy        code
0000 00773 _strlcpy:
               00774 ;       .line   327; timer.c    strlcpy(char *dst, const char *src, size_t siz)
0000 CFD9 FFE5 00775         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00776         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00777         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00778         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00779         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00780         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00781         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00782         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 00783         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 00784         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 00785         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 00786         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 00787         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 00788         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 00789         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 00790         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 00791         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 00792         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 00793         MOVFF   r0x10, POSTDEC1
004C C000 FFE5 00794         MOVFF   r0x11, POSTDEC1
0050 C000 FFE5 00795         MOVFF   r0x12, POSTDEC1
0054 C000 FFE5 00796         MOVFF   r0x13, POSTDEC1
0058 C000 FFE5 00797         MOVFF   r0x14, POSTDEC1
005C C000 FFE5 00798         MOVFF   r0x15, POSTDEC1
0060 0E02      00799         MOVLW   0x02
0062 CFDB F000 00800         MOVFF   PLUSW2, r0x00
0066 0E03      00801         MOVLW   0x03
0068 CFDB F000 00802         MOVFF   PLUSW2, r0x01
006C 0E04      00803         MOVLW   0x04
006E CFDB F000 00804         MOVFF   PLUSW2, r0x02
0072 0E05      00805         MOVLW   0x05
0074 CFDB F000 00806         MOVFF   PLUSW2, r0x03
0078 0E06      00807         MOVLW   0x06
007A CFDB F000 00808         MOVFF   PLUSW2, r0x04
007E 0E07      00809         MOVLW   0x07
0080 CFDB F000 00810         MOVFF   PLUSW2, r0x05
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0084 0E08      00811         MOVLW   0x08
0086 CFDB F000 00812         MOVFF   PLUSW2, r0x06
008A 0E09      00813         MOVLW   0x09
008C CFDB F000 00814         MOVFF   PLUSW2, r0x07
               00815 ;       .line   329; timer.c    char       *d = dst;
0090 C000 F000 00816         MOVFF   r0x00, r0x08
0094 C000 F000 00817         MOVFF   r0x01, r0x09
0098 C000 F000 00818         MOVFF   r0x02, r0x0a
               00819 ;       .line   330; timer.c    const char *s = src;
009C C000 F000 00820         MOVFF   r0x03, r0x0b
00A0 C000 F000 00821         MOVFF   r0x04, r0x0c
00A4 C000 F000 00822         MOVFF   r0x05, r0x0d
               00823 ;       .line   331; timer.c    size_t      n = siz;
00A8 C000 F000 00824         MOVFF   r0x06, r0x0e
00AC C000 F000 00825         MOVFF   r0x07, r0x0f
               00826 ;       .line   334; timer.c    if (n != 0)
00B0 5000      00827         MOVF    r0x06, W
00B2 1000      00828         IORWF   r0x07, W
00B4 B4D8      00829         BTFSC   STATUS, 2
00B6 D000      00830         BRA     _00275_DS_
               00831 ;       .line   336; timer.c    while (--n != 0)
00B8 C000 F000 00832         MOVFF   r0x03, r0x10
00BC C000 F000 00833         MOVFF   r0x04, r0x11
00C0 C000 F000 00834         MOVFF   r0x05, r0x12
00C4 C000 F000 00835         MOVFF   r0x06, r0x13
00C8 C000 F000 00836         MOVFF   r0x07, r0x14
00CC 00837 _00271_DS_:
00CC 0EFF      00838         MOVLW   0xff
00CE 2600      00839         ADDWF   r0x13, F
00D0 A0D8      00840         BTFSS   STATUS, 0
00D2 0600      00841         DECF    r0x14, F
00D4 5000      00842         MOVF    r0x13, W
00D6 1000      00843         IORWF   r0x14, W
00D8 E000      00844         BZ      _00290_DS_
               00845 ;       .line   338; timer.c    if ((*d++ = *s++) == '\0')
00DA C000 FFE9 00846         MOVFF   r0x10, FSR0L
00DE C000 FFF3 00847         MOVFF   r0x11, PRODL
00E2 5000      00848         MOVF    r0x12, W
00E4 EC00 F000 00849         CALL    __gptrget1
00E8 6E00      00850         MOVWF   r0x15
00EA 2A00      00851         INCF    r0x10, F
00EC B0D8      00852         BTFSC   STATUS, 0
00EE 2A00      00853         INCF    r0x11, F
00F0 B0D8      00854         BTFSC   STATUS, 0
00F2 2A00      00855         INCF    r0x12, F
00F4 C000 FFE5 00856         MOVFF   r0x15, POSTDEC1
00F8 C000 FFE9 00857         MOVFF   r0x00, FSR0L
00FC C000 FFF3 00858         MOVFF   r0x01, PRODL
0100 5000      00859         MOVF    r0x02, W
0102 EC00 F000 00860         CALL    __gptrput1
0106 2A00      00861         INCF    r0x00, F
0108 B0D8      00862         BTFSC   STATUS, 0
010A 2A00      00863         INCF    r0x01, F
010C B0D8      00864         BTFSC   STATUS, 0
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
010E 2A00      00865         INCF    r0x02, F
0110 5000      00866         MOVF    r0x15, W
0112 E100      00867         BNZ     _00271_DS_
0114 00868 _00290_DS_:
               00869 ;       .line   339; timer.c    break;
0114 C000 F000 00870         MOVFF   r0x10, r0x0b
0118 C000 F000 00871         MOVFF   r0x11, r0x0c
011C C000 F000 00872         MOVFF   r0x12, r0x0d
0120 C000 F000 00873         MOVFF   r0x00, r0x08
0124 C000 F000 00874         MOVFF   r0x01, r0x09
0128 C000 F000 00875         MOVFF   r0x02, r0x0a
012C C000 F000 00876         MOVFF   r0x13, r0x0e
0130 C000 F000 00877         MOVFF   r0x14, r0x0f
0134 00878 _00275_DS_:
               00879 ;       .line   344; timer.c    if (n == 0)
0134 5000      00880         MOVF    r0x0e, W
0136 1000      00881         IORWF   r0x0f, W
0138 E100      00882         BNZ     _00282_DS_
               00883 ;       .line   346; timer.c    if (siz != 0)
013A 5000      00884         MOVF    r0x06, W
013C 1000      00885         IORWF   r0x07, W
013E E000      00886         BZ      _00289_DS_
               00887 ;       .line   347; timer.c    *d = '\0';          /* NUL-terminate dst */
0140 0E00      00888         MOVLW   0x00
0142 6EE5      00889         MOVWF   POSTDEC1
0144 C000 FFE9 00890         MOVFF   r0x08, FSR0L
0148 C000 FFF3 00891         MOVFF   r0x09, PRODL
014C 5000      00892         MOVF    r0x0a, W
014E EC00 F000 00893         CALL    __gptrput1
0152 00894 _00289_DS_:
               00895 ;       .line   348; timer.c    while (*s++)
0152 C000 F000 00896         MOVFF   r0x0b, r0x00
0156 C000 F000 00897         MOVFF   r0x0c, r0x01
015A C000 F000 00898         MOVFF   r0x0d, r0x02
015E 00899 _00278_DS_:
015E C000 FFE9 00900         MOVFF   r0x00, FSR0L
0162 C000 FFF3 00901         MOVFF   r0x01, PRODL
0166 5000      00902         MOVF    r0x02, W
0168 EC00 F000 00903         CALL    __gptrget1
016C 6E00      00904         MOVWF   r0x06
016E 2A00      00905         INCF    r0x00, F
0170 B0D8      00906         BTFSC   STATUS, 0
0172 2A00      00907         INCF    r0x01, F
0174 B0D8      00908         BTFSC   STATUS, 0
0176 2A00      00909         INCF    r0x02, F
0178 5000      00910         MOVF    r0x06, W
017A E100      00911         BNZ     _00278_DS_
017C C000 F000 00912         MOVFF   r0x00, r0x0b
0180 C000 F000 00913         MOVFF   r0x01, r0x0c
0184 C000 F000 00914         MOVFF   r0x02, r0x0d
0188 00915 _00282_DS_:
               00916 ;       .line   352; timer.c    return (s - src - 1);       /* count does not include NUL */
0188 5000      00917         MOVF    r0x03, W
018A 5C00      00918         SUBWF   r0x0b, W
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
018C 6E00      00919         MOVWF   r0x03
018E 5000      00920         MOVF    r0x04, W
0190 5800      00921         SUBWFB  r0x0c, W
0192 6E00      00922         MOVWF   r0x04
0194 0EFF      00923         MOVLW   0xff
0196 2600      00924         ADDWF   r0x03, F
0198 A0D8      00925         BTFSS   STATUS, 0
019A 0600      00926         DECF    r0x04, F
019C C000 FFF3 00927         MOVFF   r0x04, PRODL
01A0 5000      00928         MOVF    r0x03, W
01A2 CFE4 F000 00929         MOVFF   PREINC1, r0x15
01A6 CFE4 F000 00930         MOVFF   PREINC1, r0x14
01AA CFE4 F000 00931         MOVFF   PREINC1, r0x13
01AE CFE4 F000 00932         MOVFF   PREINC1, r0x12
01B2 CFE4 F000 00933         MOVFF   PREINC1, r0x11
01B6 CFE4 F000 00934         MOVFF   PREINC1, r0x10
01BA CFE4 F000 00935         MOVFF   PREINC1, r0x0f
01BE CFE4 F000 00936         MOVFF   PREINC1, r0x0e
01C2 CFE4 F000 00937         MOVFF   PREINC1, r0x0d
01C6 CFE4 F000 00938         MOVFF   PREINC1, r0x0c
01CA CFE4 F000 00939         MOVFF   PREINC1, r0x0b
01CE CFE4 F000 00940         MOVFF   PREINC1, r0x0a
01D2 CFE4 F000 00941         MOVFF   PREINC1, r0x09
01D6 CFE4 F000 00942         MOVFF   PREINC1, r0x08
01DA CFE4 F000 00943         MOVFF   PREINC1, r0x07
01DE CFE4 F000 00944         MOVFF   PREINC1, r0x06
01E2 CFE4 F000 00945         MOVFF   PREINC1, r0x05
01E6 CFE4 F000 00946         MOVFF   PREINC1, r0x04
01EA CFE4 F000 00947         MOVFF   PREINC1, r0x03
01EE CFE4 F000 00948         MOVFF   PREINC1, r0x02
01F2 CFE4 F000 00949         MOVFF   PREINC1, r0x01
01F6 CFE4 F000 00950         MOVFF   PREINC1, r0x00
01FA CFE4 FFD9 00951         MOVFF   PREINC1, FSR2L
01FE 0012      00952         RETURN  
               00953 
               00954 ; ; Starting pCode block
               00955 S_timer__DisplayString  code
0000 00956 _DisplayString:
               00957 ;       .line   275; timer.c    void DisplayString(BYTE pos, char* text)
0000 CFD9 FFE5 00958         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00959         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00960         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00961         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00962         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00963         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00964         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00965         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 00966         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 00967         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 00968         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 00969         MOVFF   r0x09, POSTDEC1
0030 0E02      00970         MOVLW   0x02
0032 CFDB F000 00971         MOVFF   PLUSW2, r0x00
0036 0E03      00972         MOVLW   0x03
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0038 CFDB F000 00973         MOVFF   PLUSW2, r0x01
003C 0E04      00974         MOVLW   0x04
003E CFDB F000 00975         MOVFF   PLUSW2, r0x02
0042 0E05      00976         MOVLW   0x05
0044 CFDB F000 00977         MOVFF   PLUSW2, r0x03
               00978 ;       .line   277; timer.c    BYTE        l = strlen(text);/*number of actual chars in the string*/
0048 5000      00979         MOVF    r0x03, W
004A 6EE5      00980         MOVWF   POSTDEC1
004C 5000      00981         MOVF    r0x02, W
004E 6EE5      00982         MOVWF   POSTDEC1
0050 5000      00983         MOVF    r0x01, W
0052 6EE5      00984         MOVWF   POSTDEC1
0054 EC00 F000 00985         CALL    _strlen
0058 6E00      00986         MOVWF   r0x04
005A CFF3 F000 00987         MOVFF   PRODL, r0x05
005E 0E03      00988         MOVLW   0x03
0060 26E1      00989         ADDWF   FSR1L, F
               00990 ;       .line   278; timer.c    BYTE      max = 32-pos;    /*available space on the lcd*/
0062 5000      00991         MOVF    r0x00, W
0064 0820      00992         SUBLW   0x20
0066 6E00      00993         MOVWF   r0x05
               00994 ;       .line   279; timer.c    char       *d = (char*)&LCDText[pos];
0068 6A00      00995         CLRF    r0x06
006A 0E00      00996         MOVLW   LOW(_LCDText)
006C 2600      00997         ADDWF   r0x00, F
006E 0E00      00998         MOVLW   HIGH(_LCDText)
0070 2200      00999         ADDWFC  r0x06, F
0072 5000      01000         MOVF    r0x06, W
0074 6E00      01001         MOVWF   r0x06
0076 5000      01002         MOVF    r0x00, W
0078 6E00      01003         MOVWF   r0x00
007A 0E80      01004         MOVLW   0x80
007C 6E00      01005         MOVWF   r0x07
               01006 ;       .line   281; timer.c    size_t      n = (l<max)?l:max;
007E 5000      01007         MOVF    r0x05, W
0080 5C00      01008         SUBWF   r0x04, W
0082 E300      01009         BNC     _00259_DS_
0084 C000 F000 01010         MOVFF   r0x05, r0x04
0088 01011 _00259_DS_:
0088 6A00      01012         CLRF    r0x05
               01013 ;       .line   283; timer.c    if (n != 0)
008A 5000      01014         MOVF    r0x04, W
008C 1000      01015         IORWF   r0x05, W
008E E000      01016         BZ      _00255_DS_
0090 01017 _00251_DS_:
               01018 ;       .line   284; timer.c    while (n-- != 0)*d++ = *s++;
0090 C000 F000 01019         MOVFF   r0x04, r0x08
0094 C000 F000 01020         MOVFF   r0x05, r0x09
0098 0EFF      01021         MOVLW   0xff
009A 2600      01022         ADDWF   r0x04, F
009C A0D8      01023         BTFSS   STATUS, 0
009E 0600      01024         DECF    r0x05, F
00A0 5000      01025         MOVF    r0x08, W
00A2 1000      01026         IORWF   r0x09, W
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00A4 E000      01027         BZ      _00255_DS_
00A6 C000 FFE9 01028         MOVFF   r0x01, FSR0L
00AA C000 FFF3 01029         MOVFF   r0x02, PRODL
00AE 5000      01030         MOVF    r0x03, W
00B0 EC00 F000 01031         CALL    __gptrget1
00B4 6E00      01032         MOVWF   r0x08
00B6 2A00      01033         INCF    r0x01, F
00B8 B0D8      01034         BTFSC   STATUS, 0
00BA 2A00      01035         INCF    r0x02, F
00BC B0D8      01036         BTFSC   STATUS, 0
00BE 2A00      01037         INCF    r0x03, F
00C0 C000 FFE5 01038         MOVFF   r0x08, POSTDEC1
00C4 C000 FFE9 01039         MOVFF   r0x00, FSR0L
00C8 C000 FFF3 01040         MOVFF   r0x06, PRODL
00CC 5000      01041         MOVF    r0x07, W
00CE EC00 F000 01042         CALL    __gptrput1
00D2 2A00      01043         INCF    r0x00, F
00D4 B0D8      01044         BTFSC   STATUS, 0
00D6 2A00      01045         INCF    r0x06, F
00D8 B0D8      01046         BTFSC   STATUS, 0
00DA 2A00      01047         INCF    r0x07, F
00DC D000      01048         BRA     _00251_DS_
00DE 01049 _00255_DS_:
               01050 ;       .line   285; timer.c    LCDUpdate();
00DE EC00 F000 01051         CALL    _LCDUpdate
00E2 CFE4 F000 01052         MOVFF   PREINC1, r0x09
00E6 CFE4 F000 01053         MOVFF   PREINC1, r0x08
00EA CFE4 F000 01054         MOVFF   PREINC1, r0x07
00EE CFE4 F000 01055         MOVFF   PREINC1, r0x06
00F2 CFE4 F000 01056         MOVFF   PREINC1, r0x05
00F6 CFE4 F000 01057         MOVFF   PREINC1, r0x04
00FA CFE4 F000 01058         MOVFF   PREINC1, r0x03
00FE CFE4 F000 01059         MOVFF   PREINC1, r0x02
0102 CFE4 F000 01060         MOVFF   PREINC1, r0x01
0106 CFE4 F000 01061         MOVFF   PREINC1, r0x00
010A CFE4 FFD9 01062         MOVFF   PREINC1, FSR2L
010E 0012      01063         RETURN  
               01064 
               01065 ; ; Starting pCode block
               01066 S_timer__DisplayWORD    code
0000 01067 _DisplayWORD:
               01068 ;       .line   236; timer.c    void DisplayWORD(BYTE pos, WORD w) //WORD is a 16 bits unsigned
0000 CFD9 FFE5 01069         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01070         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01071         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01072         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01073         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01074         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01075         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01076         MOVFF   r0x05, POSTDEC1
0020 0E02      01077         MOVLW   0x02
0022 CFDB F000 01078         MOVFF   PLUSW2, r0x00
0026 0E03      01079         MOVLW   0x03
0028 CFDB F000 01080         MOVFF   PLUSW2, r0x01
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
002C 0E04      01081         MOVLW   0x04
002E CFDB F000 01082         MOVFF   PLUSW2, r0x02
               01083 ;       .line   244; timer.c    ultoa(w, WDigit, radix);      
0032 6A00      01084         CLRF    r0x03
0034 6A00      01085         CLRF    r0x04
0036 0E0A      01086         MOVLW   0x0a
0038 6EE5      01087         MOVWF   POSTDEC1
003A 0E00      01088         MOVLW   HIGH(_DisplayWORD_WDigit_1_1)
003C 6EE5      01089         MOVWF   POSTDEC1
003E 0E00      01090         MOVLW   LOW(_DisplayWORD_WDigit_1_1)
0040 6EE5      01091         MOVWF   POSTDEC1
0042 5000      01092         MOVF    r0x04, W
0044 6EE5      01093         MOVWF   POSTDEC1
0046 5000      01094         MOVF    r0x03, W
0048 6EE5      01095         MOVWF   POSTDEC1
004A 5000      01096         MOVF    r0x02, W
004C 6EE5      01097         MOVWF   POSTDEC1
004E 5000      01098         MOVF    r0x01, W
0050 6EE5      01099         MOVWF   POSTDEC1
0052 EC00 F000 01100         CALL    _ultoa
0056 0E07      01101         MOVLW   0x07
0058 26E1      01102         ADDWF   FSR1L, F
               01103 ;       .line   245; timer.c    for(j = 0; j < strlen((char*)WDigit); j++)
005A 6A00      01104         CLRF    r0x01
005C 01105 _00235_DS_:
005C 0E00      01106         MOVLW   HIGH(_DisplayWORD_WDigit_1_1)
005E 6E00      01107         MOVWF   r0x03
0060 0E00      01108         MOVLW   LOW(_DisplayWORD_WDigit_1_1)
0062 6E00      01109         MOVWF   r0x02
0064 0E80      01110         MOVLW   0x80
0066 6E00      01111         MOVWF   r0x04
0068 5000      01112         MOVF    r0x04, W
006A 6EE5      01113         MOVWF   POSTDEC1
006C 5000      01114         MOVF    r0x03, W
006E 6EE5      01115         MOVWF   POSTDEC1
0070 5000      01116         MOVF    r0x02, W
0072 6EE5      01117         MOVWF   POSTDEC1
0074 EC00 F000 01118         CALL    _strlen
0078 6E00      01119         MOVWF   r0x02
007A CFF3 F000 01120         MOVFF   PRODL, r0x03
007E 0E03      01121         MOVLW   0x03
0080 26E1      01122         ADDWF   FSR1L, F
0082 C000 F000 01123         MOVFF   r0x01, r0x04
0086 6A00      01124         CLRF    r0x05
0088 5000      01125         MOVF    r0x05, W
008A 0F80      01126         ADDLW   0x80
008C 6EF3      01127         MOVWF   PRODL
008E 5000      01128         MOVF    r0x03, W
0090 0F80      01129         ADDLW   0x80
0092 5CF3      01130         SUBWF   PRODL, W
0094 E100      01131         BNZ     _00245_DS_
0096 5000      01132         MOVF    r0x02, W
0098 5C00      01133         SUBWF   r0x04, W
009A 01134 _00245_DS_:
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
009A E200      01135         BC      _00238_DS_
               01136 ;       .line   247; timer.c    LCDText[LCDPos++] = WDigit[j];
009C C000 F000 01137         MOVFF   r0x00, r0x02
00A0 2A00      01138         INCF    r0x00, F
00A2 6A00      01139         CLRF    r0x03
00A4 0E00      01140         MOVLW   LOW(_LCDText)
00A6 2600      01141         ADDWF   r0x02, F
00A8 0E00      01142         MOVLW   HIGH(_LCDText)
00AA 2200      01143         ADDWFC  r0x03, F
00AC 0E00      01144         MOVLW   LOW(_DisplayWORD_WDigit_1_1)
00AE 2400      01145         ADDWF   r0x01, W
00B0 6E00      01146         MOVWF   r0x04
00B2 6A00      01147         CLRF    r0x05
00B4 0E00      01148         MOVLW   HIGH(_DisplayWORD_WDigit_1_1)
00B6 2200      01149         ADDWFC  r0x05, F
00B8 C000 FFE9 01150         MOVFF   r0x04, FSR0L
00BC C000 FFEA 01151         MOVFF   r0x05, FSR0H
00C0 CFEF F000 01152         MOVFF   INDF0, r0x04
00C4 C000 FFE9 01153         MOVFF   r0x02, FSR0L
00C8 C000 FFEA 01154         MOVFF   r0x03, FSR0H
00CC C000 FFEF 01155         MOVFF   r0x04, INDF0
               01156 ;       .line   245; timer.c    for(j = 0; j < strlen((char*)WDigit); j++)
00D0 2A00      01157         INCF    r0x01, F
00D2 D000      01158         BRA     _00235_DS_
00D4 01159 _00238_DS_:
               01160 ;       .line   249; timer.c    if(LCDPos < 32u)
00D4 C000 F000 01161         MOVFF   r0x00, r0x01
00D8 6A00      01162         CLRF    r0x02
00DA 0E00      01163         MOVLW   0x00
00DC 5C00      01164         SUBWF   r0x02, W
00DE E100      01165         BNZ     _00246_DS_
00E0 0E20      01166         MOVLW   0x20
00E2 5C00      01167         SUBWF   r0x01, W
00E4 01168 _00246_DS_:
00E4 E200      01169         BC      _00234_DS_
               01170 ;       .line   250; timer.c    LCDText[LCDPos] = 0;
00E6 6A00      01171         CLRF    r0x01
00E8 0E00      01172         MOVLW   LOW(_LCDText)
00EA 2600      01173         ADDWF   r0x00, F
00EC 0E00      01174         MOVLW   HIGH(_LCDText)
00EE 2200      01175         ADDWFC  r0x01, F
00F0 C000 FFE9 01176         MOVFF   r0x00, FSR0L
00F4 C000 FFEA 01177         MOVFF   r0x01, FSR0H
00F8 0E00      01178         MOVLW   0x00
00FA 6EEF      01179         MOVWF   INDF0
00FC 01180 _00234_DS_:
               01181 ;       .line   251; timer.c    LCDUpdate();
00FC EC00 F000 01182         CALL    _LCDUpdate
0100 CFE4 F000 01183         MOVFF   PREINC1, r0x05
0104 CFE4 F000 01184         MOVFF   PREINC1, r0x04
0108 CFE4 F000 01185         MOVFF   PREINC1, r0x03
010C CFE4 F000 01186         MOVFF   PREINC1, r0x02
0110 CFE4 F000 01187         MOVFF   PREINC1, r0x01
0114 CFE4 F000 01188         MOVFF   PREINC1, r0x00
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0118 CFE4 FFD9 01189         MOVFF   PREINC1, FSR2L
011C 0012      01190         RETURN  
               01191 
               01192 ; ; Starting pCode block
               01193 S_timer__delay_ms       code
0000 01194 _delay_ms:
               01195 ;       .line   182; timer.c    void delay_ms(unsigned int ms) {
0000 CFD9 FFE5 01196         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01197         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01198         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01199         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01200         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01201         MOVFF   r0x03, POSTDEC1
0018 0E02      01202         MOVLW   0x02
001A CFDB F000 01203         MOVFF   PLUSW2, r0x00
001E 0E03      01204         MOVLW   0x03
0020 CFDB F000 01205         MOVFF   PLUSW2, r0x01
0024 01206 _00202_DS_:
               01207 ;       .line   183; timer.c    while (ms--) {
0024 C000 F000 01208         MOVFF   r0x00, r0x02
0028 C000 F000 01209         MOVFF   r0x01, r0x03
002C 0EFF      01210         MOVLW   0xff
002E 2600      01211         ADDWF   r0x00, F
0030 A0D8      01212         BTFSS   STATUS, 0
0032 0600      01213         DECF    r0x01, F
0034 5000      01214         MOVF    r0x02, W
0036 1000      01215         IORWF   r0x03, W
0038 E000      01216         BZ      _00205_DS_
               01217 ;       .line   184; timer.c    delay_1ms();
003A EC00 F000 01218         CALL    _delay_1ms
003E D000      01219         BRA     _00202_DS_
0040 01220 _00205_DS_:
0040 CFE4 F000 01221         MOVFF   PREINC1, r0x03
0044 CFE4 F000 01222         MOVFF   PREINC1, r0x02
0048 CFE4 F000 01223         MOVFF   PREINC1, r0x01
004C CFE4 F000 01224         MOVFF   PREINC1, r0x00
0050 CFE4 FFD9 01225         MOVFF   PREINC1, FSR2L
0054 0012      01226         RETURN  
               01227 
               01228 ; ; Starting pCode block
               01229 S_timer__delay_1ms      code
0000 01230 _delay_1ms:
               01231 ;       .line   168; timer.c    void delay_1ms(void) {
0000 CFD9 FFE5 01232         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01233         MOVFF   FSR1L, FSR2L
               01234 ;       .line   169; timer.c    TMR0H=(0x10000-EXEC_FREQ/1000)>>8;
0008 0ED8      01235         MOVLW   0xd8
000A 6E00      01236         MOVWF   _TMR0H
               01237 ;       .line   170; timer.c    TMR0L=(0x10000-EXEC_FREQ/1000)&0xff;
000C 0EF0      01238         MOVLW   0xf0
000E 6E00      01239         MOVWF   _TMR0L
               01240 ;       .line   171; timer.c    T0CONbits.TMR0ON=0; // disable timer0
0010 9E00      01241         BCF     _T0CONbits, 7
               01242 ;       .line   172; timer.c    T0CONbits.T08BIT=0; // use timer0 16-bit counter
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0012 9C00      01243         BCF     _T0CONbits, 6
               01244 ;       .line   173; timer.c    T0CONbits.T0CS=0; // use timer0 instruction cycle clock
0014 9A00      01245         BCF     _T0CONbits, 5
               01246 ;       .line   174; timer.c    T0CONbits.PSA=1; // disable timer0 prescaler
0016 8600      01247         BSF     _T0CONbits, 3
               01248 ;       .line   175; timer.c    INTCONbits.T0IF=0; // clear timer0 overflow bit
0018 9400      01249         BCF     _INTCONbits, 2
               01250 ;       .line   176; timer.c    T0CONbits.TMR0ON=1; // enable timer0
001A 8E00      01251         BSF     _T0CONbits, 7
001C 01252 _00194_DS_:
               01253 ;       .line   177; timer.c    while (!INTCONbits.T0IF) {} // wait for timer0 overflow
001C A400      01254         BTFSS   _INTCONbits, 2
001E D000      01255         BRA     _00194_DS_
               01256 ;       .line   178; timer.c    INTCONbits.T0IF=0; // clear timer0 overflow bit
0020 9400      01257         BCF     _INTCONbits, 2
               01258 ;       .line   179; timer.c    T0CONbits.TMR0ON=0; // disable timer0
0022 9E00      01259         BCF     _T0CONbits, 7
0024 CFE4 FFD9 01260         MOVFF   PREINC1, FSR2L
0028 0012      01261         RETURN  
               01262 
               01263 ; ; Starting pCode block
               01264 S_timer__high_isr       code
0000 01265 _high_isr:
               01266 ;       .line   153; timer.c    void high_isr(void) __interrupt (1) {
0000 CFE8 FFE5 01267         MOVFF   WREG, POSTDEC1
0004 CFD8 FFE5 01268         MOVFF   STATUS, POSTDEC1
0008 CFE0 FFE5 01269         MOVFF   BSR, POSTDEC1
000C CFF3 FFE5 01270         MOVFF   PRODL, POSTDEC1
0010 CFF4 FFE5 01271         MOVFF   PRODH, POSTDEC1
0014 CFE9 FFE5 01272         MOVFF   FSR0L, POSTDEC1
0018 CFEA FFE5 01273         MOVFF   FSR0H, POSTDEC1
001C CFFA FFE5 01274         MOVFF   PCLATH, POSTDEC1
0020 CFFB FFE5 01275         MOVFF   PCLATU, POSTDEC1
0024 CFD9 FFE5 01276         MOVFF   FSR2L, POSTDEC1
0028 CFE1 FFD9 01277         MOVFF   FSR1L, FSR2L
002C C000 FFE5 01278         MOVFF   r0x00, POSTDEC1
               01279 ;       .line   154; timer.c    if(INTCON3bits.INT1F == 1) { // Button 2
0030 6A00      01280         CLRF    r0x00
0032 B000      01281         BTFSC   _INTCON3bits, 0
0034 2A00      01282         INCF    r0x00, F
0036 5000      01283         MOVF    r0x00, W
0038 0A01      01284         XORLW   0x01
003A E100      01285         BNZ     _00179_DS_
               01286 ;       .line   155; timer.c    handle_button2_pressure();
003C EC00 F000 01287         CALL    _handle_button2_pressure
               01288 ;       .line   156; timer.c    INTCON3bits.INT1F = 0;
0040 9000      01289         BCF     _INTCON3bits, 0
0042 01290 _00179_DS_:
               01291 ;       .line   158; timer.c    if (INTCON3bits.INT3F == 1) { // Button 1
0042 6A00      01292         CLRF    r0x00
0044 B400      01293         BTFSC   _INTCON3bits, 2
0046 2A00      01294         INCF    r0x00, F
0048 5000      01295         MOVF    r0x00, W
004A 0A01      01296         XORLW   0x01
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
004C E100      01297         BNZ     _00182_DS_
               01298 ;       .line   159; timer.c    handle_button1_pressure();
004E EC00 F000 01299         CALL    _handle_button1_pressure
               01300 ;       .line   160; timer.c    INTCON3bits.INT3F = 0;
0052 9400      01301         BCF     _INTCON3bits, 2
0054 01302 _00182_DS_:
0054 CFE4 F000 01303         MOVFF   PREINC1, r0x00
0058 CFE4 FFD9 01304         MOVFF   PREINC1, FSR2L
005C CFE4 FFFB 01305         MOVFF   PREINC1, PCLATU
0060 CFE4 FFFA 01306         MOVFF   PREINC1, PCLATH
0064 CFE4 FFEA 01307         MOVFF   PREINC1, FSR0H
0068 CFE4 FFE9 01308         MOVFF   PREINC1, FSR0L
006C CFE4 FFF4 01309         MOVFF   PREINC1, PRODH
0070 CFE4 FFF3 01310         MOVFF   PREINC1, PRODL
0074 CFE4 FFE0 01311         MOVFF   PREINC1, BSR
0078 CFE4 FFD8 01312         MOVFF   PREINC1, STATUS
007C CFE4 FFE8 01313         MOVFF   PREINC1, WREG
0080 0010      01314         RETFIE  
               01315 
               01316 ; ; Starting pCode block
               01317 S_timer__update_clock   code
0000 01318 _update_clock:
               01319 ;       .line   140; timer.c    void update_clock() {
0000 CFD9 FFE5 01320         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01321         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01322         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01323         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01324         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01325         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01326         MOVFF   r0x04, POSTDEC1
               01327 ;       .line   141; timer.c    clock.seconds = (clock.seconds == MAX_SECONDS) ? 0 : clock.seconds + 1;
001C C000 F000 01328         MOVFF   (_clock + 4), r0x00
0020 C000 F000 01329         MOVFF   (_clock + 5), r0x01
0024 5000      01330         MOVF    r0x00, W
0026 0A3B      01331         XORLW   0x3b
0028 E100      01332         BNZ     _00172_DS_
002A 5000      01333         MOVF    r0x01, W
002C E000      01334         BZ      _00173_DS_
002E 01335 _00172_DS_:
002E D000      01336         BRA     _00167_DS_
0030 01337 _00173_DS_:
0030 6A00      01338         CLRF    r0x02
0032 6A00      01339         CLRF    r0x03
0034 D000      01340         BRA     _00168_DS_
0036 01341 _00167_DS_:
0036 5000      01342         MOVF    r0x00, W
0038 0F01      01343         ADDLW   0x01
003A 6E00      01344         MOVWF   r0x02
003C 0E00      01345         MOVLW   0x00
003E 2000      01346         ADDWFC  r0x01, W
0040 6E00      01347         MOVWF   r0x03
0042 01348 _00168_DS_:
0042 5000      01349         MOVF    r0x02, W
0044 0000      01350         BANKSEL (_clock + 4)
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0046 6F00      01351         MOVWF   (_clock + 4), B
0048 5000      01352         MOVF    r0x03, W
004A 0000      01353         BANKSEL (_clock + 5)
004C 6F00      01354         MOVWF   (_clock + 5), B
               01355 ;       .line   142; timer.c    sprintf(&time_value[6], "%02d", clock.seconds);
004E 0E00      01356         MOVLW   HIGH(_time_value + 6)
0050 6E00      01357         MOVWF   r0x01
0052 0E00      01358         MOVLW   LOW(_time_value + 6)
0054 6E00      01359         MOVWF   r0x00
0056 0E80      01360         MOVLW   0x80
0058 6E00      01361         MOVWF   r0x04
005A 5000      01362         MOVF    r0x03, W
005C 6EE5      01363         MOVWF   POSTDEC1
005E 5000      01364         MOVF    r0x02, W
0060 6EE5      01365         MOVWF   POSTDEC1
0062 0E00      01366         MOVLW   UPPER(__str_0)
0064 6EE5      01367         MOVWF   POSTDEC1
0066 0E00      01368         MOVLW   HIGH(__str_0)
0068 6EE5      01369         MOVWF   POSTDEC1
006A 0E00      01370         MOVLW   LOW(__str_0)
006C 6EE5      01371         MOVWF   POSTDEC1
006E 5000      01372         MOVF    r0x04, W
0070 6EE5      01373         MOVWF   POSTDEC1
0072 5000      01374         MOVF    r0x01, W
0074 6EE5      01375         MOVWF   POSTDEC1
0076 5000      01376         MOVF    r0x00, W
0078 6EE5      01377         MOVWF   POSTDEC1
007A EC00 F000 01378         CALL    _sprintf
007E 0E08      01379         MOVLW   0x08
0080 26E1      01380         ADDWF   FSR1L, F
0082 0000      01381         BANKSEL (_clock + 4)
               01382 ;       .line   143; timer.c    if (clock.seconds == 0) { // new minute
0084 5100      01383         MOVF    (_clock + 4), W, B
0086 0000      01384         BANKSEL (_clock + 5)
0088 1100      01385         IORWF   (_clock + 5), W, B
008A E100      01386         BNZ     _00162_DS_
               01387 ;       .line   144; timer.c    update_time_value(&clock.minutes, MAX_MINUTES, 3);
008C 0E00      01388         MOVLW   HIGH(_clock + 2)
008E 6E00      01389         MOVWF   r0x01
0090 0E00      01390         MOVLW   LOW(_clock + 2)
0092 6E00      01391         MOVWF   r0x00
0094 0E80      01392         MOVLW   0x80
0096 6E00      01393         MOVWF   r0x02
0098 0E00      01394         MOVLW   0x00
009A 6EE5      01395         MOVWF   POSTDEC1
009C 0E03      01396         MOVLW   0x03
009E 6EE5      01397         MOVWF   POSTDEC1
00A0 0E00      01398         MOVLW   0x00
00A2 6EE5      01399         MOVWF   POSTDEC1
00A4 0E3B      01400         MOVLW   0x3b
00A6 6EE5      01401         MOVWF   POSTDEC1
00A8 5000      01402         MOVF    r0x02, W
00AA 6EE5      01403         MOVWF   POSTDEC1
00AC 5000      01404         MOVF    r0x01, W
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00AE 6EE5      01405         MOVWF   POSTDEC1
00B0 5000      01406         MOVF    r0x00, W
00B2 6EE5      01407         MOVWF   POSTDEC1
00B4 EC00 F000 01408         CALL    _update_time_value
00B8 0E07      01409         MOVLW   0x07
00BA 26E1      01410         ADDWF   FSR1L, F
               01411 ;       .line   145; timer.c    time_value[5] = ':';
00BC 0E3A      01412         MOVLW   0x3a
00BE 0000      01413         BANKSEL (_time_value + 5)
00C0 6F00      01414         MOVWF   (_time_value + 5), B
00C2 01415 _00162_DS_:
00C2 0000      01416         BANKSEL (_clock + 2)
               01417 ;       .line   147; timer.c    if (clock.minutes == 0) { // new hour
00C4 5100      01418         MOVF    (_clock + 2), W, B
00C6 0000      01419         BANKSEL (_clock + 3)
00C8 1100      01420         IORWF   (_clock + 3), W, B
00CA E100      01421         BNZ     _00165_DS_
               01422 ;       .line   148; timer.c    update_time_value(&clock.hours, MAX_HOURS, 0);
00CC 0E00      01423         MOVLW   HIGH(_clock)
00CE 6E00      01424         MOVWF   r0x01
00D0 0E00      01425         MOVLW   LOW(_clock)
00D2 6E00      01426         MOVWF   r0x00
00D4 0E80      01427         MOVLW   0x80
00D6 6E00      01428         MOVWF   r0x02
00D8 0E00      01429         MOVLW   0x00
00DA 6EE5      01430         MOVWF   POSTDEC1
00DC 0E00      01431         MOVLW   0x00
00DE 6EE5      01432         MOVWF   POSTDEC1
00E0 0E00      01433         MOVLW   0x00
00E2 6EE5      01434         MOVWF   POSTDEC1
00E4 0E17      01435         MOVLW   0x17
00E6 6EE5      01436         MOVWF   POSTDEC1
00E8 5000      01437         MOVF    r0x02, W
00EA 6EE5      01438         MOVWF   POSTDEC1
00EC 5000      01439         MOVF    r0x01, W
00EE 6EE5      01440         MOVWF   POSTDEC1
00F0 5000      01441         MOVF    r0x00, W
00F2 6EE5      01442         MOVWF   POSTDEC1
00F4 EC00 F000 01443         CALL    _update_time_value
00F8 0E07      01444         MOVLW   0x07
00FA 26E1      01445         ADDWF   FSR1L, F
               01446 ;       .line   149; timer.c    time_value[3] = ':';
00FC 0E3A      01447         MOVLW   0x3a
00FE 0000      01448         BANKSEL (_time_value + 3)
0100 6F00      01449         MOVWF   (_time_value + 3), B
0102 01450 _00165_DS_:
0102 CFE4 F000 01451         MOVFF   PREINC1, r0x04
0106 CFE4 F000 01452         MOVFF   PREINC1, r0x03
010A CFE4 F000 01453         MOVFF   PREINC1, r0x02
010E CFE4 F000 01454         MOVFF   PREINC1, r0x01
0112 CFE4 F000 01455         MOVFF   PREINC1, r0x00
0116 CFE4 FFD9 01456         MOVFF   PREINC1, FSR2L
011A 0012      01457         RETURN  
               01458 
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01459 ; ; Starting pCode block
               01460 S_timer__assign_default_values  code
0000 01461 _assign_default_values:
               01462 ;       .line   119; timer.c    void assign_default_values() {
0000 CFD9 FFE5 01463         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01464         MOVFF   FSR1L, FSR2L
               01465 ;       .line   121; timer.c    time_value[0] = time_value[1] = time_value[3] = time_value[4] = '0';
0008 0E30      01466         MOVLW   0x30
000A 0000      01467         BANKSEL (_time_value + 4)
000C 6F00      01468         MOVWF   (_time_value + 4), B
000E 0E30      01469         MOVLW   0x30
0010 0000      01470         BANKSEL (_time_value + 3)
0012 6F00      01471         MOVWF   (_time_value + 3), B
0014 0E30      01472         MOVLW   0x30
0016 0000      01473         BANKSEL (_time_value + 1)
0018 6F00      01474         MOVWF   (_time_value + 1), B
001A 0E30      01475         MOVLW   0x30
001C 0000      01476         BANKSEL _time_value
001E 6F00      01477         MOVWF   _time_value, B
               01478 ;       .line   122; timer.c    time_value[2] = ':';
0020 0E3A      01479         MOVLW   0x3a
0022 0000      01480         BANKSEL (_time_value + 2)
0024 6F00      01481         MOVWF   (_time_value + 2), B
0026 0000      01482         BANKSEL (_time_value + 5)
               01483 ;       .line   123; timer.c    time_value[5] = '\0';
0028 6B00      01484         CLRF    (_time_value + 5), B
002A 0000      01485         BANKSEL _in_setting
               01486 ;       .line   124; timer.c    in_setting = HOURS; // start from setting the hours
002C 6B00      01487         CLRF    _in_setting, B
               01488 ;       .line   126; timer.c    flags.time_setting_procedure = 1;
002E 0E01      01489         MOVLW   0x01
0030 0000      01490         BANKSEL _flags
0032 6F00      01491         MOVWF   _flags, B
0034 0000      01492         BANKSEL (_flags + 1)
0036 6B00      01493         CLRF    (_flags + 1), B
0038 0000      01494         BANKSEL (_flags + 2)
               01495 ;       .line   127; timer.c    flags.awake_setting_procedure = 0;
003A 6B00      01496         CLRF    (_flags + 2), B
003C 0000      01497         BANKSEL (_flags + 3)
003E 6B00      01498         CLRF    (_flags + 3), B
0040 0000      01499         BANKSEL (_flags + 4)
               01500 ;       .line   128; timer.c    flags.set = 0;
0042 6B00      01501         CLRF    (_flags + 4), B
0044 0000      01502         BANKSEL (_flags + 5)
0046 6B00      01503         CLRF    (_flags + 5), B
0048 0000      01504         BANKSEL (_flags + 6)
               01505 ;       .line   129; timer.c    flags.lcd_updated = 0;
004A 6B00      01506         CLRF    (_flags + 6), B
004C 0000      01507         BANKSEL (_flags + 7)
004E 6B00      01508         CLRF    (_flags + 7), B
0050 0000      01509         BANKSEL _timer
               01510 ;       .line   131; timer.c    timer.hours = 0;
0052 6B00      01511         CLRF    _timer, B
0054 0000      01512         BANKSEL (_timer + 1)
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0056 6B00      01513         CLRF    (_timer + 1), B
0058 0000      01514         BANKSEL (_timer + 2)
               01515 ;       .line   132; timer.c    timer.minutes = 0;
005A 6B00      01516         CLRF    (_timer + 2), B
005C 0000      01517         BANKSEL (_timer + 3)
005E 6B00      01518         CLRF    (_timer + 3), B
0060 0000      01519         BANKSEL _setting
               01520 ;       .line   134; timer.c    setting.hours = 0;
0062 6B00      01521         CLRF    _setting, B
0064 0000      01522         BANKSEL (_setting + 1)
0066 6B00      01523         CLRF    (_setting + 1), B
0068 0000      01524         BANKSEL (_setting + 2)
               01525 ;       .line   135; timer.c    setting.minutes = 0;
006A 6B00      01526         CLRF    (_setting + 2), B
006C 0000      01527         BANKSEL (_setting + 3)
006E 6B00      01528         CLRF    (_setting + 3), B
0070 CFE4 FFD9 01529         MOVFF   PREINC1, FSR2L
0074 0012      01530         RETURN  
               01531 
               01532 ; ; Starting pCode block
               01533 S_timer__handle_button2_pressure        code
0000 01534 _handle_button2_pressure:
               01535 ;       .line   111; timer.c    void handle_button2_pressure() {
0000 CFD9 FFE5 01536         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01537         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01538         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01539         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01540         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01541         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01542         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01543         MOVFF   r0x05, POSTDEC1
0020 0000      01544         BANKSEL _flags
               01545 ;       .line   112; timer.c    if (flags.time_setting_procedure) {
0022 5100      01546         MOVF    _flags, W, B
0024 0000      01547         BANKSEL (_flags + 1)
0026 1100      01548         IORWF   (_flags + 1), W, B
0028 E000      01549         BZ      _00149_DS_
               01550 ;       .line   113; timer.c    update_proper_time_value(&setting.hours, &setting.minutes);
002A 0E00      01551         MOVLW   HIGH(_setting)
002C 6E00      01552         MOVWF   r0x01
002E 0E00      01553         MOVLW   LOW(_setting)
0030 6E00      01554         MOVWF   r0x00
0032 0E80      01555         MOVLW   0x80
0034 6E00      01556         MOVWF   r0x02
0036 0E00      01557         MOVLW   HIGH(_setting + 2)
0038 6E00      01558         MOVWF   r0x04
003A 0E00      01559         MOVLW   LOW(_setting + 2)
003C 6E00      01560         MOVWF   r0x03
003E 0E80      01561         MOVLW   0x80
0040 6E00      01562         MOVWF   r0x05
0042 5000      01563         MOVF    r0x05, W
0044 6EE5      01564         MOVWF   POSTDEC1
0046 5000      01565         MOVF    r0x04, W
0048 6EE5      01566         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
004A 5000      01567         MOVF    r0x03, W
004C 6EE5      01568         MOVWF   POSTDEC1
004E 5000      01569         MOVF    r0x02, W
0050 6EE5      01570         MOVWF   POSTDEC1
0052 5000      01571         MOVF    r0x01, W
0054 6EE5      01572         MOVWF   POSTDEC1
0056 5000      01573         MOVF    r0x00, W
0058 6EE5      01574         MOVWF   POSTDEC1
005A EC00 F000 01575         CALL    _update_proper_time_value
005E 0E06      01576         MOVLW   0x06
0060 26E1      01577         ADDWF   FSR1L, F
0062 D000      01578         BRA     _00151_DS_
0064 01579 _00149_DS_:
0064 0000      01580         BANKSEL (_flags + 2)
               01581 ;       .line   114; timer.c    } else if (flags.awake_setting_procedure) {
0066 5100      01582         MOVF    (_flags + 2), W, B
0068 0000      01583         BANKSEL (_flags + 3)
006A 1100      01584         IORWF   (_flags + 3), W, B
006C E000      01585         BZ      _00151_DS_
               01586 ;       .line   115; timer.c    update_proper_time_value(&timer.hours, &timer.minutes);
006E 0E00      01587         MOVLW   HIGH(_timer)
0070 6E00      01588         MOVWF   r0x01
0072 0E00      01589         MOVLW   LOW(_timer)
0074 6E00      01590         MOVWF   r0x00
0076 0E80      01591         MOVLW   0x80
0078 6E00      01592         MOVWF   r0x02
007A 0E00      01593         MOVLW   HIGH(_timer + 2)
007C 6E00      01594         MOVWF   r0x04
007E 0E00      01595         MOVLW   LOW(_timer + 2)
0080 6E00      01596         MOVWF   r0x03
0082 0E80      01597         MOVLW   0x80
0084 6E00      01598         MOVWF   r0x05
0086 5000      01599         MOVF    r0x05, W
0088 6EE5      01600         MOVWF   POSTDEC1
008A 5000      01601         MOVF    r0x04, W
008C 6EE5      01602         MOVWF   POSTDEC1
008E 5000      01603         MOVF    r0x03, W
0090 6EE5      01604         MOVWF   POSTDEC1
0092 5000      01605         MOVF    r0x02, W
0094 6EE5      01606         MOVWF   POSTDEC1
0096 5000      01607         MOVF    r0x01, W
0098 6EE5      01608         MOVWF   POSTDEC1
009A 5000      01609         MOVF    r0x00, W
009C 6EE5      01610         MOVWF   POSTDEC1
009E EC00 F000 01611         CALL    _update_proper_time_value
00A2 0E06      01612         MOVLW   0x06
00A4 26E1      01613         ADDWF   FSR1L, F
00A6 01614 _00151_DS_:
00A6 CFE4 F000 01615         MOVFF   PREINC1, r0x05
00AA CFE4 F000 01616         MOVFF   PREINC1, r0x04
00AE CFE4 F000 01617         MOVFF   PREINC1, r0x03
00B2 CFE4 F000 01618         MOVFF   PREINC1, r0x02
00B6 CFE4 F000 01619         MOVFF   PREINC1, r0x01
00BA CFE4 F000 01620         MOVFF   PREINC1, r0x00
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00BE CFE4 FFD9 01621         MOVFF   PREINC1, FSR2L
00C2 0012      01622         RETURN  
               01623 
               01624 ; ; Starting pCode block
               01625 S_timer__update_proper_time_value       code
0000 01626 _update_proper_time_value:
               01627 ;       .line   103; timer.c    void update_proper_time_value(int* const hours, int* const minutes) {
0000 CFD9 FFE5 01628         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01629         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01630         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01631         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01632         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01633         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01634         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01635         MOVFF   r0x05, POSTDEC1
0020 0E02      01636         MOVLW   0x02
0022 CFDB F000 01637         MOVFF   PLUSW2, r0x00
0026 0E03      01638         MOVLW   0x03
0028 CFDB F000 01639         MOVFF   PLUSW2, r0x01
002C 0E04      01640         MOVLW   0x04
002E CFDB F000 01641         MOVFF   PLUSW2, r0x02
0032 0E05      01642         MOVLW   0x05
0034 CFDB F000 01643         MOVFF   PLUSW2, r0x03
0038 0E06      01644         MOVLW   0x06
003A CFDB F000 01645         MOVFF   PLUSW2, r0x04
003E 0E07      01646         MOVLW   0x07
0040 CFDB F000 01647         MOVFF   PLUSW2, r0x05
0044 0000      01648         BANKSEL _in_setting
               01649 ;       .line   104; timer.c    if (in_setting == HOURS) {
0046 5100      01650         MOVF    _in_setting, W, B
0048 E100      01651         BNZ     _00139_DS_
               01652 ;       .line   105; timer.c    update_time_value(hours, MAX_HOURS, 0);
004A 0E00      01653         MOVLW   0x00
004C 6EE5      01654         MOVWF   POSTDEC1
004E 0E00      01655         MOVLW   0x00
0050 6EE5      01656         MOVWF   POSTDEC1
0052 0E00      01657         MOVLW   0x00
0054 6EE5      01658         MOVWF   POSTDEC1
0056 0E17      01659         MOVLW   0x17
0058 6EE5      01660         MOVWF   POSTDEC1
005A 5000      01661         MOVF    r0x02, W
005C 6EE5      01662         MOVWF   POSTDEC1
005E 5000      01663         MOVF    r0x01, W
0060 6EE5      01664         MOVWF   POSTDEC1
0062 5000      01665         MOVF    r0x00, W
0064 6EE5      01666         MOVWF   POSTDEC1
0066 EC00 F000 01667         CALL    _update_time_value
006A 0E07      01668         MOVLW   0x07
006C 26E1      01669         ADDWF   FSR1L, F
006E D000      01670         BRA     _00141_DS_
0070 01671 _00139_DS_:
               01672 ;       .line   107; timer.c    update_time_value(minutes, MAX_MINUTES, 3);
0070 0E00      01673         MOVLW   0x00
0072 6EE5      01674         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0074 0E03      01675         MOVLW   0x03
0076 6EE5      01676         MOVWF   POSTDEC1
0078 0E00      01677         MOVLW   0x00
007A 6EE5      01678         MOVWF   POSTDEC1
007C 0E3B      01679         MOVLW   0x3b
007E 6EE5      01680         MOVWF   POSTDEC1
0080 5000      01681         MOVF    r0x05, W
0082 6EE5      01682         MOVWF   POSTDEC1
0084 5000      01683         MOVF    r0x04, W
0086 6EE5      01684         MOVWF   POSTDEC1
0088 5000      01685         MOVF    r0x03, W
008A 6EE5      01686         MOVWF   POSTDEC1
008C EC00 F000 01687         CALL    _update_time_value
0090 0E07      01688         MOVLW   0x07
0092 26E1      01689         ADDWF   FSR1L, F
0094 01690 _00141_DS_:
0094 CFE4 F000 01691         MOVFF   PREINC1, r0x05
0098 CFE4 F000 01692         MOVFF   PREINC1, r0x04
009C CFE4 F000 01693         MOVFF   PREINC1, r0x03
00A0 CFE4 F000 01694         MOVFF   PREINC1, r0x02
00A4 CFE4 F000 01695         MOVFF   PREINC1, r0x01
00A8 CFE4 F000 01696         MOVFF   PREINC1, r0x00
00AC CFE4 FFD9 01697         MOVFF   PREINC1, FSR2L
00B0 0012      01698         RETURN  
               01699 
               01700 ; ; Starting pCode block
               01701 S_timer__handle_button1_pressure        code
0000 01702 _handle_button1_pressure:
               01703 ;       .line   74; timer.c     void handle_button1_pressure() {
0000 CFD9 FFE5 01704         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01705         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01706         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01707         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01708         MOVFF   r0x02, POSTDEC1
0014 0000      01709         BANKSEL _flags
               01710 ;       .line   75; timer.c     if (flags.time_setting_procedure) {
0016 5100      01711         MOVF    _flags, W, B
0018 0000      01712         BANKSEL (_flags + 1)
001A 1100      01713         IORWF   (_flags + 1), W, B
001C B4D8      01714         BTFSC   STATUS, 2
001E D000      01715         BRA     _00131_DS_
0020 0000      01716         BANKSEL _in_setting
               01717 ;       .line   76; timer.c     if (in_setting == HOURS) {
0022 5100      01718         MOVF    _in_setting, W, B
0024 E100      01719         BNZ     _00123_DS_
               01720 ;       .line   77; timer.c     complete_hours_setting();
0026 EC00 F000 01721         CALL    _complete_hours_setting
002A D000      01722         BRA     _00133_DS_
002C 01723 _00123_DS_:
002C 0000      01724         BANKSEL _setting
               01725 ;       .line   80; timer.c     clock.hours = setting.hours;
002E 5100      01726         MOVF    _setting, W, B
0030 0000      01727         BANKSEL _clock
0032 6F00      01728         MOVWF   _clock, B
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0034 0000      01729         BANKSEL (_setting + 1)
0036 5100      01730         MOVF    (_setting + 1), W, B
0038 0000      01731         BANKSEL (_clock + 1)
003A 6F00      01732         MOVWF   (_clock + 1), B
003C 0000      01733         BANKSEL (_setting + 2)
               01734 ;       .line   81; timer.c     clock.minutes = setting.minutes;
003E 5100      01735         MOVF    (_setting + 2), W, B
0040 0000      01736         BANKSEL (_clock + 2)
0042 6F00      01737         MOVWF   (_clock + 2), B
0044 0000      01738         BANKSEL (_setting + 3)
0046 5100      01739         MOVF    (_setting + 3), W, B
0048 0000      01740         BANKSEL (_clock + 3)
004A 6F00      01741         MOVWF   (_clock + 3), B
004C 0000      01742         BANKSEL (_clock + 4)
               01743 ;       .line   82; timer.c     clock.seconds = 0;
004E 6B00      01744         CLRF    (_clock + 4), B
0050 0000      01745         BANKSEL (_clock + 5)
0052 6B00      01746         CLRF    (_clock + 5), B
0054 0000      01747         BANKSEL _flags
               01748 ;       .line   83; timer.c     flags.time_setting_procedure = 0; // end the time setting
0056 6B00      01749         CLRF    _flags, B
0058 0000      01750         BANKSEL (_flags + 1)
005A 6B00      01751         CLRF    (_flags + 1), B
               01752 ;       .line   84; timer.c     flags.awake_setting_procedure = 1; // start the awake time setting
005C 0E01      01753         MOVLW   0x01
005E 0000      01754         BANKSEL (_flags + 2)
0060 6F00      01755         MOVWF   (_flags + 2), B
0062 0000      01756         BANKSEL (_flags + 3)
0064 6B00      01757         CLRF    (_flags + 3), B
               01758 ;       .line   85; timer.c     time_value[0] = time_value[1] = time_value[3] = time_value[4] = '0';
0066 0E30      01759         MOVLW   0x30
0068 0000      01760         BANKSEL (_time_value + 4)
006A 6F00      01761         MOVWF   (_time_value + 4), B
006C 0E30      01762         MOVLW   0x30
006E 0000      01763         BANKSEL (_time_value + 3)
0070 6F00      01764         MOVWF   (_time_value + 3), B
0072 0E30      01765         MOVLW   0x30
0074 0000      01766         BANKSEL (_time_value + 1)
0076 6F00      01767         MOVWF   (_time_value + 1), B
0078 0E30      01768         MOVLW   0x30
007A 0000      01769         BANKSEL _time_value
007C 6F00      01770         MOVWF   _time_value, B
007E 0000      01771         BANKSEL _in_setting
               01772 ;       .line   86; timer.c     in_setting = HOURS;
0080 6B00      01773         CLRF    _in_setting, B
0082 D000      01774         BRA     _00133_DS_
0084 01775 _00131_DS_:
0084 0000      01776         BANKSEL (_flags + 2)
               01777 ;       .line   88; timer.c     } else if (flags.awake_setting_procedure) {
0086 5100      01778         MOVF    (_flags + 2), W, B
0088 0000      01779         BANKSEL (_flags + 3)
008A 1100      01780         IORWF   (_flags + 3), W, B
008C B4D8      01781         BTFSC   STATUS, 2
008E D000      01782         BRA     _00133_DS_
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0090 0000      01783         BANKSEL _in_setting
               01784 ;       .line   89; timer.c     if (in_setting == HOURS) {
0092 5100      01785         MOVF    _in_setting, W, B
0094 E100      01786         BNZ     _00126_DS_
               01787 ;       .line   90; timer.c     complete_hours_setting();
0096 EC00 F000 01788         CALL    _complete_hours_setting
009A D000      01789         BRA     _00133_DS_
009C 01790 _00126_DS_:
009C 0000      01791         BANKSEL (_flags + 2)
               01792 ;       .line   92; timer.c     flags.awake_setting_procedure = 0;
009E 6B00      01793         CLRF    (_flags + 2), B
00A0 0000      01794         BANKSEL (_flags + 3)
00A2 6B00      01795         CLRF    (_flags + 3), B
               01796 ;       .line   93; timer.c     flags.set = 1;
00A4 0E01      01797         MOVLW   0x01
00A6 0000      01798         BANKSEL (_flags + 4)
00A8 6F00      01799         MOVWF   (_flags + 4), B
00AA 0000      01800         BANKSEL (_flags + 5)
00AC 6B00      01801         CLRF    (_flags + 5), B
               01802 ;       .line   94; timer.c     sprintf(&time_value[0], "%02d", clock.hours);
00AE 0E00      01803         MOVLW   HIGH(_time_value)
00B0 6E00      01804         MOVWF   r0x01
00B2 0E00      01805         MOVLW   LOW(_time_value)
00B4 6E00      01806         MOVWF   r0x00
00B6 0E80      01807         MOVLW   0x80
00B8 6E00      01808         MOVWF   r0x02
00BA 0000      01809         BANKSEL (_clock + 1)
00BC 5100      01810         MOVF    (_clock + 1), W, B
00BE 6EE5      01811         MOVWF   POSTDEC1
00C0 0000      01812         BANKSEL _clock
00C2 5100      01813         MOVF    _clock, W, B
00C4 6EE5      01814         MOVWF   POSTDEC1
00C6 0E00      01815         MOVLW   UPPER(__str_0)
00C8 6EE5      01816         MOVWF   POSTDEC1
00CA 0E00      01817         MOVLW   HIGH(__str_0)
00CC 6EE5      01818         MOVWF   POSTDEC1
00CE 0E00      01819         MOVLW   LOW(__str_0)
00D0 6EE5      01820         MOVWF   POSTDEC1
00D2 5000      01821         MOVF    r0x02, W
00D4 6EE5      01822         MOVWF   POSTDEC1
00D6 5000      01823         MOVF    r0x01, W
00D8 6EE5      01824         MOVWF   POSTDEC1
00DA 5000      01825         MOVF    r0x00, W
00DC 6EE5      01826         MOVWF   POSTDEC1
00DE EC00 F000 01827         CALL    _sprintf
00E2 0E08      01828         MOVLW   0x08
00E4 26E1      01829         ADDWF   FSR1L, F
               01830 ;       .line   95; timer.c     time_value[2] = ':';
00E6 0E3A      01831         MOVLW   0x3a
00E8 0000      01832         BANKSEL (_time_value + 2)
00EA 6F00      01833         MOVWF   (_time_value + 2), B
               01834 ;       .line   96; timer.c     sprintf(&time_value[3], "%02d", clock.minutes);
00EC 0E00      01835         MOVLW   HIGH(_time_value + 3)
00EE 6E00      01836         MOVWF   r0x01
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00F0 0E00      01837         MOVLW   LOW(_time_value + 3)
00F2 6E00      01838         MOVWF   r0x00
00F4 0E80      01839         MOVLW   0x80
00F6 6E00      01840         MOVWF   r0x02
00F8 0000      01841         BANKSEL (_clock + 3)
00FA 5100      01842         MOVF    (_clock + 3), W, B
00FC 6EE5      01843         MOVWF   POSTDEC1
00FE 0000      01844         BANKSEL (_clock + 2)
0100 5100      01845         MOVF    (_clock + 2), W, B
0102 6EE5      01846         MOVWF   POSTDEC1
0104 0E00      01847         MOVLW   UPPER(__str_0)
0106 6EE5      01848         MOVWF   POSTDEC1
0108 0E00      01849         MOVLW   HIGH(__str_0)
010A 6EE5      01850         MOVWF   POSTDEC1
010C 0E00      01851         MOVLW   LOW(__str_0)
010E 6EE5      01852         MOVWF   POSTDEC1
0110 5000      01853         MOVF    r0x02, W
0112 6EE5      01854         MOVWF   POSTDEC1
0114 5000      01855         MOVF    r0x01, W
0116 6EE5      01856         MOVWF   POSTDEC1
0118 5000      01857         MOVF    r0x00, W
011A 6EE5      01858         MOVWF   POSTDEC1
011C EC00 F000 01859         CALL    _sprintf
0120 0E08      01860         MOVLW   0x08
0122 26E1      01861         ADDWF   FSR1L, F
               01862 ;       .line   97; timer.c     time_value[5] = ':';
0124 0E3A      01863         MOVLW   0x3a
0126 0000      01864         BANKSEL (_time_value + 5)
0128 6F00      01865         MOVWF   (_time_value + 5), B
               01866 ;       .line   98; timer.c     sprintf(&time_value[6], "%02d", clock.seconds);
012A 0E00      01867         MOVLW   HIGH(_time_value + 6)
012C 6E00      01868         MOVWF   r0x01
012E 0E00      01869         MOVLW   LOW(_time_value + 6)
0130 6E00      01870         MOVWF   r0x00
0132 0E80      01871         MOVLW   0x80
0134 6E00      01872         MOVWF   r0x02
0136 0000      01873         BANKSEL (_clock + 5)
0138 5100      01874         MOVF    (_clock + 5), W, B
013A 6EE5      01875         MOVWF   POSTDEC1
013C 0000      01876         BANKSEL (_clock + 4)
013E 5100      01877         MOVF    (_clock + 4), W, B
0140 6EE5      01878         MOVWF   POSTDEC1
0142 0E00      01879         MOVLW   UPPER(__str_0)
0144 6EE5      01880         MOVWF   POSTDEC1
0146 0E00      01881         MOVLW   HIGH(__str_0)
0148 6EE5      01882         MOVWF   POSTDEC1
014A 0E00      01883         MOVLW   LOW(__str_0)
014C 6EE5      01884         MOVWF   POSTDEC1
014E 5000      01885         MOVF    r0x02, W
0150 6EE5      01886         MOVWF   POSTDEC1
0152 5000      01887         MOVF    r0x01, W
0154 6EE5      01888         MOVWF   POSTDEC1
0156 5000      01889         MOVF    r0x00, W
0158 6EE5      01890         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
015A EC00 F000 01891         CALL    _sprintf
015E 0E08      01892         MOVLW   0x08
0160 26E1      01893         ADDWF   FSR1L, F
0162 01894 _00133_DS_:
0162 CFE4 F000 01895         MOVFF   PREINC1, r0x02
0166 CFE4 F000 01896         MOVFF   PREINC1, r0x01
016A CFE4 F000 01897         MOVFF   PREINC1, r0x00
016E CFE4 FFD9 01898         MOVFF   PREINC1, FSR2L
0172 0012      01899         RETURN  
               01900 
               01901 ; ; Starting pCode block
               01902 S_timer__complete_hours_setting code
0000 01903 _complete_hours_setting:
               01904 ;       .line   69; timer.c     void complete_hours_setting() {
0000 CFD9 FFE5 01905         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01906         MOVFF   FSR1L, FSR2L
               01907 ;       .line   70; timer.c     in_setting = MINUTES;
0008 0E01      01908         MOVLW   0x01
000A 0000      01909         BANKSEL _in_setting
000C 6F00      01910         MOVWF   _in_setting, B
               01911 ;       .line   71; timer.c     time_value[2] = ':';
000E 0E3A      01912         MOVLW   0x3a
0010 0000      01913         BANKSEL (_time_value + 2)
0012 6F00      01914         MOVWF   (_time_value + 2), B
0014 CFE4 FFD9 01915         MOVFF   PREINC1, FSR2L
0018 0012      01916         RETURN  
               01917 
               01918 ; ; Starting pCode block
               01919 S_timer__update_time_value      code
0000 01920 _update_time_value:
               01921 ;       .line   60; timer.c     void update_time_value(int* const value, int limit, int pos) {
0000 CFD9 FFE5 01922         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01923         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01924         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01925         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01926         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01927         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01928         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01929         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01930         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01931         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 01932         MOVFF   r0x08, POSTDEC1
002C 0E02      01933         MOVLW   0x02
002E CFDB F000 01934         MOVFF   PLUSW2, r0x00
0032 0E03      01935         MOVLW   0x03
0034 CFDB F000 01936         MOVFF   PLUSW2, r0x01
0038 0E04      01937         MOVLW   0x04
003A CFDB F000 01938         MOVFF   PLUSW2, r0x02
003E 0E05      01939         MOVLW   0x05
0040 CFDB F000 01940         MOVFF   PLUSW2, r0x03
0044 0E06      01941         MOVLW   0x06
0046 CFDB F000 01942         MOVFF   PLUSW2, r0x04
004A 0E07      01943         MOVLW   0x07
004C CFDB F000 01944         MOVFF   PLUSW2, r0x05
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0050 0E08      01945         MOVLW   0x08
0052 CFDB F000 01946         MOVFF   PLUSW2, r0x06
               01947 ;       .line   61; timer.c     if (*value == limit) {
0056 C000 FFE9 01948         MOVFF   r0x00, FSR0L
005A C000 FFF3 01949         MOVFF   r0x01, PRODL
005E 5000      01950         MOVF    r0x02, W
0060 EC00 F000 01951         CALL    __gptrget2
0064 6E00      01952         MOVWF   r0x07
0066 CFF3 F000 01953         MOVFF   PRODL, r0x08
006A 5000      01954         MOVF    r0x07, W
006C 1800      01955         XORWF   r0x03, W
006E E100      01956         BNZ     _00111_DS_
0070 5000      01957         MOVF    r0x08, W
0072 1800      01958         XORWF   r0x04, W
0074 E000      01959         BZ      _00112_DS_
0076 01960 _00111_DS_:
0076 D000      01961         BRA     _00106_DS_
0078 01962 _00112_DS_:
               01963 ;       .line   62; timer.c     *value = 0;
0078 0E00      01964         MOVLW   0x00
007A 6EE5      01965         MOVWF   POSTDEC1
007C 0E00      01966         MOVLW   0x00
007E 6EF4      01967         MOVWF   PRODH
0080 C000 FFE9 01968         MOVFF   r0x00, FSR0L
0084 C000 FFF3 01969         MOVFF   r0x01, PRODL
0088 5000      01970         MOVF    r0x02, W
008A EC00 F000 01971         CALL    __gptrput2
008E D000      01972         BRA     _00107_DS_
0090 01973 _00106_DS_:
               01974 ;       .line   64; timer.c     (*value)++;
0090 2A00      01975         INCF    r0x07, F
0092 B0D8      01976         BTFSC   STATUS, 0
0094 2A00      01977         INCF    r0x08, F
0096 C000 FFE5 01978         MOVFF   r0x07, POSTDEC1
009A C000 FFF4 01979         MOVFF   r0x08, PRODH
009E C000 FFE9 01980         MOVFF   r0x00, FSR0L
00A2 C000 FFF3 01981         MOVFF   r0x01, PRODL
00A6 5000      01982         MOVF    r0x02, W
00A8 EC00 F000 01983         CALL    __gptrput2
00AC 01984 _00107_DS_:
               01985 ;       .line   66; timer.c     sprintf(&time_value[pos], "%02d", *value);
00AC C000 FFE9 01986         MOVFF   r0x00, FSR0L
00B0 C000 FFF3 01987         MOVFF   r0x01, PRODL
00B4 5000      01988         MOVF    r0x02, W
00B6 EC00 F000 01989         CALL    __gptrget2
00BA 6E00      01990         MOVWF   r0x00
00BC CFF3 F000 01991         MOVFF   PRODL, r0x01
00C0 0E00      01992         MOVLW   LOW(_time_value)
00C2 2600      01993         ADDWF   r0x05, F
00C4 0E00      01994         MOVLW   HIGH(_time_value)
00C6 2200      01995         ADDWFC  r0x06, F
00C8 5000      01996         MOVF    r0x06, W
00CA 6E00      01997         MOVWF   r0x06
00CC 5000      01998         MOVF    r0x05, W
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00CE 6E00      01999         MOVWF   r0x05
00D0 0E80      02000         MOVLW   0x80
00D2 6E00      02001         MOVWF   r0x02
00D4 5000      02002         MOVF    r0x01, W
00D6 6EE5      02003         MOVWF   POSTDEC1
00D8 5000      02004         MOVF    r0x00, W
00DA 6EE5      02005         MOVWF   POSTDEC1
00DC 0E00      02006         MOVLW   UPPER(__str_0)
00DE 6EE5      02007         MOVWF   POSTDEC1
00E0 0E00      02008         MOVLW   HIGH(__str_0)
00E2 6EE5      02009         MOVWF   POSTDEC1
00E4 0E00      02010         MOVLW   LOW(__str_0)
00E6 6EE5      02011         MOVWF   POSTDEC1
00E8 5000      02012         MOVF    r0x02, W
00EA 6EE5      02013         MOVWF   POSTDEC1
00EC 5000      02014         MOVF    r0x06, W
00EE 6EE5      02015         MOVWF   POSTDEC1
00F0 5000      02016         MOVF    r0x05, W
00F2 6EE5      02017         MOVWF   POSTDEC1
00F4 EC00 F000 02018         CALL    _sprintf
00F8 0E08      02019         MOVLW   0x08
00FA 26E1      02020         ADDWF   FSR1L, F
00FC CFE4 F000 02021         MOVFF   PREINC1, r0x08
0100 CFE4 F000 02022         MOVFF   PREINC1, r0x07
0104 CFE4 F000 02023         MOVFF   PREINC1, r0x06
0108 CFE4 F000 02024         MOVFF   PREINC1, r0x05
010C CFE4 F000 02025         MOVFF   PREINC1, r0x04
0110 CFE4 F000 02026         MOVFF   PREINC1, r0x03
0114 CFE4 F000 02027         MOVFF   PREINC1, r0x02
0118 CFE4 F000 02028         MOVFF   PREINC1, r0x01
011C CFE4 F000 02029         MOVFF   PREINC1, r0x00
0120 CFE4 FFD9 02030         MOVFF   PREINC1, FSR2L
0124 0012      02031         RETURN  
               02032 
               02033 ; ; Starting pCode block
0126 02034 __str_0:
0126 3025 6432 02035         DB      0x25, 0x30, 0x32, 0x64, 0x00
     0000      
               02036 ; ; Starting pCode block
012C 02037 __str_1:
012C 6E45 6574 02038         DB      0x45, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x69
     2072 6874 
     2065 6974 
0138 656D 003A 02039         DB      0x6d, 0x65, 0x3a, 0x00
               02040 ; ; Starting pCode block
013C 02041 __str_2:
013C 3030 303A 02042         DB      0x30, 0x30, 0x3a, 0x30, 0x30, 0x00
     0030      
               02043 ; ; Starting pCode block
0142 02044 __str_3:
0142 6E45 6574 02045         DB      0x45, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x61
     2072 6874 
     2065 6177 
014E 656B 0020 02046         DB      0x6b, 0x65, 0x20, 0x00
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               02047 ; ; Starting pCode block
0152 02048 __str_4:
0152 6974 656D 02049         DB      0x74, 0x69, 0x6d, 0x65, 0x3a, 0x20, 0x00
     203A 0000 
               02050 ; ; Starting pCode block
015A 02051 __str_5:
015A 2020 2020 02052         DB      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20
     2020 2020 
     2020 2020 
0166 2020 0020 02053         DB      0x20, 0x20, 0x20, 0x00
               02054 ; ; Starting pCode block
016A 02055 __str_6:
016A 2020 2020 02056         DB      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00
     2020 2020 
     0020      
               02057 
               02058 
               02059 ; Statistics:
               02060 ; code size:     3224 (0x0c98) bytes ( 2.46%)
               02061 ;                1612 (0x064c) words
               02062 ; udata size:      38 (0x0026) bytes ( 0.99%)
               02063 ; access size:     22 (0x0016) bytes
               02064 
               02065 
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

BSR                               00000FE0
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
INDF0                             00000FEF
PCLATH                            00000FFA
PCLATU                            00000FFB
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00106_DS_                        00000090
_00107_DS_                        000000AC
_00111_DS_                        00000076
_00112_DS_                        00000078
_00123_DS_                        0000002C
_00126_DS_                        0000009C
_00131_DS_                        00000084
_00133_DS_                        00000162
_00139_DS_                        00000070
_00141_DS_                        00000094
_00149_DS_                        00000064
_00151_DS_                        000000A6
_00162_DS_                        000000C2
_00165_DS_                        00000102
_00167_DS_                        00000036
_00168_DS_                        00000042
_00172_DS_                        0000002E
_00173_DS_                        00000030
_00179_DS_                        00000042
_00182_DS_                        00000054
_00194_DS_                        0000001C
_00202_DS_                        00000024
_00205_DS_                        00000040
_00210_DS_                        00000012
_00217_DS_                        0000017E
_00221_DS_                        0000010A
_00226_DS_                        00000084
_00234_DS_                        000000FC
_00235_DS_                        0000005C
_00238_DS_                        000000D4
_00245_DS_                        0000009A
_00246_DS_                        000000E4
_00251_DS_                        00000090
_00255_DS_                        000000DE
_00259_DS_                        00000088
_00271_DS_                        000000CC
_00275_DS_                        00000134
_00278_DS_                        0000015E
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00282_DS_                        00000188
_00289_DS_                        00000152
_00290_DS_                        00000114
_ADCON0                           00000000
_ADCON0bits                       00000000
_ADCON1                           00000000
_ADCON1bits                       00000000
_ADCON2                           00000000
_ADCON2bits                       00000000
_ADRES                            00000000
_ADRESH                           00000000
_ADRESL                           00000000
_BAUDCON                          00000000
_BAUDCON1                         00000000
_BAUDCON1bits                     00000000
_BAUDCON2                         00000000
_BAUDCON2bits                     00000000
_BAUDCONbits                      00000000
_BAUDCTL                          00000000
_BAUDCTL1                         00000000
_BAUDCTL1bits                     00000000
_BAUDCTL2                         00000000
_BAUDCTL2bits                     00000000
_BAUDCTLbits                      00000000
_BSR                              00000000
_CCP1CON                          00000000
_CCP1CONbits                      00000000
_CCP2CON                          00000000
_CCP2CONbits                      00000000
_CCP3CON                          00000000
_CCP3CONbits                      00000000
_CCP4CON                          00000000
_CCP4CONbits                      00000000
_CCP5CON                          00000000
_CCP5CONbits                      00000000
_CCPR1                            00000000
_CCPR1H                           00000000
_CCPR1L                           00000000
_CCPR2                            00000000
_CCPR2H                           00000000
_CCPR2L                           00000000
_CCPR3                            00000000
_CCPR3H                           00000000
_CCPR3L                           00000000
_CCPR4                            00000000
_CCPR4H                           00000000
_CCPR4L                           00000000
_CCPR5                            00000000
_CCPR5H                           00000000
_CCPR5L                           00000000
_CMCON                            00000000
_CMCONbits                        00000000
_CVRCON                           00000000
_CVRCONbits                       00000000
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_DDRA                             00000000
_DDRAbits                         00000000
_DDRB                             00000000
_DDRBbits                         00000000
_DDRC                             00000000
_DDRCbits                         00000000
_DDRD                             00000000
_DDRDbits                         00000000
_DDRE                             00000000
_DDREbits                         00000000
_DDRF                             00000000
_DDRFbits                         00000000
_DDRG                             00000000
_DDRGbits                         00000000
_DDRH                             00000000
_DDRHbits                         00000000
_DDRJ                             00000000
_DDRJbits                         00000000
_DisplayString                    00000000
_DisplayWORD                      00000000
_DisplayWORD_WDigit_1_1           00000000
_EBSTCON                          00000000
_EBSTCONbits                      00000000
_EBSTCS                           00000000
_EBSTCSH                          00000000
_EBSTCSL                          00000000
_EBSTSD                           00000000
_ECCP1AS                          00000000
_ECCP1ASbits                      00000000
_ECCP1CON                         00000000
_ECCP1CONbits                     00000000
_ECCP1DEL                         00000000
_ECCP1DELbits                     00000000
_ECCP2AS                          00000000
_ECCP2ASbits                      00000000
_ECCP2CON                         00000000
_ECCP2CONbits                     00000000
_ECCP2DEL                         00000000
_ECCP2DELbits                     00000000
_ECCP3AS                          00000000
_ECCP3ASbits                      00000000
_ECCP3CON                         00000000
_ECCP3CONbits                     00000000
_ECCP3DEL                         00000000
_ECCP3DELbits                     00000000
_ECON1                            00000000
_ECON1bits                        00000000
_ECON2                            00000000
_ECON2bits                        00000000
_EDATA                            00000000
_EDATAbits                        00000000
_EDMACS                           00000000
_EDMACSH                          00000000
_EDMACSL                          00000000
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_EDMADST                          00000000
_EDMADSTH                         00000000
_EDMADSTL                         00000000
_EDMAND                           00000000
_EDMANDH                          00000000
_EDMANDL                          00000000
_EDMAST                           00000000
_EDMASTH                          00000000
_EDMASTL                          00000000
_EECON1                           00000000
_EECON1bits                       00000000
_EECON2                           00000000
_EFLOCON                          00000000
_EFLOCONbits                      00000000
_EHT0                             00000000
_EHT1                             00000000
_EHT2                             00000000
_EHT3                             00000000
_EHT4                             00000000
_EHT5                             00000000
_EHT6                             00000000
_EHT7                             00000000
_EIE                              00000000
_EIEbits                          00000000
_EIR                              00000000
_EIRbits                          00000000
_EPAUS                            00000000
_EPAUSH                           00000000
_EPAUSL                           00000000
_EPKTCNT                          00000000
_EPMCS                            00000000
_EPMCSH                           00000000
_EPMCSL                           00000000
_EPMM0                            00000000
_EPMM1                            00000000
_EPMM2                            00000000
_EPMM3                            00000000
_EPMM4                            00000000
_EPMM5                            00000000
_EPMM6                            00000000
_EPMM7                            00000000
_EPMO                             00000000
_EPMOH                            00000000
_EPMOL                            00000000
_ERDPT                            00000000
_ERDPTH                           00000000
_ERDPTL                           00000000
_ERXFCON                          00000000
_ERXFCONbits                      00000000
_ERXND                            00000000
_ERXNDH                           00000000
_ERXNDL                           00000000
_ERXRDPT                          00000000
_ERXRDPTH                         00000000
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_ERXRDPTL                         00000000
_ERXST                            00000000
_ERXSTH                           00000000
_ERXSTL                           00000000
_ERXWRPT                          00000000
_ERXWRPTH                         00000000
_ERXWRPTL                         00000000
_ESTAT                            00000000
_ESTATbits                        00000000
_ETXND                            00000000
_ETXNDH                           00000000
_ETXNDL                           00000000
_ETXST                            00000000
_ETXSTH                           00000000
_ETXSTL                           00000000
_EWOLIE                           00000000
_EWOLIEbits                       00000000
_EWOLIR                           00000000
_EWOLIRbits                       00000000
_EWRPT                            00000000
_EWRPTH                           00000000
_EWRPTL                           00000000
_FSR0H                            00000000
_FSR0L                            00000000
_FSR1H                            00000000
_FSR1L                            00000000
_FSR2H                            00000000
_FSR2L                            00000000
_INDF0                            00000000
_INDF1                            00000000
_INDF2                            00000000
_INTCON                           00000000
_INTCON2                          00000000
_INTCON2bits                      00000000
_INTCON3                          00000000
_INTCON3bits                      00000000
_INTCONbits                       00000000
_IPR1                             00000000
_IPR1bits                         00000000
_IPR2                             00000000
_IPR2bits                         00000000
_IPR3                             00000000
_IPR3bits                         00000000
_LATA                             00000000
_LATAbits                         00000000
_LATB                             00000000
_LATBbits                         00000000
_LATC                             00000000
_LATCbits                         00000000
_LATD                             00000000
_LATDbits                         00000000
_LATE                             00000000
_LATEbits                         00000000
_LATF                             00000000
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_LATFbits                         00000000
_LATG                             00000000
_LATGbits                         00000000
_LATH                             00000000
_LATHbits                         00000000
_LATJ                             00000000
_LATJbits                         00000000
_LCDInit                          00000000
_LCDText                          00000000
_LCDUpdate                        00000000
_MAADR1                           00000000
_MAADR2                           00000000
_MAADR3                           00000000
_MAADR4                           00000000
_MAADR5                           00000000
_MAADR6                           00000000
_MABBIPG                          00000000
_MACLCON1                         00000000
_MACLCON1bits                     00000000
_MACLCON2                         00000000
_MACLCON2bits                     00000000
_MACON1                           00000000
_MACON1bits                       00000000
_MACON2                           00000000
_MACON2bits                       00000000
_MACON3                           00000000
_MACON3bits                       00000000
_MACON4                           00000000
_MACON4bits                       00000000
_MAIPG                            00000000
_MAIPGH                           00000000
_MAIPGL                           00000000
_MAMXFL                           00000000
_MAMXFLH                          00000000
_MAMXFLL                          00000000
_MEMCON                           00000000
_MEMCONbits                       00000000
_MICMD                            00000000
_MICMDbits                        00000000
_MICON                            00000000
_MICONbits                        00000000
_MIRD                             00000000
_MIRDH                            00000000
_MIRDL                            00000000
_MIREGADR                         00000000
_MISTAT                           00000000
_MISTATbits                       00000000
_MIWR                             00000000
_MIWRH                            00000000
_MIWRL                            00000000
_OSCCON                           00000000
_OSCCONbits                       00000000
_OSCTUNE                          00000000
_OSCTUNEbits                      00000000
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_PC                               00000000
_PCL                              00000000
_PCLATH                           00000000
_PCLATU                           00000000
_PIE1                             00000000
_PIE1bits                         00000000
_PIE2                             00000000
_PIE2bits                         00000000
_PIE3                             00000000
_PIE3bits                         00000000
_PIR1                             00000000
_PIR1bits                         00000000
_PIR2                             00000000
_PIR2bits                         00000000
_PIR3                             00000000
_PIR3bits                         00000000
_PLUSW0                           00000000
_PLUSW1                           00000000
_PLUSW2                           00000000
_PORTA                            00000000
_PORTAbits                        00000000
_PORTB                            00000000
_PORTBbits                        00000000
_PORTC                            00000000
_PORTCbits                        00000000
_PORTD                            00000000
_PORTDbits                        00000000
_PORTE                            00000000
_PORTEbits                        00000000
_PORTF                            00000000
_PORTFbits                        00000000
_PORTG                            00000000
_PORTGbits                        00000000
_PORTH                            00000000
_PORTHbits                        00000000
_PORTJ                            00000000
_PORTJbits                        00000000
_POSTDEC0                         00000000
_POSTDEC1                         00000000
_POSTDEC2                         00000000
_POSTINC0                         00000000
_POSTINC1                         00000000
_POSTINC2                         00000000
_PR2                              00000000
_PR4                              00000000
_PREINC0                          00000000
_PREINC1                          00000000
_PREINC2                          00000000
_PROD                             00000000
_PRODH                            00000000
_PRODL                            00000000
_PSPCON                           00000000
_PSPCONbits                       00000000
_RCON                             00000000
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_RCONbits                         00000000
_RCREG                            00000000
_RCREG1                           00000000
_RCREG2                           00000000
_RCSTA                            00000000
_RCSTA1                           00000000
_RCSTA1bits                       00000000
_RCSTA2                           00000000
_RCSTA2bits                       00000000
_RCSTAbits                        00000000
_SPBRG                            00000000
_SPBRG1                           00000000
_SPBRG2                           00000000
_SPBRGH                           00000000
_SPBRGH1                          00000000
_SPBRGH2                          00000000
_SSP1ADD                          00000000
_SSP1BUF                          00000000
_SSP1CON1                         00000000
_SSP1CON1bits                     00000000
_SSP1CON2                         00000000
_SSP1CON2bits                     00000000
_SSP1STAT                         00000000
_SSP1STATbits                     00000000
_SSP2ADD                          00000000
_SSP2BUF                          00000000
_SSP2CON1                         00000000
_SSP2CON1bits                     00000000
_SSP2CON2                         00000000
_SSP2CON2bits                     00000000
_SSP2STAT                         00000000
_SSP2STATbits                     00000000
_SSPADD                           00000000
_SSPBUF                           00000000
_SSPCON1                          00000000
_SSPCON1bits                      00000000
_SSPCON2                          00000000
_SSPCON2bits                      00000000
_SSPSTAT                          00000000
_SSPSTATbits                      00000000
_STATUS                           00000000
_STATUSbits                       00000000
_STKPTR                           00000000
_STKPTRbits                       00000000
_T0CON                            00000000
_T0CONbits                        00000000
_T1CON                            00000000
_T1CONbits                        00000000
_T2CON                            00000000
_T2CONbits                        00000000
_T3CON                            00000000
_T3CONbits                        00000000
_T4CON                            00000000
_T4CONbits                        00000000
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_TABLAT                           00000000
_TBLPTR                           00000000
_TBLPTRH                          00000000
_TBLPTRL                          00000000
_TBLPTRU                          00000000
_TMR0H                            00000000
_TMR0L                            00000000
_TMR1H                            00000000
_TMR1L                            00000000
_TMR2                             00000000
_TMR3H                            00000000
_TMR3L                            00000000
_TMR4                             00000000
_TOS                              00000000
_TOSH                             00000000
_TOSL                             00000000
_TOSU                             00000000
_TRISA                            00000000
_TRISAbits                        00000000
_TRISB                            00000000
_TRISBbits                        00000000
_TRISC                            00000000
_TRISCbits                        00000000
_TRISD                            00000000
_TRISDbits                        00000000
_TRISE                            00000000
_TRISEbits                        00000000
_TRISF                            00000000
_TRISFbits                        00000000
_TRISG                            00000000
_TRISGbits                        00000000
_TRISH                            00000000
_TRISHbits                        00000000
_TRISJ                            00000000
_TRISJbits                        00000000
_TXREG                            00000000
_TXREG1                           00000000
_TXREG2                           00000000
_TXSTA                            00000000
_TXSTA1                           00000000
_TXSTA1bits                       00000000
_TXSTA2                           00000000
_TXSTA2bits                       00000000
_TXSTAbits                        00000000
_WDTCON                           00000000
_WDTCONbits                       00000000
_WREG                             00000000
__18F97J60                        00000001
__gptrget1                        00000000
__gptrget2                        00000000
__gptrput1                        00000000
__gptrput2                        00000000
__str_0                           00000126
__str_1                           0000012C
gpasm-0.13.7 beta               Objects/timer.asm11-21-2017  09:21:54         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
__str_2                           0000013C
__str_3                           00000142
__str_4                           00000152
__str_5                           0000015A
__str_6                           0000016A
_assign_default_values            00000000
_clock                            00000000
_complete_hours_setting           00000000
_delay_1ms                        00000000
_delay_ms                         00000000
_flags                            00000000
_handle_button1_pressure          00000000
_handle_button2_pressure          00000000
_high_isr                         00000000
_in_setting                       00000000
_main                             00000000
_setting                          00000000
_sprintf                          00000000
_stdin                            00000000
_stdout                           00000000
_strlcpy                          00000000
_strlen                           00000000
_time_value                       00000000
_timer                            00000000
_ultoa                            00000000
_update_clock                     00000000
_update_proper_time_value         00000000
_update_time_value                00000000
ivec_0x1_high_isr                 00000008
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B
r0x0c                             0000000C
r0x0d                             0000000D
r0x0e                             0000000E
r0x0f                             0000000F
r0x10                             00000010
r0x11                             00000011
r0x12                             00000012
r0x13                             00000013
r0x14                             00000014
r0x15                             00000015


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

